/* =====================================
 * Form
 * =====================================
 * Elements which should be always
 * present inside a `form` element.
 */
fieldset {
  border: var(--fieldsetBorder);
  border-radius: var(--fieldsetBorderRadius);
  margin-bottom: var(--elementDefaultBottomMargin);
  padding-top: var(--fieldsetTopPadding);
  position: relative;

  & legend {
    display: block;
    font-family: var(--fieldsetLegendFont);
    font-size: var(--fieldsetLegendFontSize);
    height: 2.058em;
    overflow: hidden;
    position: absolute;
    top: 0;
  }
}

label {
  display: block;
  margin-bottom: var(--labelBottomMargin);
  font-weight: var(--labelFontWeight);
}

input,
textarea,
select {
  background-color: transparent;
  border: var(--textFieldBorder);
  border-radius: var(--roundedRectangleMarginAll);
  height: var(--textFieldHeight);
  outline: none;
  padding: 0 1rem;
  width: 100%;
}

input:focus,
textarea:focus,
select:focus {
  background-color: var(--textFieldFocusedBackgroundColor);
  border: var(--textFieldFocusedBorder);
}

button,
input,
select,
textarea {
  appearance: none;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

input[required]:valid {
  background-color: transparent;
  border: var(--inputValidBorder);
  color: var(--darkestContrastBGColor);
  outline: none;
}

input:invalid {
  background-color: transparent;
  border: var(--inputInvalidBorder);
  color: var(--darkestContrastBGColor);
  outline: none;

  &::placeholder {
    color: var(--inputInvalidPlaceholderColor);
  }

  &:focus {
    background-color: var(--inputFocusedBackgroundColor);
    border: var(--inputInvalidBorder);
    color: var(--inputFocusedColor);

    &::placeholder {
      color: var(--inputInvalidFocusedPlaceholderColor);
    }
  }
}

textarea {
  min-height: var(--textareaMinHeight);
  padding: var(--textareaPadding);
  width: 100%;
}

select {
  background: url("data:image/svg+xml;charset=utf-8,<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='#dbd6d0' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><polyline points='6 9 12 15 18 9'/></svg>") no-repeat right 1rem center;

  &:focus {
    background: url("data:image/svg+xml;charset=utf-8,<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='#0579c6' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><polyline points='6 9 12 15 18 9'/></svg>") no-repeat right 1rem center;
  }

  &:active {
    background: url("data:image/svg+xml;charset=utf-8,<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='#0579c6' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><polyline points='18 15 12 9 6 15'/></svg>") no-repeat right 1rem center;
  }

  &:disabled {
    color: var(--lighterContrastBGColor);
    cursor: not-allowed;
  }

  & optgroup,
  & option {
    color: var(--defaultColor);
  }
}
