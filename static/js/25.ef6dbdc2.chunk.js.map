{"version":3,"sources":["examples/Button/ExamplePlayground.jsx","components/constants.js","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/utils/icon-utils.js","components/Button/index.js","components/Button/Button.jsx","components/ArrowIcon/index.js","components/ArrowIcon/ArrowIcon.jsx","components/ArrowIcon/arrowIconOptions.js"],"names":["_useState2","_slicedToArray","_react","useState","isDisabled","setIsDisabled","_useState4","count","setCount","common","disabled","onClick","prevCount","default","createElement","Fragment","_ToggleButton","on","prevDisabled","onText","offText","style","textAlign","_Button","Object","assign","basic","text","marginBottom","block","iconOnly","icon","ArrowIcon","type","_interopRequireWildcard","__webpack_require__","_interopRequireDefault","_ArrowIcon","colors","primary","primaryLight","primaryFill","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","lineHeights","avatarSizes","smaller","small","_SvgIcon","_stringUtils","SvgIcon","_ref","fontSize","viewBox","children","svgProps","_objectWithoutProperties","xmlns","color","focusable","width","styleLengths","height","defaultProps","isDark","colorWhenBgDark","arguments","length","undefined","COLOR_WHITE","colorWhenBgLight","COLOR_DARK","_constants","_styledComponents","disabledStyles","css","COLOR_GRAY_BLUE","buttonIcon","_ref$type","_ref$iconOnly","Icon","attrs","withConfig","displayName","componentId","BasicButton","styled","div","_ref2","role","_ref3","COLOR_PRIMARY","_ref4","TYPE_FONT_SIZE_HEADING_6","_ref5","IconOnlyButton","_ref6","WideButton","_ref7","GRADIENT_PRIMARY","concat","_ref8","darkMode","theme","_ref9","_ref10","Button","_ref11","props","_arrowIconOptions","_iconUtils","ArrowLeftIcon","direction","commonProps","fill","stroke","iconDark","strokeLinecap","strokeMiterlimit","_arrowIconOptions$dir","arrowIconOptions","transform","d","id","x1","line","strokeLinejoin","left","right"],"mappings":"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","file":"static/js/25.ef6dbdc2.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport Button from 'alys/Button';\nimport ArrowIcon from 'alys/ArrowIcon';\n\nimport ToggleButton from '../../app/common/ToggleButton';\n\n/** Button playgound */\nexport default function ExamplePlayground() {\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [count, setCount] = useState(0);\n\n  const updateCount = () => setCount((prevCount) => prevCount + 1);\n  const toggleButtonDisabledState = () =>\n    setIsDisabled((prevDisabled) => !prevDisabled);\n\n  const common = {\n    disabled: isDisabled,\n    onClick: updateCount,\n  };\n\n  return (\n    <Fragment>\n      <ToggleButton\n        on={isDisabled}\n        onClick={toggleButtonDisabledState}\n        onText=\"enable\"\n        offText=\"disable\"\n      />\n\n      <p>\n        Count: <strong>{count}</strong>\n      </p>\n\n      <div style={{ textAlign: 'center' }}>\n        <Button\n          basic\n          text=\"basic\"\n          {...common}\n          style={{ marginBottom: '1em' }}\n        />\n\n        <Button block text=\"block\" {...common} />\n\n        <Button text=\"default\" {...common} />\n\n        <Button iconOnly icon={ArrowIcon} {...common} />\n\n        <Button type=\"link\" text=\"Link\" {...common} />\n      </div>\n    </Fragment>\n  );\n}\n","export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_PRIMARY_FILL = '#dce9ff';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_BLUE_GRAY = '#b0caff';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const COLOR_BLACK_ALPHA20 = 'rgba(0, 0, 0, 0.2)';\nexport const COLOR_SHADOW = COLOR_BLACK_ALPHA20;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const TYPE_LINE_HEIGHT_HEADING_1 = 1.5;\nexport const TYPE_LINE_HEIGHT_HEADING_2 = 1.75;\nexport const TYPE_LINE_HEIGHT_HEADING_3 = 1.625;\nexport const TYPE_LINE_HEIGHT_HEADING_4 = 1.25;\nexport const TYPE_LINE_HEIGHT_HEADING_5 = 1.125;\nexport const TYPE_LINE_HEIGHT_HEADING_6 = 1;\nexport const TYPE_LINE_HEIGHT_PARAGRAPH = 1.25;\n\nexport const AVATAR_SIZE_SMALLER = 2.5;\nexport const AVATAR_SIZE_SMALL = 3.75;\nexport const AVATAR_SIZE_DEFAULT = 6.25;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  primaryFill: COLOR_PRIMARY_FILL,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport const lineHeights = {\n  h1: TYPE_LINE_HEIGHT_HEADING_1,\n  h2: TYPE_LINE_HEIGHT_HEADING_2,\n  h3: TYPE_LINE_HEIGHT_HEADING_3,\n  h4: TYPE_LINE_HEIGHT_HEADING_4,\n  h5: TYPE_LINE_HEIGHT_HEADING_5,\n  h6: TYPE_LINE_HEIGHT_HEADING_6,\n  p: TYPE_LINE_HEIGHT_PARAGRAPH,\n};\n\nexport const avatarSizes = {\n  smaller: AVATAR_SIZE_SMALLER,\n  small: AVATAR_SIZE_SMALL,\n  default: AVATAR_SIZE_DEFAULT,\n};\n\nexport const type = {\n  fontSizes,\n  lineHeights,\n};\n\nexport default {\n  colors,\n  type,\n  avatarSizes,\n};\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nSvgIcon.defaultProps = {\n  fontSize: 24,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n","import { COLOR_WHITE, COLOR_DARK } from '@/constants';\n\n/** Determines the color of the icon depending on the background. */\nexport function iconDark(\n  isDark,\n  colorWhenBgDark = COLOR_WHITE,\n  colorWhenBgLight = COLOR_DARK,\n) {\n  return isDark ? colorWhenBgDark : colorWhenBgLight;\n}\n","export { default } from './Button';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport {\n  COLOR_PRIMARY,\n  COLOR_WHITE,\n  COLOR_GRAY_BLUE,\n  GRADIENT_PRIMARY,\n  TYPE_FONT_SIZE_HEADING_6,\n} from '@/constants';\nimport { styleLengths } from '@utils/string-utils';\n\nconst disabledStyles = css`\n  background-color: ${COLOR_GRAY_BLUE};\n\n  && {\n    cursor: default;\n  }\n`;\n\n/**\n * Returns `null` if an icon node is not provided. Otherwise, it returns a\n * styled <Icon /> component.\n */\nfunction buttonIcon({ icon, type = 'default', iconOnly = false }) {\n  if (!icon) {\n    return null;\n  }\n\n  const Icon = styled(icon).attrs(() => ({\n    dark: type !== 'link',\n  }))`\n    margin-right: ${iconOnly ? 0 : '1.125em'};\n    vertical-align: middle;\n\n    && svg {\n      font-size: 1.125em;\n    }\n  `;\n\n  return <Icon />;\n}\n\n/** Linear gradient value builder for the `background` property. */\nfunction linearGradient(colors) {\n  return `linear-gradient(to right, ${colors})`;\n}\n\nconst BasicButton = styled.div.attrs(({ text }) => ({\n  children: text,\n  role: 'button',\n}))`\n  border: 0;\n  outline: none;\n  user-select: none;\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  background: ${({ type }) =>\n    type === 'link' ? 'transparent' : COLOR_PRIMARY};\n  color: ${({ type }) => (type === 'link' ? COLOR_PRIMARY : COLOR_WHITE)};\n  text-transform: uppercase;\n  border-radius: 0.375em;\n  padding: 1em;\n  font-size: ${styleLengths(TYPE_FONT_SIZE_HEADING_6)};\n  font-weight: 500;\n  overflow: hidden;\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  ${({ disabled }) => disabled && disabledStyles}\n`;\n\nconst IconOnlyButton = styled(BasicButton).attrs(({ icon }) => ({\n  children: buttonIcon({ icon, iconOnly: true }),\n}))`\n  border-radius: 50%;\n`;\n\nconst WideButton = styled(BasicButton)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: ${({ type, disabled }) => {\n    if (disabled) {\n      return type === 'link' ? 'transparent' : COLOR_GRAY_BLUE;\n    }\n\n    return type === 'link' ? 'transparent' : linearGradient(GRADIENT_PRIMARY);\n  }};\n  color: ${({ type, disabled, theme: { darkMode } }) => {\n    if (type === 'link') {\n      if (disabled) {\n        return 'inherit';\n      }\n\n      return darkMode ? 'inherit' : COLOR_PRIMARY;\n    }\n\n    return COLOR_WHITE;\n  }};\n  border-radius: ${({ block }) => (block ? 0 : '0.375em')};\n  min-height: 4em;\n  margin: ${({ block }) => (block ? 0 : '1.25em 1.875em')};\n`;\n\n/**\n * Button signals to the user that an action can be performed by clicking or\n * taping this element.\n */\nexport default function Button({\n  basic,\n  text,\n  block,\n  type,\n  icon,\n  iconOnly,\n  ...props\n}) {\n  if (props.disabled) {\n    props.onClick = undefined;\n  }\n\n  if (iconOnly) {\n    return <IconOnlyButton icon={icon} {...props} />;\n  }\n\n  if (basic) {\n    return <BasicButton text={text} type={type} {...props} />;\n  }\n\n  return (\n    <WideButton block={block} type={type} {...props}>\n      {buttonIcon({ icon, type })} {text}\n    </WideButton>\n  );\n}\n\nButton.defaultProps = {\n  basic: false,\n  block: false,\n  color: 'default',\n  icon: null,\n  iconOnly: false,\n  type: 'default',\n  disabled: false,\n};\n\nButton.propTypes = {\n  /** Text to display on the button */\n  text: PropTypes.string,\n\n  /** Handler to call when button is clicked */\n  onClick: PropTypes.func,\n\n  /** If set to `true`, the button cannot be interacted with */\n  disabled: PropTypes.bool,\n\n  /**\n   * Button width is determined by the content. If set to `true`, the value of\n   * `icon` will be ignored.\n   */\n  basic: PropTypes.bool,\n\n  /** If set to `true`, the button's width will span it's container's width */\n  block: PropTypes.bool,\n\n  /** Button color preset */\n  color: PropTypes.oneOf(['default', 'secondary']),\n\n  /** Button type */\n  type: PropTypes.oneOf(['default', 'link']),\n\n  /** The icon to be displayed before the button text */\n  icon: PropTypes.func,\n\n  /**\n   * A button that contains only an icon. If this is set to `true` the value of\n   * `text` is ignored.\n   */\n  iconOnly: PropTypes.bool,\n};\n","export { default } from './ArrowIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { arrowIconOptions } from './arrowIconOptions';\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function ArrowLeftIcon({ dark, direction, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, color ? colors[color] : 'currentColor'),\n    strokeLinecap: 'round',\n    strokeMiterlimit: 10,\n  };\n  const { viewBox, transform, d } = arrowIconOptions[direction];\n\n  return (\n    <SvgIcon viewBox={viewBox} {...svgProps}>\n      <g id=\"arrow-icon\" transform=\"translate(0 0)\">\n        <line {...commonProps} id=\"line\" x1=\"17\" transform={transform.line} />\n        <path {...commonProps} id=\"path\" strokeLinejoin=\"round\" d={d} />\n      </g>\n    </SvgIcon>\n  );\n}\n\nArrowLeftIcon.defaultProps = {\n  dark: false,\n  direction: 'left',\n};\n\nArrowLeftIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Sets the direction */\n  direction: PropTypes.oneOf(['left', 'right']),\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n","export const arrowIconOptions = {\n  left: {\n    viewBox: '0 0 19 17.2',\n    transform: {\n      line: 'translate(1.5 8.6)',\n    },\n    d: 'M8.6.5.5,8.6l8.1,8.1',\n  },\n  right: {\n    viewBox: '0 0 18.8 17.2',\n    transform: {\n      line: 'translate(0.5 8.6)',\n    },\n    d: 'M10.2.5l8.1,8.1-8.1,8.1',\n  },\n};\n"],"sourceRoot":""}