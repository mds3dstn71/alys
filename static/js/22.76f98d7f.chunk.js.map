{"version":3,"sources":["examples/Button/ExampleTextOnlyIcon.jsx","components/constants.js","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/utils/icon-utils.js","components/Button/index.js","components/Button/Button.jsx","components/RegisterIcon/index.js","components/RegisterIcon/RegisterIcon.jsx"],"names":["_react","default","createElement","_Button","type","text","icon","RegisterIcon","onClick","_interopRequireDefault","__webpack_require__","_RegisterIcon","colors","primary","primaryLight","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","lineHeights","_SvgIcon","_stringUtils","SvgIcon","_ref","fontSize","viewBox","children","svgProps","_objectWithoutProperties","Object","assign","xmlns","color","focusable","width","styleLengths","height","defaultProps","isDark","colorWhenBgDark","arguments","length","undefined","COLOR_WHITE","colorWhenBgLight","COLOR_DARK","_constants","_styledComponents","BasicButton","styled","div","attrs","withConfig","displayName","componentId","COLOR_PRIMARY","TYPE_FONT_SIZE_HEADING_6","IconOnlyButton","OtherButton","_ref2","GRADIENT_PRIMARY","concat","_ref3","_ref4","block","_ref5","Button","_ref6","basic","iconOnly","ButtonIcon","_iconUtils","commonProps","fill","stroke","iconDark","strokeLinecap","strokeMiterlimit","id","transform","strokeLinejoin","d","x2","y2","data-name"],"mappings":"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","file":"static/js/22.76f98d7f.chunk.js","sourcesContent":["import React from 'react';\nimport Button from 'alys/Button';\nimport RegisterIcon from 'alys/RegisterIcon';\n\n/** Text-only type button with icon */\nexport default function ExampleTextOnlyIcon() {\n  return (\n    <Button\n      type=\"link\"\n      text=\"Example text only with icon\"\n      icon={RegisterIcon}\n      onClick={() => {}}\n    />\n  );\n}\n","export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const TYPE_LINE_HEIGHT_HEADING_1 = 1.5;\nexport const TYPE_LINE_HEIGHT_HEADING_2 = 1.75;\nexport const TYPE_LINE_HEIGHT_HEADING_3 = 1.625;\nexport const TYPE_LINE_HEIGHT_HEADING_4 = 1.25;\nexport const TYPE_LINE_HEIGHT_HEADING_5 = 1.125;\nexport const TYPE_LINE_HEIGHT_HEADING_6 = 1;\nexport const TYPE_LINE_HEIGHT_PARAGRAPH = 1.25;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport const lineHeights = {\n  h1: TYPE_LINE_HEIGHT_HEADING_1,\n  h2: TYPE_LINE_HEIGHT_HEADING_2,\n  h3: TYPE_LINE_HEIGHT_HEADING_3,\n  h4: TYPE_LINE_HEIGHT_HEADING_4,\n  h5: TYPE_LINE_HEIGHT_HEADING_5,\n  h6: TYPE_LINE_HEIGHT_HEADING_6,\n  p: TYPE_LINE_HEIGHT_PARAGRAPH,\n};\n\nexport const type = {\n  fontSizes,\n  lineHeights,\n};\n\nexport default {\n  colors,\n  type,\n};\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nconst SVG_ICON_DEFAULT_FONT_SIZE = 24;\n\nSvgIcon.defaultProps = {\n  fontSize: SVG_ICON_DEFAULT_FONT_SIZE,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n","import { COLOR_WHITE, COLOR_DARK } from '@/constants';\n\n/** Determines the color of the icon depending on the background. */\nexport function iconDark(\n  isDark,\n  colorWhenBgDark = COLOR_WHITE,\n  colorWhenBgLight = COLOR_DARK,\n) {\n  return isDark ? colorWhenBgDark : colorWhenBgLight;\n}\n","export { default } from './Button';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  COLOR_PRIMARY,\n  COLOR_WHITE,\n  GRADIENT_PRIMARY,\n  TYPE_FONT_SIZE_HEADING_6,\n} from '@/constants';\nimport { styleLengths } from '../utils/string-utils';\n\nconst linearGradient = (colors) => `linear-gradient(to right, ${colors})`;\n\n// @TODO+Button: Styles for Button states (hover, clicked, etc.)\nconst BasicButton = styled.div.attrs(({ text }) => ({\n  children: text,\n}))`\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  background: ${COLOR_PRIMARY};\n  color: ${COLOR_WHITE};\n  text-transform: uppercase;\n  border-radius: 0.375em;\n  padding: 1em;\n  font-size: ${styleLengths(TYPE_FONT_SIZE_HEADING_6)};\n  font-weight: 500;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst IconOnlyButton = styled(BasicButton)`\n  border-radius: 50%;\n`;\n\nconst OtherButton = styled(BasicButton)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: ${({ type }) =>\n    type === 'link' ? 'transparent' : linearGradient(GRADIENT_PRIMARY)};\n  color: ${({ type }) => (type === 'link' ? COLOR_PRIMARY : COLOR_WHITE)};\n  border-radius: ${({ block }) => (block ? 0 : '0.375em')};\n  min-height: 1.75em;\n  margin: ${({ block }) => (block ? 0 : '1.25em 1.875em')};\n`;\n\n/**\n * Button signals to the user that an action can be performed by clicking or\n * taping this element.\n */\nexport default function Button({ basic, text, block, type, icon, iconOnly }) {\n  // @WARN+Button: This components gets created every render!\n  let ButtonIcon = () => null;\n\n  if (icon) {\n    ButtonIcon = styled(icon).attrs(() => ({\n      dark: type !== 'link',\n      color: 'primary',\n    }))`\n      margin-right: ${iconOnly ? 0 : '1.125em'};\n      vertical-align: middle;\n\n      && svg {\n        font-size: 1.125em;\n      }\n    `;\n  }\n\n  return iconOnly ? (\n    <IconOnlyButton>\n      <ButtonIcon />\n    </IconOnlyButton>\n  ) : basic ? (\n    <BasicButton text={text} />\n  ) : (\n    <OtherButton block={block} type={type}>\n      <ButtonIcon /> {text}\n    </OtherButton>\n  );\n}\n\nButton.defaultProps = {\n  basic: false,\n  block: false,\n  color: 'default',\n  icon: null,\n  iconOnly: false,\n  type: 'default',\n};\n\nButton.propTypes = {\n  /** Handler to call when button is clicked */\n  onClick: PropTypes.func.isRequired,\n\n  /** Text to display on the button */\n  text: PropTypes.string,\n\n  /**\n   * Button width is determined by the content. If set to `true`, the value of\n   * `icon` will be ignored.\n   */\n  basic: PropTypes.bool,\n\n  /** Button width should span it's container's width */\n  block: PropTypes.bool,\n\n  /** Button color */\n  color: PropTypes.oneOf(['default', 'secondary']),\n\n  /** Button type */\n  type: PropTypes.oneOf(['default', 'link']),\n\n  /** The icon before the button text */\n  icon: PropTypes.func,\n\n  /**\n   * Button with only an icon. If this is set to `true` the value of `text` is\n   * ignored.\n   */\n  iconOnly: PropTypes.bool,\n};\n","export { default } from './RegisterIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function RegisterIcon({ dark, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, color ? colors[color] : 'currentColor'),\n    strokeLinecap: 'round',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox=\"0 0 19.25 19.306\" {...svgProps}>\n      <g id=\"register-icon\" transform=\"translate(0 0.105)\">\n        <path\n          {...commonProps}\n          id=\"path\"\n          strokeLinejoin=\"round\"\n          d=\"M4.3,17.7l-3.8,1,1-3.9L15.8.6a.483.483,0,0,1,.7,0l2.1,2.1a.483.483,0,0,1,0,.7Z\"\n        />\n        <line\n          {...commonProps}\n          id=\"line\"\n          x2=\"2.8\"\n          y2=\"2.8\"\n          transform=\"translate(14.7 1.7)\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-2\"\n          data-name=\"path\"\n          d=\"M1.8,9.4V1.9H9.3\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-3\"\n          data-name=\"path\"\n          d=\"M16.8,10.4v7.5H9.3\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nRegisterIcon.defaultProps = {\n  dark: false,\n};\n\nRegisterIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n"],"sourceRoot":""}