(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{10:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=n.props;return r.default.createElement(s,null,r.default.createElement("thead",null,r.default.createElement("tr",null,r.default.createElement(m,{width:20},"Name"),r.default.createElement(m,{width:50},"Description"),r.default.createElement(m,{width:15},"Type"),r.default.createElement(m,{width:15},"Default"))),r.default.createElement("tbody",null,Object.entries(e).map(function(n){var e,o,t=(o=2,function(n){if(Array.isArray(n))return n}(e=n)||function(n,e){var o=[],r=!0,t=!1,a=void 0;try{for(var i,c=n[Symbol.iterator]();!(r=(i=c.next()).done)&&(o.push(i.value),!e||o.length!==e);r=!0);}catch(p){t=!0,a=p}finally{try{r||null==c.return||c.return()}finally{if(t)throw a}}return o}(e,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()),a=t[0],i=t[1],p=i.description,s=i.type;return r.default.createElement("tr",{key:a},r.default.createElement(l,null,a),r.default.createElement(l,null,p),r.default.createElement(l,null,r.default.createElement("code",null,s.name),"enum"===s.name&&r.default.createElement(r.default.Fragment,null,":"," ",(0,c.parseType)(s).map(function(n){return r.default.createElement("code",{key:"".concat(a,"-").concat(n)},n)}).reduce(function(n,e){return[n," | ",e]})),"union"===s.name&&r.default.createElement(r.default.Fragment,null,":"," ",(0,c.parseType)(s).map(function(n){return r.default.createElement("code",{key:"".concat(a,"-").concat(n)},n)}).reduce(function(n,e){return[n,", ",e]})),"custom"===s.name&&r.default.createElement(r.default.Fragment,null,": ",r.default.createElement("code",null,(0,c.parseType)(s)))),r.default.createElement(l,{required:i.required},i.defaultValue&&i.defaultValue.value,i.required&&"required"))})))},e.propItemPropsShape=void 0;var r=p(o(0)),t=p(o(3)),a=p(o(1)),i=o(7),c=o(91);function p(n){return n&&n.__esModule?n:{default:n}}var s=a.default.table.withConfig({displayName:"Props__Table",componentId:"bswrio-0"})(["width:100%;"]),m=a.default.td.withConfig({displayName:"Props__HeaderCell",componentId:"bswrio-1"})(["text-align:",";padding:5px;font-weight:700;width:",";"],function(n){return n.centered?"center":"left"},function(n){var e=n.width,o=void 0===e?"auto":e;return(0,i.styleLengths)(o,"%")}),l=a.default.td.attrs(function(n){return{title:n.required?"This prop is required by the component.":null}}).withConfig({displayName:"Props__DataCell",componentId:"bswrio-2"})(["padding:5px;text-align:",";color:",";"],function(n){return n.centered?"center":"left"},function(n){var e=n.required,o=n.color;return e?"#aaa":o}),d=t.default.shape({description:t.default.string.isRequired,type:t.default.shape({name:t.default.string}).isRequired,defaultValue:t.default.shape({value:t.default.any}),required:t.default.bool});e.propItemPropsShape=d},7:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.pluralize=function(n){return"".concat(n,"s")},e.styleLengths=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"px";if(isNaN((0,r.filterInt)(n)))return n;return"".concat(n).concat(e)};var r=o(90)},73:function(n,e,o){n.exports=o(74)},74:function(n,e,o){"use strict";var r=i(o(0)),t=i(o(4)),a=i(o(79));function i(n){return n&&n.__esModule?n:{default:n}}o(93),t.default.render(r.default.createElement(a.default,null),document.getElementById("root"))},79:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r=function(n){if(n&&n.__esModule)return n;var e={};if(null!=n)for(var o in n)if(Object.prototype.hasOwnProperty.call(n,o)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(n,o):{};r.get||r.set?Object.defineProperty(e,o,r):e[o]=n[o]}return e.default=n,e}(o(0)),t=p(o(80)),a=p(o(87)),i=p(o(88)),c=p(o(92));function p(n){return n&&n.__esModule?n:{default:n}}function s(n){return(s="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function m(n,e){for(var o=0;o<e.length;o++){var r=e[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function l(n,e){return!e||"object"!==s(e)&&"function"!==typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function d(n){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function f(n,e){return(f=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}var u=function(n){function e(){var n,o;!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var r=arguments.length,t=new Array(r),a=0;a<r;a++)t[a]=arguments[a];return(o=l(this,(n=d(e)).call.apply(n,[this].concat(t)))).state={route:o._getRoute()},o._setRouteState=function(){o.setState({route:o._getRoute()})},o}var o,p,s;return function(n,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&f(n,e)}(e,r.Component),o=e,(p=[{key:"componentDidMount",value:function(){window.addEventListener("hashchange",this._setRouteState)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("hashchange",this._setRouteState)}},{key:"render",value:function(){var n=this.state.route,e=n?c.default.filter(function(e){return e.name===n})[0]:c.default[0];return r.default.createElement(r.default.Fragment,null,r.default.createElement(t.default,{title:"Alys docs"}),r.default.createElement(a.default,{components:c.default.map(function(n){return n.name})}),r.default.createElement(i.default,{component:e}))}},{key:"_getRoute",value:function(){return window.location.hash.substr(1)}}])&&m(o.prototype,p),s&&m(o,s),e}();e.default=u},80:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=n.title;return r.default.createElement(p,{as:"a",href:"/"},r.default.createElement(c,null),r.default.createElement(s,null,e))};var r=i(o(0)),t=i(o(1)),a=o(86);function i(n){return n&&n.__esModule?n:{default:n}}var c=(0,t.default)(a.ReactComponent).attrs(function(){return{height:"20px",width:"20px"}}).withConfig({displayName:"Header__AlysLogo",componentId:"sc-1mxonwx-0"})(["margin-bottom:-0.3em;"]),p=t.default.div.withConfig({displayName:"Header__Wrapper",componentId:"sc-1mxonwx-1"})(["display:flex;align-items:center;margin:0;padding:1em;color:#fff;background-color:#333;border-bottom:1px solid #d4dadf;box-shadow:0 1px 1px 0 rgba(116,129,141,0.1);text-decoration:none;&:visited{color:#fff;}"]),s=t.default.h1.withConfig({displayName:"Header__Text",componentId:"sc-1mxonwx-2"})(["font-size:1.5em;line-height:1.5;font-weight:500;padding-left:1em;margin:0;"])},86:function(n,e,o){"use strict";o.r(e),o.d(e,"ReactComponent",function(){return p});var r=o(0),t=o.n(r);function a(){return(a=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(n[r]=o[r])}return n}).apply(this,arguments)}var i=t.a.createElement("metadata",null,"Created by potrace 1.11, written by Peter Selinger 2001-2013"),c=t.a.createElement("g",{transform:"translate(0.000000,760.000000) scale(0.100000,-0.100000)",fill:"#fff",stroke:"none"},t.a.createElement("path",{d:"M3785 7518 c-24 -82 -148 -458 -172 -523 -10 -27 -21 -51 -25 -53 -5\n-2 -8 -11 -8 -21 0 -9 -7 -27 -16 -39 -8 -12 -13 -22 -11 -22 3 0 -17 -41 -44\n-92 -27 -51 -49 -96 -49 -100 0 -4 -4 -8 -10 -8 -5 0 -10 -5 -10 -12 0 -9\n-131 -213 -162 -253 -4 -5 -38 -48 -75 -95 -79 -100 -148 -181 -262 -309 -128\n-144 -538 -559 -772 -783 -73 -69 -297 -281 -428 -404 -46 -44 -115 -109 -154\n-146 -39 -38 -75 -68 -79 -68 -4 0 -8 -3 -8 -7 0 -5 -67 -76 -148 -158 -81\n-83 -158 -166 -172 -185 -14 -19 -33 -42 -43 -53 -34 -35 -144 -212 -195 -312\n-96 -192 -126 -266 -154 -380 -19 -79 -22 -118 -22 -315 0 -124 3 -250 7 -280\n4 -30 9 -67 11 -82 3 -15 11 -56 20 -90 63 -252 183 -447 387 -631 90 -81 90\n-81 129 -108 19 -13 42 -31 52 -40 10 -9 31 -22 46 -30 15 -8 29 -17 32 -20\n21 -25 253 -114 326 -125 22 -3 50 -7 64 -10 123 -23 441 -22 580 1 451 77\n806 318 1097 746 32 46 81 118 108 158 28 40 70 94 94 120 l44 46 12 -28 c13\n-33 10 -157 -10 -362 -3 -22 -6 -60 -9 -85 -7 -81 -17 -155 -21 -170 -2 -8 -7\n-35 -10 -60 -3 -25 -8 -52 -11 -61 -3 -10 -7 -30 -9 -45 -2 -16 -9 -49 -16\n-74 -6 -25 -12 -52 -14 -60 -3 -13 -31 -118 -39 -145 -2 -5 -6 -17 -9 -25 -3\n-8 -15 -44 -28 -80 -67 -200 -185 -415 -321 -587 -67 -86 -222 -243 -308 -313\n-30 -25 -60 -49 -67 -55 -7 -5 -18 -15 -25 -20 -42 -34 -199 -131 -256 -158\n-37 -18 -74 -37 -82 -42 -8 -6 -28 -15 -45 -21 -16 -6 -67 -25 -113 -42 -45\n-18 -93 -34 -105 -37 -12 -3 -65 -17 -117 -31 -52 -14 -106 -28 -120 -30 -14\n-3 -45 -10 -70 -15 -47 -11 -80 -17 -140 -24 -19 -2 -35 -4 -35 -5 0 -2 -35\n-8 -85 -15 -231 -30 -315 -51 -344 -86 -13 -15 -22 -38 -21 -51 1 -13 3 -29 4\n-35 0 -7 16 -19 35 -27 88 -37 335 -41 2441 -41 1722 0 2223 4 2315 20 14 2\n41 6 61 9 52 8 65 14 77 40 21 47 3 100 -42 120 -41 19 -153 45 -256 60 -19 3\n-46 8 -60 11 -14 3 -41 7 -60 10 -36 5 -121 18 -130 20 -3 1 -23 5 -45 9 -22\n5 -65 14 -95 21 -30 8 -66 16 -80 18 -14 3 -80 23 -147 46 -453 152 -871 444\n-1083 756 -19 28 -42 59 -52 70 -9 11 -18 25 -19 30 -1 6 -19 44 -39 87 -21\n42 -40 84 -43 95 -3 10 -20 56 -37 103 -52 146 -122 410 -151 570 -35 204 -40\n259 -46 540 l-5 235 21 -22 c12 -12 21 -26 21 -31 0 -4 8 -17 18 -28 24 -27\n62 -82 62 -89 0 -3 5 -11 10 -18 6 -7 45 -62 88 -122 81 -116 82 -118 178\n-229 203 -235 487 -447 699 -523 56 -20 80 -26 160 -39 133 -22 182 -25 355\n-28 194 -3 321 11 415 46 73 26 239 108 243 120 2 4 9 8 16 8 23 0 212 146\n287 222 124 124 187 208 256 338 42 80 95 215 87 223 -2 2 0 15 5 28 17 45 26\n193 25 399 -1 187 -11 297 -39 425 -4 17 -8 35 -9 40 -1 6 -4 15 -7 20 -4 6\n-9 22 -13 37 -3 15 -11 40 -18 55 -6 15 -12 30 -13 33 -11 36 -96 192 -140\n256 -34 50 -128 179 -134 184 -4 3 -17 18 -29 34 -25 32 -103 123 -172 200\n-163 180 -312 335 -800 826 -432 434 -607 615 -745 765 -49 54 -97 105 -105\n114 -8 9 -53 61 -98 116 -46 55 -91 109 -101 120 -9 11 -32 43 -51 70 -19 28\n-38 52 -41 55 -10 9 -86 125 -85 130 0 3 -14 26 -32 52 -45 66 -131 241 -187\n383 -26 66 -51 129 -56 140 -4 11 -36 99 -70 195 -76 216 -70 200 -78 200 -4\n0 -16 -28 -26 -62z"})),p=function(n){return t.a.createElement("svg",a({version:1,width:"20px",height:"20px",viewBox:"0 0 760.000000 760.000000",preserveAspectRatio:"xMidYMid meet"},n),i,c)};e.default=o.p+"static/media/logo-icon.3fa9413b.svg"},87:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=n.components;return r.default.createElement(a,null,e.map(function(n){return r.default.createElement("li",{key:n},r.default.createElement("a",{href:"#".concat(n)},n))}))};var r=t(o(0));function t(n){return n&&n.__esModule?n:{default:n}}var a=t(o(1)).default.ul.withConfig({displayName:"Navigation__List",componentId:"wv9fm5-0"})(["float:left;width:16em;list-style-type:none;padding:1em;display:none;@media (min-width:60em){display:block;}"])},88:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=n.component,o=e.name,r=e.description,a=e.props,m=e.examples,l=m.length;return t.default.createElement(s,null,t.default.createElement("h2",null,t.default.createElement("code",null,o)),t.default.createElement("p",null,r),t.default.createElement("h3",null,l>1&&(0,i.pluralize)("Example")),l>0?m.map(function(n){return t.default.createElement(t.Suspense,{key:n.code,fallback:t.default.createElement(t.default.Fragment,null,"Loading...")},t.default.createElement(c,{example:n,componentName:o}))}):"No examples exist.",t.default.createElement("h3",null,"Props"),a?t.default.createElement(t.Suspense,{fallback:t.default.createElement(t.default.Fragment,null,"Loading...")},t.default.createElement(p,{props:a})):"This component accepts no props.")};var r,t=function(n){if(n&&n.__esModule)return n;var e={};if(null!=n)for(var o in n)if(Object.prototype.hasOwnProperty.call(n,o)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(n,o):{};r.get||r.set?Object.defineProperty(e,o,r):e[o]=n[o]}return e.default=n,e}(o(0)),a=(r=o(1))&&r.__esModule?r:{default:r},i=(o(9),o(10),o(7));var c=t.default.lazy(function(){return Promise.resolve().then(o.t.bind(null,9,7))}),p=t.default.lazy(function(){return Promise.resolve().then(o.t.bind(null,10,7))}),s=a.default.div.withConfig({displayName:"ComponentPage__Wrapper",componentId:"pztnse-0"})(["margin-left:0;margin-bottom:1em;padding:1em;@media (min-width:60em){padding:0;margin-left:18.5em;}"])},89:function(n,e,o){var r={"./AddMentorIcon/ExampleBasic":[15,0],"./AddMentorIcon/ExampleBasic.jsx":[15,0],"./ArrowLeftIcon/ExampleBasic":[16,1],"./ArrowLeftIcon/ExampleBasic.jsx":[16,1],"./ArrowRightIcon/ExampleBasic":[17,2],"./ArrowRightIcon/ExampleBasic.jsx":[17,2],"./AttachmentIcon/ExampleBasic":[18,3],"./AttachmentIcon/ExampleBasic.jsx":[18,3],"./Avatar/ExampleDefaultSmaller":[19,4],"./Avatar/ExampleDefaultSmaller.jsx":[19,4],"./Avatar/ExampleNormal":[20,5],"./Avatar/ExampleNormal.jsx":[20,5],"./Avatar/ExampleOutlined":[21,6],"./Avatar/ExampleOutlined.jsx":[21,6],"./Avatar/ExampleSmallRound":[22,7],"./Avatar/ExampleSmallRound.jsx":[22,7],"./Avatar/ExampleSmallSize":[23,8],"./Avatar/ExampleSmallSize.jsx":[23,8],"./Avatar/ExampleSmaller":[24,9],"./Avatar/ExampleSmaller.jsx":[24,9],"./CameraFlipIcon/ExampleBasic":[25,10],"./CameraFlipIcon/ExampleBasic.jsx":[25,10],"./CameraIcon/ExampleBasic":[26,11],"./CameraIcon/ExampleBasic.jsx":[26,11],"./CardIcon/ExampleBasic":[27,12],"./CardIcon/ExampleBasic.jsx":[27,12],"./ChevronLeftIcon/ExampleBasic":[28,13],"./ChevronLeftIcon/ExampleBasic.jsx":[28,13],"./ChevronRightIcon/ExampleBasic":[29,14],"./ChevronRightIcon/ExampleBasic.jsx":[29,14],"./ClockIcon/ExampleBasic":[30,15],"./ClockIcon/ExampleBasic.jsx":[30,15],"./CloseIcon/ExampleBasic":[31,16],"./CloseIcon/ExampleBasic.jsx":[31,16],"./CommentIcon/ExampleBasic":[32,17],"./CommentIcon/ExampleBasic.jsx":[32,17],"./ComputerIcon/ExampleBasic":[33,18],"./ComputerIcon/ExampleBasic.jsx":[33,18],"./ConfirmIcon/ExampleBasic":[34,19],"./ConfirmIcon/ExampleBasic.jsx":[34,19],"./EmailIcon/ExampleBasic":[35,20],"./EmailIcon/ExampleBasic.jsx":[35,20],"./EnlargeIcon/ExampleBasic":[36,21],"./EnlargeIcon/ExampleBasic.jsx":[36,21],"./FiltersIcon/ExampleBasic":[37,22],"./FiltersIcon/ExampleBasic.jsx":[37,22],"./HappyIcon/ExampleBasic":[38,23],"./HappyIcon/ExampleBasic.jsx":[38,23],"./HomeIcon/ExampleBasic":[39,24],"./HomeIcon/ExampleBasic.jsx":[39,24],"./LaptopIcon/ExampleBasic":[40,25],"./LaptopIcon/ExampleBasic.jsx":[40,25],"./LikeIcon/ExampleBasic":[41,26],"./LikeIcon/ExampleBasic.jsx":[41,26],"./LiveIcon/ExampleBasic":[42,27],"./LiveIcon/ExampleBasic.jsx":[42,27],"./LocationIcon/ExampleBasic":[43,28],"./LocationIcon/ExampleBasic.jsx":[43,28],"./MentorIcon/ExampleBasic":[44,29],"./MentorIcon/ExampleBasic.jsx":[44,29],"./MicrophoneIcon/ExampleBasic":[45,30],"./MicrophoneIcon/ExampleBasic.jsx":[45,30],"./NewIcon/ExampleBasic":[46,31],"./NewIcon/ExampleBasic.jsx":[46,31],"./OptionsIcon/ExampleBasic":[47,32],"./OptionsIcon/ExampleBasic.jsx":[47,32],"./PasswordIcon/ExampleBasic":[48,33],"./PasswordIcon/ExampleBasic.jsx":[48,33],"./PencilIcon/ExampleBasic":[49,34],"./PencilIcon/ExampleBasic.jsx":[49,34],"./PhoneIcon/ExampleBasic":[50,35],"./PhoneIcon/ExampleBasic.jsx":[50,35],"./PhoneXIcon/ExampleBasic":[51,36],"./PhoneXIcon/ExampleBasic.jsx":[51,36],"./PreviewIcon/ExampleBasic":[52,37],"./PreviewIcon/ExampleBasic.jsx":[52,37],"./ProgressBar/Example100Percent":[53,38],"./ProgressBar/Example100Percent.jsx":[53,38],"./ProgressBar/Example10Percent":[54,39],"./ProgressBar/Example10Percent.jsx":[54,39],"./ProgressBar/Example20pxHeight":[55,40],"./ProgressBar/Example20pxHeight.jsx":[55,40],"./ProgressBar/Example70Percent":[56,41],"./ProgressBar/Example70Percent.jsx":[56,41],"./Rating/Example0Stars":[57,42],"./Rating/Example0Stars.jsx":[57,42],"./Rating/Example3Stars":[58,43],"./Rating/Example3Stars.jsx":[58,43],"./Rating/Example5Stars":[59,44],"./Rating/Example5Stars.jsx":[59,44],"./Rating/ExampleSecondary3Stars":[60,45],"./Rating/ExampleSecondary3Stars.jsx":[60,45],"./RegisterIcon/ExampleBasic":[61,46],"./RegisterIcon/ExampleBasic.jsx":[61,46],"./RemoveMentorIcon/ExampleBasic":[62,47],"./RemoveMentorIcon/ExampleBasic.jsx":[62,47],"./SadIcon/ExampleBasic":[63,48],"./SadIcon/ExampleBasic.jsx":[63,48],"./SearchIcon/ExampleBasic":[64,49],"./SearchIcon/ExampleBasic.jsx":[64,49],"./SettingsIcon/ExampleBasic":[65,50],"./SettingsIcon/ExampleBasic.jsx":[65,50],"./SignOutIcon/ExampleBasic":[66,51],"./SignOutIcon/ExampleBasic.jsx":[66,51],"./SpeakerIcon/ExampleBasic":[67,52],"./SpeakerIcon/ExampleBasic.jsx":[67,52],"./StreamIcon/ExampleBasic":[68,53],"./StreamIcon/ExampleBasic.jsx":[68,53],"./SvgIcon/ExampleEyeIcon":[14,54],"./SvgIcon/ExampleEyeIcon.jsx":[14,54],"./SvgIcon/ExampleEyeIcon4em":[69,55],"./SvgIcon/ExampleEyeIcon4em.jsx":[69,55],"./SvgIcon/ExampleEyeIcon64px":[70,56],"./SvgIcon/ExampleEyeIcon64px.jsx":[70,56],"./TabletIcon/ExampleBasic":[71,57],"./TabletIcon/ExampleBasic.jsx":[71,57],"./TrashIcon/ExampleBasic":[72,58],"./TrashIcon/ExampleBasic.jsx":[72,58]};function t(n){var e=r[n];return e?o.e(e[1]).then(function(){var n=e[0];return o.t(n,7)}):Promise.resolve().then(function(){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e})}t.keys=function(){return Object.keys(r)},t.id=89,n.exports=t},9:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=e.examplePropsShape=void 0;var r=function(n){if(n&&n.__esModule)return n;var e={};if(null!=n)for(var o in n)if(Object.prototype.hasOwnProperty.call(n,o)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(n,o):{};r.get||r.set?Object.defineProperty(e,o,r):e[o]=n[o]}return e.default=n,e}(o(0)),t=i(o(3)),a=i(o(1));function i(n){return n&&n.__esModule?n:{default:n}}function c(n){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,e){for(var o=0;o<e.length;o++){var r=e[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function s(n,e){return!e||"object"!==c(e)&&"function"!==typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function m(n){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function l(n,e){return(l=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}var d=r.default.lazy(function(){return o.e(60).then(o.t.bind(null,95,7))}),f=a.default.div.withConfig({displayName:"Example__Wrapper",componentId:"mj6qt3-0"})(["border:solid 1px #d3d3d3;padding:1em;margin-bottom:1em;background-color:#f4f6f9;"]),u=a.default.h4.withConfig({displayName:"Example__Description",componentId:"mj6qt3-1"})(["margin-top:0;"]),g=a.default.p.withConfig({displayName:"Example__ButtonWrapper",componentId:"mj6qt3-2"})(["margin-bottom:0;"]),v=t.default.shape({code:t.default.string.isRequired,description:t.default.string,name:t.default.string.isRequired});e.examplePropsShape=v;var k=function(n){function e(){var n,o;!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var r=arguments.length,t=new Array(r),a=0;a<r;a++)t[a]=arguments[a];return(o=s(this,(n=m(e)).call.apply(n,[this].concat(t)))).state={showCode:!1},o._toggleCode=function(n){n.preventDefault(),o.setState(function(n){return{showCode:!n.showCode}})},o}var t,a,i;return function(n,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&l(n,e)}(e,r.Component),t=e,(a=[{key:"render",value:function(){var n=this,e=this.state.showCode,t=this.props.example,a=t.code,i=t.description,c=t.name,p=r.default.lazy(function(){return o(89)("./".concat(n.props.componentName,"/").concat(c))});return r.default.createElement(f,null,i&&r.default.createElement(u,null,i),r.default.createElement(r.Suspense,{fallback:r.default.createElement("div",null,"Loading...")},r.default.createElement(p,null)),r.default.createElement(g,null,r.default.createElement("button",{onClick:this._toggleCode},e?"Hide":"Show"," Code")),e&&r.default.createElement(r.Suspense,{fallback:r.default.createElement("pre",null,r.default.createElement("code",null,"Loading..."))},r.default.createElement(d,null,a)))}}])&&p(t.prototype,a),i&&p(t,i),e}();e.default=k},90:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.filterInt=function(n){if(/^(-|\+)?([0-9]+|Infinity)$/.test(n))return Number(n);return NaN}},91:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.parseType=function(n){var e=n.name,o=n.value;if(!e)return[];switch(e){case t:return function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).map(function(n){return n.value.replace(/'/g,"")})}(o);case r:return function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).map(function(n){return"arrayOf"===n.name?"".concat(n.value.name,"[]"):i(n)})}(o);case a:default:return[i(n)]}},e.PROPTYPE_CUSTOM=e.PROPTYPE_ENUM=e.PROPTYPE_UNION=e.PROPTYPE_SIMPLE=void 0;e.PROPTYPE_SIMPLE="simple";var r="union";e.PROPTYPE_UNION=r;var t="enum";e.PROPTYPE_ENUM=t;var a="custom";function i(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return n.name===a?n.raw:n.name}e.PROPTYPE_CUSTOM=a},92:function(n,e,o){"use strict";n.exports=[{name:"AddMentorIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function AddMentorIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 23.7 23.5" {...svgProps}>\n      <g id="add-mentor-icon" transform="translate(0 0)">\n        <path {...commonProps} id="path" d="M5.5,13.6v3l-5,2.3" />\n        <path {...commonProps} id="path-2" data-name="path" d="M13.4,17.5" />\n        <path {...commonProps} id="path-3" data-name="path" d="M13.1,17.4" />\n        <path\n          {...commonProps}\n          id="path-4"\n          data-name="path"\n          d="M11.3,13.6v3l1.8.8"\n        />\n        <path\n          {...commonProps}\n          id="path-5"\n          data-name="path"\n          d="M10.2,14.1a5.2,5.2,0,0,0,3.5-4.9V4.6A4.055,4.055,0,0,0,9.6.5H7.3A4.055,4.055,0,0,0,3.2,4.6V9.2a5.2,5.2,0,0,0,3.5,4.9"\n        />\n        <circle\n          {...commonProps}\n          id="ellipse"\n          cx="5"\n          cy="5"\n          r="5"\n          transform="translate(13.2 13)"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          y2="4"\n          transform="translate(18.2 16)"\n        />\n        <line\n          {...commonProps}\n          id="line-2"\n          data-name="line"\n          x1="4"\n          transform="translate(16.2 18)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nAddMentorIcon.defaultProps = {\n  dark: false,\n};\n\nAddMentorIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic add mentor icon",code:"import React from 'react';\nimport AddMentorIcon from 'alys/AddMentorIcon';\n\n/** Basic add mentor icon */\nexport default function ExampleBasic() {\n  return <AddMentorIcon />;\n}\n"}]},{name:"ArrowLeftIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function ArrowLeftIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 19 17.2" {...svgProps}>\n      <g id="arrow-left-icon" transform="translate(0 0)">\n        <line\n          {...commonProps}\n          id="line"\n          x1="17"\n          transform="translate(1.5 8.6)"\n        />\n        <path\n          {...commonProps}\n          id="path"\n          strokeLinejoin="round"\n          d="M8.6.5.5,8.6l8.1,8.1"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nArrowLeftIcon.defaultProps = { dark: false };\n\nArrowLeftIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic arrow left icon",code:"import React from 'react';\nimport ArrowLeftIcon from 'alys/ArrowLeftIcon';\n\n/** Basic arrow left icon */\nexport default function ExampleBasic() {\n  return <ArrowLeftIcon />;\n}\n"}]},{name:"ArrowRightIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function ArrowLeftIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 18.8 17.2" {...svgProps}>\n      <g id="arrow-right-icon" transform="translate(0 0)">\n        <line\n          {...commonProps}\n          id="Line_375"\n          data-name="Line 375"\n          x2="17"\n          transform="translate(0.5 8.6)"\n        />\n        <path\n          {...commonProps}\n          id="Path_1156"\n          data-name="Path 1156"\n          strokeLinejoin="round"\n          d="M10.2.5l8.1,8.1-8.1,8.1"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nArrowLeftIcon.defaultProps = { dark: false };\n\nArrowLeftIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic arrow right icon",code:"import React from 'react';\nimport ArrowRightIcon from 'alys/ArrowRightIcon';\n\n/** Basic arrow right icon */\nexport default function ExampleBasic() {\n  return <ArrowRightIcon />;\n}\n"}]},{name:"AttachmentIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function AttachmentIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 17.9 19.3" {...svgProps}>\n      <g id="attachment-icon" transform="translate(0.05 -0.05)">\n        <path\n          {...commonProps}\n          id="path"\n          d="M9.6,3.3,1.8,11.1a4.468,4.468,0,0,0,0,6.4h0a4.468,4.468,0,0,0,6.4,0L16,9.7"\n        />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          d="M7.5,15.3l8.8-8.8a3.383,3.383,0,0,0,0-4.9h0a3.383,3.383,0,0,0-4.9,0L3.2,9.7"\n        />\n        <path {...commonProps} id="path-3" data-name="path" d="M2.9,15" />\n        <line\n          {...commonProps}\n          id="line"\n          x1="7.1"\n          y2="7.1"\n          transform="translate(3.9 4.7)"\n        />\n        <path\n          {...commonProps}\n          id="path-4"\n          data-name="path"\n          d="M3.9,11.8a2.416,2.416,0,0,0,0,3.5,2.5,2.5,0,0,0,3.5,0"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nAttachmentIcon.defaultProps = { dark: false };\n\nAttachmentIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic attachment icon",code:"import React from 'react';\nimport AttachmentIcon from 'alys/AttachmentIcon';\n\n/** Basic attachment icon */\nexport default function ExampleBasic() {\n  return <AttachmentIcon />;\n}\n"}]},{name:"Avatar",description:"Image avatars.",props:{src:{type:{name:"string"},required:!1,description:"Path to the image file"},alt:{type:{name:"string"},required:!1,description:"Alternate text for the image",defaultValue:{value:"''",computed:!1}},outlined:{type:{name:"bool"},required:!1,description:"Show or hide image outline",defaultValue:{value:"false",computed:!1}},size:{type:{name:"enum",value:[{value:"'smaller'",computed:!1},{value:"'small'",computed:!1},{value:"'default'",computed:!1}]},required:!1,description:"Pre-set avatar size",defaultValue:{value:"'default'",computed:!1}},round:{type:{name:"bool"},required:!1,description:"Set to true to make the image round",defaultValue:{value:"false",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport MentorIcon from '@/MentorIcon';\n\nconst getSize = ({ theme: { size } }) => size;\nconst calcSize = (percent) => ({ theme: { size } }) => size + size * percent;\nconst sizes = {\n  smaller: 2.5,\n  small: 3.75,\n  default: 6.25,\n};\n\nconst Wrapper = styled.div`\n  background-color: white;\n  width: ${calcSize(0.2)}em;\n  height: ${calcSize(0.2)}em;\n  border-radius: ${({ theme: { size } }) => size * 0.1}em;\n`;\n\nconst Img = styled.img`\n  height: ${getSize}em;\n  width: ${getSize}em;\n  border-radius: ${({ theme: { size, round } }) =>\n    round ? '50%' : `${size * 0.1}em`};\n  margin: ${({ theme: { size, outlined, round } }) =>\n    outlined && !round ? size * 0.1 : 0}em;\n`;\n\nconst DefaultWrapper = styled(Wrapper)`\n  background-color: #e2e8ed;\n`;\n\nconst StyledMentorIcon = styled(MentorIcon)`\n  position: relative;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  && path {\n    stroke: #bcc5d3;\n  }\n`;\n\n/** Image avatars. */\nexport default function Avatar({ src, alt, outlined, size, round }) {\n  const theme = {\n    size: sizes[size],\n    outlined,\n    round,\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      {src ? (\n        outlined && !round ? (\n          <Wrapper>\n            <Img src={src} alt={alt} />\n          </Wrapper>\n        ) : (\n          <Img src={src} alt={alt} />\n        )\n      ) : (\n        <DefaultWrapper>\n          <StyledMentorIcon />\n        </DefaultWrapper>\n      )}\n    </ThemeProvider>\n  );\n}\n\nAvatar.defaultProps = {\n  alt: '',\n  outlined: false,\n  size: 'default',\n  round: false,\n};\n\nAvatar.propTypes = {\n  /** Path to the image file */\n  src: PropTypes.string,\n\n  /** Alternate text for the image */\n  alt: PropTypes.string,\n\n  /** Show or hide image outline */\n  outlined: PropTypes.bool,\n\n  /** Pre-set avatar size */\n  size: PropTypes.oneOf(['smaller', 'small', 'default']),\n\n  /** Set to true to make the image round */\n  round: PropTypes.bool,\n};\n",examples:[{name:"ExampleDefaultSmaller",description:"Smaller size avatar with default image",code:"import React from 'react';\nimport Avatar from 'alys/Avatar';\n\n/** Smaller size avatar with default image */\nexport default function ExampleDefaultSmaller() {\n  return <Avatar size=\"smaller\" />;\n}\n"},{name:"ExampleNormal",description:"Normal size avatar",code:"import React from 'react';\nimport Avatar from 'alys/Avatar';\n\nimport img from '../../docs/assets/alys.jpg';\n\n/** Normal size avatar */\nexport default function ExampleNormal() {\n  return <Avatar src={img} />;\n}\n"},{name:"ExampleOutlined",description:"Small size with outline",code:"import React from 'react';\nimport Avatar from 'alys/Avatar';\n\nimport img from '../../docs/assets/alys.jpg';\n\n/** Small size with outline */\nexport default function ExampleOutlined() {\n  return <Avatar src={img} size=\"small\" outlined />;\n}\n"},{name:"ExampleSmallRound",description:"Small and rounded avatar",code:"import React from 'react';\nimport Avatar from 'alys/Avatar';\n\nimport img from '../../docs/assets/alys.jpg';\n\n/** Small and rounded avatar */\nexport default function ExampleSmallRound() {\n  return <Avatar src={img} size=\"small\" round />;\n}\n"},{name:"ExampleSmallSize",description:"Small avatar",code:"import React from 'react';\nimport Avatar from 'alys/Avatar';\n\nimport img from '../../docs/assets/alys.jpg';\n\n/** Small avatar */\nexport default function ExampleSmallSize() {\n  return <Avatar src={img} size=\"small\" />;\n}\n"},{name:"ExampleSmaller",description:"Smaller size avatar",code:"import React from 'react';\nimport Avatar from 'alys/Avatar';\n\nimport img from '../../docs/assets/alys.jpg';\n\n/** Smaller size avatar */\nexport default function ExampleSmaller() {\n  return <Avatar src={img} size=\"smaller\" />;\n}\n"}]},{name:"CameraFlipIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function CameraFlipIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 20.752 16.104" {...svgProps}>\n      <g id="camera-flip-icon" transform="translate(0 0)">\n        <path\n          {...commonProps}\n          id="path"\n          d="M18.974,2.824H15.14l-.465-1.51A1.116,1.116,0,0,0,13.629.5H7.123a1.116,1.116,0,0,0-1.046.813L5.5,2.824H1.778A1.289,1.289,0,0,0,.5,4.1V14.326A1.289,1.289,0,0,0,1.778,15.6h17.2a1.289,1.289,0,0,0,1.278-1.278V4.1A1.289,1.289,0,0,0,18.974,2.824Z"\n          transform="translate(0 0)"\n        />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          d="M14.464,7.3l-1.743,3.021L9.7,8.694"\n          transform="translate(1.489 1.101)"\n        />\n        <path\n          {...commonProps}\n          id="path-3"\n          data-name="path"\n          d="M5.1,9.667A4.041,4.041,0,0,1,9.167,5.6a3.944,3.944,0,0,1,3.95,4.067"\n          transform="translate(0.745 0.826)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nCameraFlipIcon.defaultProps = {\n  dark: false,\n};\n\nCameraFlipIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic camera flip icon",code:"import React from 'react';\nimport CameraFlipIcon from 'alys/CameraFlipIcon';\n\n/** Basic camera flip icon */\nexport default function ExampleBasic() {\n  return <CameraFlipIcon />;\n}\n"}]},{name:"CameraIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function CameraIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 18 14" {...svgProps}>\n      <circle\n        {...commonProps}\n        id="ellipse"\n        cx="3.5"\n        cy="3.5"\n        r="3.5"\n        transform="translate(5.5 4.5)"\n      />\n      <circle\n        {...commonProps}\n        id="ellipse-2"\n        data-name="ellipse"\n        cx="0.5"\n        cy="0.5"\n        r="0.5"\n        transform="translate(14.5 4.5)"\n      />\n      <path\n        {...commonProps}\n        id="path"\n        d="M16.4,2.5H13.1l-.4-1.3a.961.961,0,0,0-.9-.7H6.2a.961.961,0,0,0-.9.7L4.8,2.5H1.6A1.11,1.11,0,0,0,.5,3.6v8.8a1.11,1.11,0,0,0,1.1,1.1H16.4a1.11,1.11,0,0,0,1.1-1.1V3.6A1.11,1.11,0,0,0,16.4,2.5Z"\n      />\n    </SvgIcon>\n  );\n}\n\nCameraIcon.defaultProps = { dark: false };\n\nCameraIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic camera icon",code:"import React from 'react';\nimport CameraIcon from 'alys/CameraIcon';\n\n/** Basic camera icon */\nexport default function ExampleBasic() {\n  return <CameraIcon />;\n}\n"}]},{name:"CardIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function CardIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 19 14" {...svgProps}>\n      <g id="card-icon" transform="translate(0 0)">\n        <path\n          {...commonProps}\n          id="path"\n          strokeLinecap="round"\n          d="M17.5,13.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h16a.945.945,0,0,1,1,1v11A.945.945,0,0,1,17.5,13.5Z"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          strokeWidth="3px"\n          x2="18"\n          transform="translate(1 5.5)"\n        />\n        <line\n          {...commonProps}\n          id="line-2"\n          data-name="line"\n          strokeLinecap="round"\n          x2="4"\n          transform="translate(3.5 10.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nCardIcon.defaultProps = { dark: false };\n\nCardIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic card icon",code:"import React from 'react';\nimport CardIcon from 'alys/CardIcon';\n\n/** Basic card icon */\nexport default function ExampleBasic() {\n  return <CardIcon />;\n}\n"}]},{name:"ChevronLeftIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function ChevronLeftIcon({ dark, ...svgProps }) {\n  return (\n    <SvgIcon viewBox="0 0 5.8 10.7" {...svgProps}>\n      <g id="arrow-left" transform="translate(-512.002 -387)">\n        <path\n          id="arrow-left-2"\n          data-name="arrow-left"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4C5264\'}\n          strokeLinecap="round"\n          strokeLinejoin="round"\n          strokeMiterlimit={10}\n          d="M5.3,10.2.5,5.3,5.3.5"\n          transform="translate(512.002 387)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nChevronLeftIcon.defaultProps = { dark: false };\n\nChevronLeftIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic chevron left icon",code:"import React from 'react';\nimport ChevronLeftIcon from 'alys/ChevronLeftIcon';\n\n/** Basic chevron left icon */\nexport default function ExampleBasic() {\n  return <ChevronLeftIcon />;\n}\n"}]},{name:"ChevronRightIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function ChevronRightIcon({ dark, ...svgProps }) {\n  return (\n    <SvgIcon viewBox="0 0 5.8 10.7" {...svgProps}>\n      <g id="arrow-right" transform="translate(-652.002 -385)">\n        <path\n          id="arrow-right-2"\n          data-name="arrow-right"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4C5264\'}\n          strokeLinecap="round"\n          strokeLinejoin="round"\n          strokeMiterlimit={10}\n          d="M.5,10.2,5.3,5.3.5.5"\n          transform="translate(652.002 385)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nChevronRightIcon.defaultProps = { dark: false };\n\nChevronRightIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic chevron right icon",code:"import React from 'react';\nimport ChevronRightIcon from 'alys/ChevronRightIcon';\n\n/** Basic chevron right icon */\nexport default function ExampleBasic() {\n  return <ChevronRightIcon />;\n}\n"}]},{name:"ClockIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function ClockIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 20 20" {...svgProps}>\n      <g id="clock-icon" transform="translate(0 0)">\n        <circle\n          {...commonProps}\n          id="ellipse"\n          cx="9.5"\n          cy="9.5"\n          r="9.5"\n          transform="translate(0.5 0.5)"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          y2="8"\n          transform="translate(9.5 3.5)"\n        />\n        <line\n          {...commonProps}\n          id="line-2"\n          data-name="line"\n          x1="5"\n          transform="translate(9.5 11.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nClockIcon.defaultProps = { dark: false };\n\nClockIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic clock icon",code:"import React from 'react';\nimport ClockIcon from 'alys/ClockIcon';\n\n/** Basic clock icon */\nexport default function ExampleBasic() {\n  return <ClockIcon />;\n}\n"}]},{name:"CloseIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function CloseIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 17.414 17.414" {...svgProps}>\n      <g id="close-icon" transform="translate(0.207 0.207)">\n        <line\n          {...commonProps}\n          id="line"\n          x1="16"\n          y1="16"\n          transform="translate(0.5 0.5)"\n        />\n        <line\n          {...commonProps}\n          id="line-2"\n          data-name="line"\n          y1="16"\n          x2="16"\n          transform="translate(0.5 0.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nCloseIcon.defaultProps = { dark: false };\n\nCloseIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic close icon",code:"import React from 'react';\nimport CloseIcon from 'alys/CloseIcon';\n\n/** Basic close icon */\nexport default function ExampleBasic() {\n  return <CloseIcon />;\n}\n"}]},{name:"CommentIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function CommentIcon({ dark, ...svgProps }) {\n  return (\n    <SvgIcon viewBox="0 0 21.4 18.3" {...svgProps}>\n      <g id="comment-icon" transform="translate(0 0)">\n        <path\n          id="path"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4C5264\'}\n          strokeLinecap="round"\n          strokeLinejoin="round"\n          strokeMiterlimit={10}\n          d="M10.7.5C5.1.5.5,4.3.5,9a7.82,7.82,0,0,0,2.6,5.7l-.8,3.1,4-1.1a12.307,12.307,0,0,0,4.4.8c5.6,0,10.2-3.8,10.2-8.5S16.4.5,10.7.5Z"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nCommentIcon.defaultProps = { dark: false };\n\nCommentIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic comment icon",code:"import React from 'react';\nimport CommentIcon from 'alys/CommentIcon';\n\n/** Basic comment icon */\nexport default function ExampleBasic() {\n  return <CommentIcon />;\n}\n"}]},{name:"ComputerIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function ComputerIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 22.917 19" {...svgProps}>\n      <g id="computer-icon" transform="translate(0 0)">\n        <path\n          {...commonProps}\n          id="path"\n          d="M21.6,14.5H1.4a.9.9,0,0,1-.9-.9V1.4A.9.9,0,0,1,1.4.5H21.5a.9.9,0,0,1,.9.9V13.5A.805.805,0,0,1,21.6,14.5Z"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          x2="3"\n          strokeLinecap="round"\n          transform="translate(10 16.5)"\n        />\n        <line\n          {...commonProps}\n          id="line-2"\n          data-name="line"\n          strokeLinecap="round"\n          x2="7"\n          transform="translate(8 18.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nComputerIcon.defaultProps = {\n  dark: false,\n};\n\nComputerIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic computer icon",code:"import React from 'react';\nimport ComputerIcon from 'alys/ComputerIcon';\n\n/** Basic computer icon */\nexport default function ExampleBasic() {\n  return <ComputerIcon />;\n}\n"}]},{name:"ConfirmIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function ConfirmIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 21 21" {...svgProps}>\n      <g id="confirm-icon" transform="translate(0 0)">\n        <path {...commonProps} id="path" d="M5.6,10.9,8.7,14l7.2-7.1" />\n        <circle\n          {...commonProps}\n          id="ellipse"\n          cx="10"\n          cy="10"\n          r="10"\n          transform="translate(0.5 0.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nConfirmIcon.defaultProps = { dark: false };\n\nConfirmIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic confirm icon",code:"import React from 'react';\nimport ConfirmIcon from 'alys/ConfirmIcon';\n\n/** Basic confirm icon */\nexport default function ExampleBasic() {\n  return <ConfirmIcon />;\n}\n"}]},{name:"EmailIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function EmailIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 20 15" {...svgProps}>\n      <g id="email-icon" transform="translate(0 0)">\n        <path\n          {...commonProps}\n          id="path"\n          d="M18.5,14.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h17a.945.945,0,0,1,1,1v12A.945.945,0,0,1,18.5,14.5Z"\n        />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          stroke-strokeLinecap="round"\n          stroke-strokeLinejoin="round"\n          d="M.7,1.8,9.4,7.9a1.36,1.36,0,0,0,1.5,0l8.3-6.1"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nEmailIcon.defaultProps = { dark: false };\n\nEmailIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic email icon",code:"import React from 'react';\nimport EmailIcon from 'alys/EmailIcon';\n\n/** Basic email icon */\nexport default function ExampleBasic() {\n  return <EmailIcon />;\n}\n"}]},{name:"EnlargeIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function MentorIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 18 18" {...svgProps}>\n      <path\n        {...commonProps}\n        id="path"\n        d="M16.5,17.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h15a.945.945,0,0,1,1,1v15A.945.945,0,0,1,16.5,17.5Z"\n      />\n      <line\n        {...commonProps}\n        id="line"\n        y1="3.7"\n        x2="3.7"\n        transform="translate(10.5 3.9)"\n      />\n      <path {...commonProps} id="path-2" data-name="path" d="M11.5,3.5h3v3" />\n      <line\n        {...commonProps}\n        id="line-2"\n        data-name="line"\n        x1="3.7"\n        y2="3.8"\n        transform="translate(3.8 10.6)"\n      />\n      <path {...commonProps} id="path-3" data-name="path" d="M6.5,14.5h-3v-3" />\n    </SvgIcon>\n  );\n}\n\nMentorIcon.defaultProps = { dark: false };\n\nMentorIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic enlarge icon",code:"import React from 'react';\nimport EnlargeIcon from 'alys/EnlargeIcon';\n\n/** Basic enlarge icon */\nexport default function ExampleBasic() {\n  return <EnlargeIcon />;\n}\n"}]},{name:"FiltersIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function FiltersIcon({ dark, ...svgProps }) {\n  return (\n    <SvgIcon viewBox="0 0 17.175 18" {...svgProps}>\n      <g id="filters-icon" transform="translate(-30 -58)">\n        <path\n          id="path"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4c5264\'}\n          d="M-2,0H8.148"\n          transform="translate(32 60)"\n        />\n        <path\n          id="path-2"\n          data-name="path"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4c5264\'}\n          d="M0,0H4.026"\n          transform="translate(43.148 60)"\n        />\n        <path\n          id="path-3"\n          data-name="path"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4c5264\'}\n          d="M0,0H7.026"\n          transform="translate(40.148 67)"\n        />\n        <path\n          id="path-4"\n          data-name="path"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4c5264\'}\n          d="M-2,0H5.026"\n          transform="translate(32.148 67)"\n        />\n        <path\n          id="path-5"\n          data-name="path"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4c5264\'}\n          d="M-2,0H2"\n          transform="translate(32.148 74)"\n        />\n        <path\n          id="path-6"\n          data-name="path"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4c5264\'}\n          d="M0,0H10.026"\n          transform="translate(37.148 74)"\n        />\n        <g\n          id="ellipse"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4c5264\'}\n          transform="translate(39.648 58)"\n        >\n          <circle stroke="none" cx="2" cy="2" r="2" />\n          <circle fill="none" cx="2" cy="2" r="1.5" />\n        </g>\n        <g\n          id="ellipse-2"\n          data-name="ellipse"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4c5264\'}\n          transform="translate(36.648 65)"\n        >\n          <circle stroke="none" cx="2" cy="2" r="2" />\n          <circle fill="none" cx="2" cy="2" r="1.5" />\n        </g>\n        <g\n          id="ellipse-3"\n          data-name="ellipse"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4c5264\'}\n          transform="translate(33.648 72)"\n        >\n          <circle stroke="none" cx="2" cy="2" r="2" />\n          <circle fill="none" cx="2" cy="2" r="1.5" />\n        </g>\n      </g>\n    </SvgIcon>\n  );\n}\n\nFiltersIcon.defaultProps = { dark: false };\n\nFiltersIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic filters icon",code:"import React from 'react';\nimport FiltersIcon from 'alys/FiltersIcon';\n\n/** Basic filters icon */\nexport default function ExampleBasic() {\n  return <FiltersIcon />;\n}\n"}]},{name:"HappyIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function HappyIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 20 20" {...svgProps}>\n      <g id="happy-icon" transform="translate(0 0)">\n        <circle\n          {...commonProps}\n          id="ellipse"\n          fill="none"\n          cx="9.5"\n          cy="9.5"\n          r="9.5"\n          transform="translate(0.5 0.5)"\n        />\n        <circle\n          {...commonProps}\n          id="ellipse-2"\n          data-name="ellipse"\n          fill={dark ? \'#fff\' : \'#4c5264\'}\n          cx="0.5"\n          cy="0.5"\n          r="0.5"\n          transform="translate(6.5 6.5)"\n        />\n        <circle\n          {...commonProps}\n          id="ellipse-3"\n          data-name="ellipse"\n          fill={dark ? \'#fff\' : \'#4c5264\'}\n          cx="0.5"\n          cy="0.5"\n          r="0.5"\n          transform="translate(12.5 6.5)"\n        />\n        <path\n          {...commonProps}\n          id="path"\n          fill="none"\n          d="M6.3,13.5a4.507,4.507,0,0,0,3.7,2,4.373,4.373,0,0,0,3.7-2"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nHappyIcon.defaultProps = { dark: false };\n\nHappyIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic happy icon",code:"import React from 'react';\nimport HappyIcon from 'alys/HappyIcon';\n\n/** Basic happy icon */\nexport default function ExampleBasic() {\n  return <HappyIcon />;\n}\n"}]},{name:"HomeIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function HomeIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 20.4 19.6" {...svgProps}>\n      <g id="home-icon" transform="translate(0 0)">\n        <path {...commonProps} id="path" d="M17.5,8.1h2.4L10.2.5.5,8.1h2" />\n        <path {...commonProps} id="path-2" data-name="path" d="M17.5,7.1" />\n        <path {...commonProps} id="path-3" data-name="path" d="M2.5,8.1" />\n        <path\n          {...commonProps}\n          id="path-4"\n          data-name="path"\n          d="M2.5,8.1v11h6v-6h3v6h6V8.1"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nHomeIcon.defaultProps = { dark: false };\n\nHomeIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic home icon",code:"import React from 'react';\nimport HomeIcon from 'alys/HomeIcon';\n\n/** Basic home icon */\nexport default function ExampleBasic() {\n  return <HomeIcon />;\n}\n"}]},{name:"LaptopIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function LaptopIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 23.217 18" {...svgProps}>\n      <g id="laptop-icon" transform="translate(-0.041 0)">\n        <path\n          {...commonProps}\n          id="path"\n          d="M21.1,12.5H2.1V1.4A.9.9,0,0,1,3,.5H20.2a.9.9,0,0,1,.9.9Z"\n        />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          d="M21.1,12.5H2.1L.6,16.3a.881.881,0,0,0,.8,1.2H21.9a.881.881,0,0,0,.8-1.2Z"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          strokeLinecap="round"\n          x2="3"\n          transform="translate(10.1 15.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nLaptopIcon.defaultProps = { dark: false };\n\nLaptopIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic laptop icon",code:"import React from 'react';\nimport LaptopIcon from 'alys/LaptopIcon';\n\n/** Basic laptop icon */\nexport default function ExampleBasic() {\n  return <LaptopIcon />;\n}\n"}]},{name:"LikeIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function LikeIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 21.552 18.875" {...svgProps}>\n      <g id="like-icon" transform="translate(0.022 0)">\n        <path\n          {...commonProps}\n          id="path"\n          strokeLinejoin="round"\n          d="M10.8,18.3h0C25.5,11.4,20,3.1,20,3.1A5.381,5.381,0,0,0,15.4.5a5.553,5.553,0,0,0-4.7,2.6A5.255,5.255,0,0,0,6.1.5,5.172,5.172,0,0,0,1.5,3.1S-4,11.4,10.8,18.3C10.7,18.4,10.8,18.4,10.8,18.3Z"\n        />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          strokeLinecap="round"\n          d="M15.4,2.6a3.159,3.159,0,0,1,3.2,3.2"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nLikeIcon.defaultProps = { dark: false };\n\nLikeIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic like icon",code:"import React from 'react';\nimport LikeIcon from 'alys/LikeIcon';\n\n/** Basic like icon */\nexport default function ExampleBasic() {\n  return <LikeIcon />;\n}\n"}]},{name:"LiveIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function LiveIcon({ dark, ...svgProps }) {\n  return (\n    <SvgIcon viewBox="0 0 21 21" {...svgProps}>\n      <g id="live-icon" transform="translate(0 0)">\n        <circle\n          id="ellipse"\n          fill="none"\n          stroke={dark ? \'#fff\' : \'#4C5264\'}\n          strokeLinecap="round"\n          strokeLinejoin="round"\n          strokeMiterlimit={10}\n          cx="10"\n          cy="10"\n          r="10"\n          transform="translate(0.5 0.5)"\n        />\n        <circle\n          id="ellipse-2"\n          data-name="ellipse"\n          fill={dark ? \'#fff\' : \'#4C5264\'}\n          cx="4.5"\n          cy="4.5"\n          r="4.5"\n          transform="translate(6 6)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nLiveIcon.defaultProps = { dark: false };\n\nLiveIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic live icon",code:"import React from 'react';\nimport LiveIcon from 'alys/LiveIcon';\n\n/** Basic live icon */\nexport default function ExampleBasic() {\n  return <LiveIcon />;\n}\n"}]},{name:"LocationIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function LocationIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 17.015 20.071" {...svgProps}>\n      <g id="location-icon" transform="translate(0.015 -0.029)">\n        <path\n          {...commonProps}\n          id="path"\n          d="M13.8,14.5,9.2,19.3a.965.965,0,0,1-1.4,0L3.1,14.4l-.8-.9A7.78,7.78,0,0,1,.6,7.3,8,8,0,0,1,16.5,8.5a7.907,7.907,0,0,1-2.1,5.4Z"\n        />\n        <circle\n          {...commonProps}\n          id="ellipse"\n          cx="3"\n          cy="3"\n          r="3"\n          transform="translate(5.5 5.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nLocationIcon.defaultProps = { dark: false };\n\nLocationIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic location icon",code:"import React from 'react';\nimport LocationIcon from 'alys/LocationIcon';\n\n/** Basic location icon */\nexport default function ExampleBasic() {\n  return <LocationIcon />;\n}\n"}]},{name:"MentorIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function MentorIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 21.7 19.4" {...svgProps}>\n      <g id="mentor-icon" transform="translate(0 0)">\n        <path {...commonProps} id="path" d="M10.3,13.6v3l-5,2.3" />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          d="M16.1,13.6v3l5.1,2.3"\n        />\n        <path\n          {...commonProps}\n          id="path-3"\n          data-name="path"\n          d="M15,14.1a5.2,5.2,0,0,0,3.5-4.9V4.6A4.055,4.055,0,0,0,14.4.5H12.2A4.14,4.14,0,0,0,8,4.6V9.2a5.2,5.2,0,0,0,3.5,4.9"\n        />\n        <path\n          {...commonProps}\n          id="path-4"\n          data-name="path"\n          d="M4.6,11.3v2.4L.5,15.6"\n        />\n        <path\n          {...commonProps}\n          id="path-5"\n          data-name="path"\n          d="M6.9.5H6.1A3.372,3.372,0,0,0,2.7,3.9V7.6a4.249,4.249,0,0,0,2.8,4"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nMentorIcon.defaultProps = { dark: false };\n\nMentorIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic mentor icon",code:"import React from 'react';\nimport MentorIcon from 'alys/MentorIcon';\n\n/** Basic mentor icon */\nexport default function ExampleBasic() {\n  return <MentorIcon />;\n}\n"}]},{name:"MicrophoneIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function MicrophoneIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 11.8 19.9" {...svgProps}>\n      <g id="microphone-icon" transform="translate(0 0)">\n        <path\n          {...commonProps}\n          id="path"\n          d="M5.9,13.3h0A3.543,3.543,0,0,1,2.4,9.8V4A3.543,3.543,0,0,1,5.9.5h0A3.543,3.543,0,0,1,9.4,4V9.8A3.418,3.418,0,0,1,5.9,13.3Z"\n        />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          d="M.5,7.8v2a5.378,5.378,0,0,0,5.4,5.4h0a5.378,5.378,0,0,0,5.4-5.4v-2"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          y2="4"\n          transform="translate(5.9 15.4)"\n        />\n        <line\n          {...commonProps}\n          id="line-2"\n          data-name="line"\n          x1="6"\n          transform="translate(2.9 19.4)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nMicrophoneIcon.defaultProps = { dark: false };\n\nMicrophoneIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic microphone icon",code:"import React from 'react';\nimport MicrophoneIcon from 'alys/MicrophoneIcon';\n\n/** Basic microphone icon */\nexport default function ExampleBasic() {\n  return <MicrophoneIcon />;\n}\n"}]},{name:"NewIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function NewIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 19 19" {...svgProps}>\n      <g id="new-icon" transform="translate(0 0)">\n        <line\n          {...commonProps}\n          id="line"\n          x1="18"\n          transform="translate(0.5 9.5)"\n        />\n        <line\n          {...commonProps}\n          id="line-2"\n          data-name="line"\n          y1="18"\n          transform="translate(9.5 0.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nNewIcon.defaultProps = { dark: false };\n\nNewIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic new icon",code:"import React from 'react';\nimport NewIcon from 'alys/NewIcon';\n\n/** Basic new icon */\nexport default function ExampleBasic() {\n  return <NewIcon />;\n}\n"}]},{name:"OptionsIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\nconst isDark = (dark) => (dark ? \'#fff\' : \'#4c5264\');\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function OptionsIcon({ dark, ...svgProps }) {\n  return (\n    <SvgIcon viewBox="0 0 19 5" {...svgProps}>\n      <g id="options-icon" transform="translate(-326 -201)">\n        <g\n          id="ellipse"\n          fill="none"\n          stroke={isDark(dark)}\n          transform="translate(326 201)"\n        >\n          <circle stroke="none" cx="2.5" cy="2.5" r="2.5" />\n          <circle fill="none" cx="2.5" cy="2.5" r="2" />\n        </g>\n        <g\n          id="ellipse-2"\n          data-name="ellipse"\n          fill="none"\n          stroke={isDark(dark)}\n          transform="translate(333 201)"\n        >\n          <circle stroke="none" cx="2.5" cy="2.5" r="2.5" />\n          <circle fill="none" cx="2.5" cy="2.5" r="2" />\n        </g>\n        <g\n          id="ellipse-3"\n          data-name="ellipse"\n          fill="none"\n          stroke={isDark(dark)}\n          transform="translate(340 201)"\n        >\n          <circle stroke="none" cx="2.5" cy="2.5" r="2.5" />\n          <circle fill="none" cx="2.5" cy="2.5" r="2" />\n        </g>\n      </g>\n    </SvgIcon>\n  );\n}\n\nOptionsIcon.defaultProps = { dark: false };\n\nOptionsIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic options icon",code:"import React from 'react';\nimport OptionsIcon from 'alys/OptionsIcon';\n\n/** Basic options icon */\nexport default function ExampleBasic() {\n  return <OptionsIcon />;\n}\n"}]},{name:"PasswordIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function PasswordIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 17 19.988" {...svgProps}>\n      <g id="password-icon" transform="translate(0 -0.011)">\n        <path\n          {...commonProps}\n          strokeLinecap="round"\n          id="path"\n          d="M15.5,19.5H1.5a.945.945,0,0,1-1-1V7.5a.945.945,0,0,1,1-1h14a.945.945,0,0,1,1,1v11A.945.945,0,0,1,15.5,19.5Z"\n        />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          strokeLinejoin="round"\n          d="M4.5,7V4.7A4.179,4.179,0,0,1,7.7.6a3.957,3.957,0,0,1,4.8,3.9V7"\n        />\n        <path\n          {...commonProps}\n          id="path-3"\n          data-name="path"\n          strokeLinecap="round"\n          d="M10.2,11.9a1.685,1.685,0,0,0-1.7-1.7,1.628,1.628,0,0,0-1.7,1.7,1.709,1.709,0,0,0,.7,1.3v1.6a.945.945,0,0,0,1,1,.945.945,0,0,0,1-1V13.2A1.709,1.709,0,0,0,10.2,11.9Z"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nPasswordIcon.defaultProps = { dark: false };\n\nPasswordIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic password icon",code:"import React from 'react';\nimport PasswordIcon from 'alys/PasswordIcon';\n\n/** Basic password icon */\nexport default function ExampleBasic() {\n  return <PasswordIcon />;\n}\n"}]},{name:"PencilIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function PencilIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 19.25 19.306" {...svgProps}>\n      <g id="pencil-icon" transform="translate(0 0.105)">\n        <path\n          {...commonProps}\n          id="path"\n          strokeLinejoin="round"\n          d="M4.3,17.7l-3.8,1,1-3.9L15.8.6a.483.483,0,0,1,.7,0l2.1,2.1a.483.483,0,0,1,0,.7Z"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          x2="2.8"\n          y2="2.8"\n          transform="translate(14.7 1.7)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nPencilIcon.defaultProps = {\n  dark: false,\n};\n\nPencilIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic pencil icon",code:"import React from 'react';\nimport PencilIcon from 'alys/PencilIcon';\n\n/** Basic pencil icon */\nexport default function ExampleBasic() {\n  return <PencilIcon />;\n}\n"}]},{name:"PhoneIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function PhoneIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 13 22" {...svgProps}>\n      <g id="phone-icon" transform="translate(0 0)">\n        <path\n          {...commonProps}\n          id="path"\n          d="M11.5,21.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h10a.945.945,0,0,1,1,1v19A.945.945,0,0,1,11.5,21.5Z"\n        />\n        <line {...commonProps} id="line" x2="12" transform="translate(1 4.5)" />\n        <line\n          {...commonProps}\n          id="line-2"\n          data-name="line"\n          strokeLinecap="round"\n          x2="2"\n          transform="translate(5.5 2.5)"\n        />\n        <circle\n          {...commonProps}\n          id="ellipse"\n          cx="0.5"\n          cy="0.5"\n          r="0.5"\n          transform="translate(6 18.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nPhoneIcon.defaultProps = {\n  dark: false,\n};\n\nPhoneIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic phone icon",code:"import React from 'react';\nimport PhoneIcon from 'alys/PhoneIcon';\n\n/** Basic phone icon */\nexport default function ExampleBasic() {\n  return <PhoneIcon />;\n}\n"}]},{name:"PhoneXIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function PhoneXIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 13 22" {...svgProps}>\n      <g id="phone-x-icon" transform="translate(0 0)">\n        <path\n          {...commonProps}\n          id="path"\n          strokeLinecap="round"\n          strokeLinejoin="round"\n          d="M6.5,1.5H8a.908.908,0,0,0,.7-.3L9.4.5H3.6l.7.7a.908.908,0,0,0,.7.3Z"\n        />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          d="M11.5,21.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h10a.945.945,0,0,1,1,1v19A.945.945,0,0,1,11.5,21.5Z"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nPhoneXIcon.defaultProps = { dark: false };\n\nPhoneXIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic phone X icon",code:"import React from 'react';\nimport PhoneXIcon from 'alys/PhoneXIcon';\n\n/** Basic phone X icon */\nexport default function ExampleBasic() {\n  return <PhoneXIcon />;\n}\n"}]},{name:"PreviewIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function PreviewIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 19 19" {...svgProps}>\n      <g id="preview-icon" transform="translate(0 0)">\n        <path {...commonProps} id="path" d="M.5,4.5v-3a.945.945,0,0,1,1-1h3" />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          d="M14.5.5h3a.945.945,0,0,1,1,1v3"\n        />\n        <path\n          {...commonProps}\n          id="path-3"\n          data-name="path"\n          d="M18.5,14.5v3a.945.945,0,0,1-1,1h-3"\n        />\n        <path\n          {...commonProps}\n          id="path-4"\n          data-name="path"\n          d="M4.5,18.5h-3a.945.945,0,0,1-1-1v-3"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          x2="6"\n          transform="translate(6.5 9.5)"\n        />\n        <line\n          {...commonProps}\n          id="line-2"\n          data-name="line"\n          y2="6"\n          transform="translate(9.5 6.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nPreviewIcon.defaultProps = { dark: false };\n\nPreviewIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic preview icon",code:"import React from 'react';\nimport PreviewIcon from 'alys/PreviewIcon';\n\n/** Basic preview icon */\nexport default function ExampleBasic() {\n  return <PreviewIcon />;\n}\n"}]},{name:"ProgressBar",description:"A custom progress bar.",props:{percent:{type:{name:"number"},required:!0,description:"Percent of progress completed"},width:{type:{name:"number"},required:!0,description:"Bar width"},height:{type:{name:"number"},required:!1,description:"Bar height",defaultValue:{value:"5",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { getWidthAsPercentOfTotalWidth } from '@utils/percent-utils';\nimport { styleLengths } from '@utils/string-utils';\n\nconst ProgressBarWrapper = styled.div`\n  border: solid 1px lightgray;\n  width: ${({ width }) => styleLengths(width)};\n`;\n\nconst ProgressBarValue = styled.div`\n  width: ${({ percent, width }) =>\n    styleLengths(getWidthAsPercentOfTotalWidth(percent, width))};\n  height: ${({ height }) => styleLengths(height)};\n  background-color: ${({ percent }) => {\n    if (percent === 100) return 'green';\n\n    return percent > 50 ? 'lightgreen' : 'red';\n  }};\n`;\n\n/** A custom progress bar. */\nexport default function ProgressBar({ width, height, percent }) {\n  return (\n    <ProgressBarWrapper width={width}>\n      <ProgressBarValue width={width} height={height} percent={percent} />\n    </ProgressBarWrapper>\n  );\n}\n\nProgressBar.defaultProps = {\n  height: 5,\n};\n\nProgressBar.propTypes = {\n  /** Percent of progress completed */\n  percent: PropTypes.number.isRequired,\n\n  /** Bar width */\n  width: PropTypes.number.isRequired,\n\n  /** Bar height */\n  height: PropTypes.number,\n};\n",examples:[{name:"Example100Percent",description:"100% progress",code:"import React from 'react';\nimport ProgressBar from 'alys/ProgressBar';\n\n/** 100% progress */\nexport default function Example100Percent() {\n  return <ProgressBar percent={100} width={150} />;\n}\n"},{name:"Example10Percent",description:"10% progress",code:"import React from 'react';\nimport ProgressBar from 'alys/ProgressBar';\n\n/** 10% progress */\nexport default function Example10Percent() {\n  return <ProgressBar percent={10} width={150} />;\n}\n"},{name:"Example20pxHeight",description:"20px height and 100% progress",code:"import React from 'react';\nimport ProgressBar from 'alys/ProgressBar';\n\n/** 20px height and 100% progress */\nexport default function Example20pxHeight() {\n  return <ProgressBar percent={100} width={150} height={20} />;\n}\n"},{name:"Example70Percent",description:"70% progress",code:"import React from 'react';\nimport ProgressBar from 'alys/ProgressBar';\n\n/** 70% progress */\nexport default function Example70Percent() {\n  return <ProgressBar percent={70} width={150} />;\n}\n"}]},{name:"Rating",description:"",props:{value:{type:{name:"enum",value:[{value:"0",computed:!1},{value:"1",computed:!1},{value:"2",computed:!1},{value:"3",computed:!1},{value:"4",computed:!1},{value:"5",computed:!1}]},required:!0,description:"Amount of filled stars"},color:{type:{name:"enum",value:[{value:"'default'",computed:!1},{value:"'secondary'",computed:!1}]},required:!1,description:"Fill color of stars",defaultValue:{value:"'default'",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StarIcon from '@common/StarIcon';\n\nconst MAX_VALUE = 5;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  max-width: 5em;\n`;\n\nexport default function Rating({ value, color }) {\n  let stars = [];\n\n  for (let i = 1; i <= MAX_VALUE; i += 1) {\n    stars.push(\n      <StarIcon\n        fontSize=\"0.77875em\"\n        key={`ratingstar${i}`}\n        filled={i <= value}\n        color={color}\n      />,\n    );\n  }\n\n  return <Wrapper>{stars}</Wrapper>;\n}\n\nRating.defaultProps = {\n  color: 'default',\n};\n\nRating.propTypes = {\n  /** Amount of filled stars */\n  value: PropTypes.oneOf([0, 1, 2, 3, 4, 5]).isRequired,\n\n  /** Fill color of stars */\n  color: PropTypes.oneOf(['default', 'secondary']),\n};\n",examples:[{name:"Example0Stars",description:"Rating with value of 0",code:"import React from 'react';\nimport Rating from 'alys/Rating';\n\n/** Rating with value of 0 */\nexport default function Example0Stars() {\n  return <Rating value={0} />;\n}\n"},{name:"Example3Stars",description:"Rating with value of 3",code:"import React from 'react';\nimport Rating from 'alys/Rating';\n\n/** Rating with value of 3 */\nexport default function Example3Stars() {\n  return <Rating value={3} />;\n}\n"},{name:"Example5Stars",description:"Rating with value of 5",code:"import React from 'react';\nimport Rating from 'alys/Rating';\n\n/** Rating with value of 5 */\nexport default function Example5Stars() {\n  return <Rating value={5} />;\n}\n"},{name:"ExampleSecondary3Stars",description:"Rating with secondary color and value of 3",code:"import React from 'react';\nimport Rating from 'alys/Rating';\n\n/** Rating with secondary color and value of 3 */\nexport default function Example0Stars() {\n  return <Rating value={3} color=\"secondary\" />;\n}\n"}]},{name:"RegisterIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function RegisterIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 19.25 19.306" {...svgProps}>\n      <g id="register-icon" transform="translate(0 0.105)">\n        <path\n          {...commonProps}\n          id="path"\n          strokeLinejoin="round"\n          d="M4.3,17.7l-3.8,1,1-3.9L15.8.6a.483.483,0,0,1,.7,0l2.1,2.1a.483.483,0,0,1,0,.7Z"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          x2="2.8"\n          y2="2.8"\n          transform="translate(14.7 1.7)"\n        />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          d="M1.8,9.4V1.9H9.3"\n        />\n        <path\n          {...commonProps}\n          id="path-3"\n          data-name="path"\n          d="M16.8,10.4v7.5H9.3"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nRegisterIcon.defaultProps = { dark: false };\n\nRegisterIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic register icon",code:"import React from 'react';\nimport RegisterIcon from 'alys/RegisterIcon';\n\n/** Basic register icon */\nexport default function ExampleBasic() {\n  return <RegisterIcon />;\n}\n"}]},{name:"RemoveMentorIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function RemoveMentorIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 23.7 23.5" {...svgProps}>\n      <g id="remove-mentor-icon" transform="translate(0 0)">\n        <path id="path" {...commonProps} d="M5.5,13.6v3l-5,2.3" />\n        <path id="path-2" data-name="path" {...commonProps} d="M13.4,17.5" />\n        <path id="path-3" data-name="path" {...commonProps} d="M13.1,17.4" />\n        <path\n          {...commonProps}\n          id="path-4"\n          data-name="path"\n          d="M11.3,13.6v3l1.8.8"\n        />\n        <path\n          {...commonProps}\n          id="path-5"\n          data-name="path"\n          d="M10.2,14.1a5.2,5.2,0,0,0,3.5-4.9V4.6A4.055,4.055,0,0,0,9.6.5H7.3A4.055,4.055,0,0,0,3.2,4.6V9.2a5.2,5.2,0,0,0,3.5,4.9"\n        />\n        <circle\n          {...commonProps}\n          id="ellipse"\n          cx="5"\n          cy="5"\n          r="5"\n          transform="translate(13.2 13)"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          x1="3.4"\n          y2="3.4"\n          transform="translate(16.5 16.3)"\n        />\n        <line\n          {...commonProps}\n          id="line-2"\n          data-name="line"\n          x1="3.4"\n          y1="3.4"\n          transform="translate(16.5 16.3)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nRemoveMentorIcon.defaultProps = {\n  dark: false,\n};\n\nRemoveMentorIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic remove mentor icon",code:"import React from 'react';\nimport RemoveMentorIcon from 'alys/RemoveMentorIcon';\n\n/** Basic remove mentor icon */\nexport default function ExampleBasic() {\n  return <RemoveMentorIcon />;\n}\n"}]},{name:"SadIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function SadIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 20 20" {...svgProps}>\n      <g id="sad-icon" transform="translate(0 0)">\n        <circle\n          {...commonProps}\n          id="ellipse"\n          fill="none"\n          cx="9.5"\n          cy="9.5"\n          r="9.5"\n          transform="translate(0.5 0.5)"\n        />\n        <circle\n          {...commonProps}\n          id="ellipse-2"\n          data-name="ellipse"\n          fill={dark ? \'#fff\' : \'#4C5264\'}\n          cx="0.5"\n          cy="0.5"\n          r="0.5"\n          transform="translate(6.5 6.5)"\n        />\n        <circle\n          {...commonProps}\n          id="ellipse-3"\n          data-name="ellipse"\n          fill={dark ? \'#fff\' : \'#4C5264\'}\n          cx="0.5"\n          cy="0.5"\n          r="0.5"\n          transform="translate(12.5 6.5)"\n        />\n        <path\n          {...commonProps}\n          id="path"\n          fill="none"\n          d="M13.7,14.5a4.507,4.507,0,0,0-3.7-2,4.373,4.373,0,0,0-3.7,2"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nSadIcon.defaultProps = { dark: false };\n\nSadIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic sad icon",code:"import React from 'react';\nimport SadIcon from 'alys/SadIcon';\n\n/** Basic sad icon */\nexport default function ExampleBasic() {\n  return <SadIcon />;\n}\n"}]},{name:"SearchIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function SearchIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 18.907 18.507" {...svgProps}>\n      <g id="search-icon" transform="translate(0 0)">\n        <circle\n          {...commonProps}\n          id="ellipse"\n          strokeLinejoin="round"\n          cx="8"\n          cy="8"\n          r="8"\n          transform="translate(0.5 0.5)"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          strokeLinejoin="round"\n          x2="3.5"\n          y2="3.5"\n          transform="translate(14.7 14.3)"\n        />\n        <path {...commonProps} id="path" d="M9,2.8a5.335,5.335,0,0,1,5.3,5.3" />\n      </g>\n    </SvgIcon>\n  );\n}\n\nSearchIcon.defaultProps = { dark: false };\n\nSearchIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic search icon",code:"import React from 'react';\nimport SearchIcon from 'alys/SearchIcon';\n\n/** Basic search icon */\nexport default function ExampleBasic() {\n  return <SearchIcon />;\n}\n"}]},{name:"SettingsIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function Settings({ dark, ...svgProps }) {\n  return (\n    <SvgIcon viewBox="0 0 19.875 19.98" {...svgProps}>\n      <path\n        id="path"\n        fill="none"\n        stroke={dark ? \'#fff\' : \'#4C5264\'}\n        strokeLinecap="round"\n        strokeLinejoin="round"\n        strokeMiterlimit={10}\n        d="M18.7,15.7,11.1,8.1A4.638,4.638,0,0,0,11.5,6,5.549,5.549,0,0,0,6,.5a4.618,4.618,0,0,0-2.6.7L7.3,5.1,5.1,7.3,1.2,3.4A4.618,4.618,0,0,0,.5,6,5.549,5.549,0,0,0,6,11.5a5.222,5.222,0,0,0,2.1-.4l7.6,7.6a2.175,2.175,0,0,0,3,0h0A2,2,0,0,0,18.7,15.7Z"\n      />\n    </SvgIcon>\n  );\n}\n\nSettings.defaultProps = { dark: false };\n\nSettings.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic settings icon",code:"import React from 'react';\nimport SettingsIcon from 'alys/SettingsIcon';\n\n/** Basic settings icon */\nexport default function ExampleBasic() {\n  return <SettingsIcon />;\n}\n"}]},{name:"SignOutIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function SignOutIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 21 20.9" {...svgProps}>\n      <g id="sign-out-icon" transform="translate(0 0)">\n        <path {...commonProps} id="path" d="M15.5,5.3,10.7.5,5.8,5.3" />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          d="M2.8,4.1A9.4,9.4,0,0,0,.5,10.4a10,10,0,0,0,20,0,9.4,9.4,0,0,0-2.3-6.3"\n        />\n        <line\n          {...commonProps}\n          id="line"\n          y2="11"\n          transform="translate(10.7 0.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nSignOutIcon.defaultProps = { dark: false };\n\nSignOutIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic sign out icon",code:"import React from 'react';\nimport SignOutIcon from 'alys/SignOutIcon';\n\n/** Basic sign out icon */\nexport default function ExampleBasic() {\n  return <SignOutIcon />;\n}\n"}]},{name:"SpeakerIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function SpeakerIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeLinejoin: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 18.5 16.179" {...svgProps}>\n      <g id="speaker-icon" transform="translate(0 0.016)">\n        <path\n          {...commonProps}\n          id="path"\n          d="M4.8,11.3H3.7A3.159,3.159,0,0,1,.5,8.1h0A3.159,3.159,0,0,1,3.7,4.9H4.8Z"\n        />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          d="M10.6,15.4,4.8,11.2V4.9L10.6.7a1.081,1.081,0,0,1,1.7.9v13A1.045,1.045,0,0,1,10.6,15.4Z"\n        />\n        <path\n          {...commonProps}\n          id="path-3"\n          data-name="path"\n          d="M14.4,11a4.373,4.373,0,0,0,0-5.8"\n        />\n        <path\n          {...commonProps}\n          id="path-4"\n          data-name="path"\n          d="M16.2,12.9A7.492,7.492,0,0,0,18,8.1a7.492,7.492,0,0,0-1.8-4.8"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nSpeakerIcon.defaultProps = { dark: false };\n\nSpeakerIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic speaker icon",code:"import React from 'react';\nimport SpeakerIcon from 'alys/SpeakerIcon';\n\n/** Basic speaker icon */\nexport default function ExampleBasic() {\n  return <SpeakerIcon />;\n}\n"}]},{name:"StreamIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function StreamIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 23 16.575" {...svgProps}>\n      <g id="stream-icon" transform="translate(0 -0.025)">\n        <circle\n          {...commonProps}\n          id="ellipse"\n          cx="0.5"\n          cy="0.5"\n          r="0.5"\n          transform="translate(11 15.1)"\n        />\n        <path\n          {...commonProps}\n          id="path"\n          strokeLinecap="round"\n          d="M6.9,12.4a6.58,6.58,0,0,1,9.2,0"\n        />\n        <path\n          {...commonProps}\n          id="path-2"\n          data-name="path"\n          strokeLinecap="round"\n          d="M4.2,8.6a10.322,10.322,0,0,1,14.7,0"\n        />\n        <path\n          {...commonProps}\n          id="path-3"\n          data-name="path"\n          strokeLinecap="round"\n          d="M.5,5.1a15.512,15.512,0,0,1,22,0"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nStreamIcon.defaultProps = { dark: false };\n\nStreamIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic stream icon",code:"import React from 'react';\nimport StreamIcon from 'alys/StreamIcon';\n\n/** Basic stream icon */\nexport default function ExampleBasic() {\n  return <StreamIcon />;\n}\n"}]},{name:"SvgIcon",description:"Renders SVG paths.",props:{children:{type:{name:"node"},required:!0,description:"SVG paths to render"},fontSize:{type:{name:"union",value:[{name:"string"},{name:"number"}]},required:!1,description:"Size of the icon",defaultValue:{value:"24",computed:!1}},viewBox:{type:{name:"string"},required:!1,description:"Defines the position and dimension for the content of the <svg> element",defaultValue:{value:"'0 0 24 24'",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nconst DEFAULT_FONT_SIZE = 24;\n\nSvgIcon.defaultProps = {\n  fontSize: DEFAULT_FONT_SIZE,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n",examples:[{name:"ExampleEyeIcon",description:"Basic EyeIcon component",code:'import React from \'react\';\nimport SvgIcon from \'alys/SvgIcon\';\n\n/** Basic EyeIcon component */\nexport default function ExampleEyeIcon({ dark, ...svgProps }) {\n  return (\n    <SvgIcon {...svgProps}>\n      <g\n        transform="matrix(.02146 0 0 .02146 1 1)"\n        fill={dark ? \'#fff\' : \'#4C5264\'}\n      >\n        <path d="m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1" />\n        <circle cx="466.08" cy="466.02" r="134.5" />\n      </g>\n    </SvgIcon>\n  );\n}\n'},{name:"ExampleEyeIcon4em",description:"EyeIcon component with font size of 4em",code:"import React from 'react';\nimport ExampleEyeIcon from './ExampleEyeIcon';\n\n/** EyeIcon component with font size of 4em */\nexport default function ExampleEyeIcon4em() {\n  return <ExampleEyeIcon fontSize=\"4em\" />;\n}\n"},{name:"ExampleEyeIcon64px",description:"EyeIcon component with font size of 64px",code:"import React from 'react';\nimport ExampleEyeIcon from './ExampleEyeIcon';\n\n/** EyeIcon component with font size of 64px */\nexport default function ExampleEyeIcon64px() {\n  return <ExampleEyeIcon fontSize={64} />;\n}\n"}]},{name:"TabletIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function TabletIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 17 22" {...svgProps}>\n      <g id="tablet-icon" transform="translate(0 0)">\n        <path\n          {...commonProps}\n          id="path"\n          d="M15.5,21.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h14a.945.945,0,0,1,1,1v19A.945.945,0,0,1,15.5,21.5Z"\n        />\n        <line {...commonProps} id="line" x2="16" transform="translate(1 4.5)" />\n        <line\n          {...commonProps}\n          id="line-2"\n          data-name="line"\n          strokeLinecap="round"\n          x2="2"\n          transform="translate(7.5 2.5)"\n        />\n        <circle\n          {...commonProps}\n          id="ellipse"\n          cx="0.5"\n          cy="0.5"\n          r="0.5"\n          transform="translate(8 18.5)"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nTabletIcon.defaultProps = { dark: false };\n\nTabletIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic tablet icon",code:"import React from 'react';\nimport TabletIcon from 'alys/TabletIcon';\n\n/** Basic tablet icon */\nexport default function ExampleBasic() {\n  return <TabletIcon />;\n}\n"}]},{name:"TrashIcon",description:"See <SvgIcon /> for more prop descriptions.",props:{dark:{type:{name:"bool"},required:!1,description:"Set to `true` to make icon viewable in dark backgrounds",defaultValue:{value:"false",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\n\nimport SvgIcon from \'../SvgIcon\';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function TrashIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: \'none\',\n    stroke: dark ? \'#fff\' : \'#4C5264\',\n    strokeLinecap: \'round\',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox="0 0 19 19" {...svgProps}>\n      <path\n        {...commonProps}\n        id="path"\n        d="M16.5,2.5l-1,15a.945.945,0,0,1-1,1H4.5a.945.945,0,0,1-1-1l-1-15"\n      />\n      <line id="line" {...commonProps} x2="18" transform="translate(0.5 2.5)" />\n      <line\n        {...commonProps}\n        id="line-2"\n        data-name="line"\n        x2="10"\n        transform="translate(4.5 0.5)"\n      />\n      <line\n        {...commonProps}\n        id="line-3"\n        data-name="line"\n        y2="10"\n        transform="translate(9.5 5.5)"\n      />\n      <line\n        {...commonProps}\n        id="line-4"\n        data-name="line"\n        y2="10"\n        transform="translate(6.5 5.5)"\n      />\n      <line\n        {...commonProps}\n        id="line-5"\n        data-name="line"\n        y2="10"\n        transform="translate(12.5 5.5)"\n      />\n    </SvgIcon>\n  );\n}\n\nTrashIcon.defaultProps = {\n  dark: false,\n};\n\nTrashIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n',examples:[{name:"ExampleBasic",description:"Basic trash icon",code:"import React from 'react';\nimport TrashIcon from 'alys/TrashIcon';\n\n/** Basic trash icon */\nexport default function ExampleBasic() {\n  return <TrashIcon />;\n}\n"}]}]},93:function(n,e,o){}},[[73,62,61]]]);
//# sourceMappingURL=main.32ed3147.chunk.js.map