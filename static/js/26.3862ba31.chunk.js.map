{"version":3,"sources":["examples/Rating/ExampleBasic.jsx","components/constants.js","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/Rating/index.js","components/Rating/Rating.jsx","components/common/StarIcon/index.js","components/common/StarIcon/StarIcon.jsx"],"names":["_useState2","_react","useState","value","setValue","default","createElement","Fragment","_Rating","onChange","_event","v","_interopRequireWildcard","__webpack_require__","colors","primary","primaryLight","primaryFill","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","lineHeights","avatarSizes","smaller","small","type","_SvgIcon","_stringUtils","SvgIcon","_ref","fontSize","viewBox","children","svgProps","_objectWithoutProperties","Object","assign","xmlns","color","focusable","width","styleLengths","height","defaultProps","_styledComponents","_interopRequireDefault","_StarIcon","Wrapper","styled","div","withConfig","displayName","componentId","ClickBox","props","static","Rating","initialValue","staticValue","_slicedToArray","_useState4","NaN","tempValue","setTempValue","onStarMouseOver","onStarMouseOut","Array","from","length","maxValue","map","_","i","key","concat","onClick","event","onMouseOver","onMouseOut","filled","_constants","fill","COLOR_PRIMARY_LIGHT","COLOR_PRIMARY","COLOR_WHITE","empty","COLOR_WHITE_BLUE","COLOR_GRAY","StarIcon","id","d","transform"],"mappings":"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","file":"static/js/26.3862ba31.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport Rating from 'alys/Rating';\n\n/** Basic rating with intial value of 3 */\nexport default function ExampleBasic() {\n  const [value, setValue] = useState(3);\n\n  const handleOnChange = (_event, v) => setValue(v);\n\n  return (\n    <Fragment>\n      <p>\n        Rating value: <strong>{value}</strong>\n      </p>\n\n      <Rating value={value} onChange={handleOnChange} />\n    </Fragment>\n  );\n}\n","export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_PRIMARY_FILL = '#dce9ff';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_BLUE_GRAY = '#b0caff';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const COLOR_BLACK_ALPHA20 = 'rgba(0, 0, 0, 0.2)';\nexport const COLOR_SHADOW = COLOR_BLACK_ALPHA20;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const TYPE_LINE_HEIGHT_HEADING_1 = 1.5;\nexport const TYPE_LINE_HEIGHT_HEADING_2 = 1.75;\nexport const TYPE_LINE_HEIGHT_HEADING_3 = 1.625;\nexport const TYPE_LINE_HEIGHT_HEADING_4 = 1.25;\nexport const TYPE_LINE_HEIGHT_HEADING_5 = 1.125;\nexport const TYPE_LINE_HEIGHT_HEADING_6 = 1;\nexport const TYPE_LINE_HEIGHT_PARAGRAPH = 1.25;\n\nexport const AVATAR_SIZE_SMALLER = 2.5;\nexport const AVATAR_SIZE_SMALL = 3.75;\nexport const AVATAR_SIZE_DEFAULT = 6.25;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  primaryFill: COLOR_PRIMARY_FILL,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport const lineHeights = {\n  h1: TYPE_LINE_HEIGHT_HEADING_1,\n  h2: TYPE_LINE_HEIGHT_HEADING_2,\n  h3: TYPE_LINE_HEIGHT_HEADING_3,\n  h4: TYPE_LINE_HEIGHT_HEADING_4,\n  h5: TYPE_LINE_HEIGHT_HEADING_5,\n  h6: TYPE_LINE_HEIGHT_HEADING_6,\n  p: TYPE_LINE_HEIGHT_PARAGRAPH,\n};\n\nexport const avatarSizes = {\n  smaller: AVATAR_SIZE_SMALLER,\n  small: AVATAR_SIZE_SMALL,\n  default: AVATAR_SIZE_DEFAULT,\n};\n\nexport const type = {\n  fontSizes,\n  lineHeights,\n};\n\nexport default {\n  colors,\n  type,\n  avatarSizes,\n};\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nSvgIcon.defaultProps = {\n  fontSize: 24,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n","export { default } from './Rating';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StarIcon from '@common/StarIcon';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  max-width: 5em;\n`;\n\nconst ClickBox = styled.div`\n  width: 100%;\n  cursor: ${(props) => (props.static ? 'default' : 'pointer')};\n`;\n\n/** Show a rating from 0 to 5 */\nexport default function Rating({\n  value: initialValue,\n  static: staticValue,\n  color,\n  onChange,\n}) {\n  const [value, setValue] = useState(initialValue);\n  const [tempValue, setTempValue] = useState(NaN);\n\n  const maxValue = 5;\n\n  const onStarClick = (v) => (event) => {\n    if (staticValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, v);\n    }\n\n    setTempValue(v);\n    setValue(v);\n  };\n\n  const onStarMouseOver = (v) => () => {\n    if (staticValue) {\n      return;\n    }\n\n    setTempValue(value);\n    setValue(v);\n  };\n\n  const onStarMouseOut = () => {\n    if (staticValue) {\n      return;\n    }\n\n    setTempValue(NaN);\n    setValue(tempValue);\n  };\n\n  return (\n    <Wrapper>\n      {Array.from({ length: maxValue + 1 }).map((_, i) =>\n        i !== 0 ? (\n          <ClickBox\n            key={`ratingstar${i}`}\n            static={staticValue}\n            onClick={onStarClick(i)}\n            onMouseOver={onStarMouseOver(i)}\n            onMouseOut={onStarMouseOut}\n          >\n            <StarIcon fontSize=\"0.77875em\" filled={i <= value} color={color} />\n          </ClickBox>\n        ) : null,\n      )}\n    </Wrapper>\n  );\n}\n\nRating.defaultProps = {\n  static: false,\n  color: 'default',\n};\n\nRating.propTypes = {\n  /** Amount of filled stars */\n  value: PropTypes.oneOf([0, 1, 2, 3, 4, 5]).isRequired,\n\n  /**\n   * Callback when rating value changes. Must have two params for the `event`\n   * object and the `value`\n   */\n  onChange: PropTypes.func,\n\n  /** If set to `true` the <Rating /> component value cannot be changed */\n  static: PropTypes.bool,\n\n  /** Fill color of <StarIcon /> items */\n  color: PropTypes.oneOf(['default', 'secondary']),\n};\n","export { default } from './StarIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  COLOR_PRIMARY,\n  COLOR_PRIMARY_LIGHT,\n  COLOR_WHITE,\n  COLOR_WHITE_BLUE,\n  COLOR_GRAY,\n} from '@/constants';\nimport SvgIcon from '@/SvgIcon';\n\nconst fill = {\n  default: COLOR_PRIMARY_LIGHT,\n  primary: COLOR_PRIMARY,\n  secondary: COLOR_WHITE,\n};\nconst empty = {\n  default: COLOR_WHITE_BLUE,\n  secondary: COLOR_GRAY,\n};\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function StarIcon({ filled, color, ...svgProps }) {\n  return (\n    <SvgIcon viewBox=\"0 0 13.067 12.462\" {...svgProps}>\n      <path\n        id=\"path\"\n        fill={filled ? (color ? fill[color] : 'currentColor') : empty[color]}\n        d=\"M12.619,4.474H8.242L6.921.3a.415.415,0,0,0-.784,0L4.774,4.474H.4a.408.408,0,0,0-.248.743L3.7,7.777l-1.362,4.17a.4.4,0,0,0,.619.454l3.551-2.56,3.551,2.56a.4.4,0,0,0,.619-.454L9.316,7.777l3.551-2.56A.408.408,0,0,0,12.619,4.474Z\"\n        transform=\"translate(0.026 -0.025)\"\n      />\n    </SvgIcon>\n  );\n}\n\nStarIcon.defaultProps = {\n  filled: false,\n};\n\nStarIcon.propTypes = {\n  /** Determines if star icon is filled */\n  filled: PropTypes.bool,\n\n  /** Fill color of star icon */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n};\n"],"sourceRoot":""}