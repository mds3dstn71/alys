{"version":3,"sources":["docs/Props.jsx","components/utils/string-utils.js","index.js","App.jsx","docs/Header.jsx","docs/assets/logo-icon.svg","docs/assets/github.svg","docs/Navigation/index.js","docs/Navigation/Navigation.jsx","docs/Example.jsx","docs/Navigation/NavigationItem.jsx","docs/ComponentPage.jsx","examples lazy /^/.//.*$/ groupOptions: {} namespace object","components/utils/number-utils.js","components/utils/props-utils.js","docs/component-data.js"],"names":["_ref6","props","_react","default","createElement","Table","HeaderCell","width","Object","entries","map","_ref7","_ref8","key","value","description","type","DataCell","name","Fragment","_propsUtils","parseType","v","concat","reduce","a","required","defaultValue","_interopRequireDefault","__webpack_require__","_propTypes","_styledComponents","_stringUtils","styled","table","withConfig","displayName","componentId","td","_ref","centered","_ref2","_ref2$width","styleLengths","attrs","_ref3","title","_ref4","_ref5","color","propItemPropsShape","PropTypes","shape","string","isRequired","any","bool","word","length","unit","arguments","undefined","isNaN","_numberUtils","filterInt","_reactDom","_App","ReactDOM","render","document","getElementById","_interopRequireWildcard","_Header","_Navigation","_ComponentPage","_componentData","MainContent","div","App","state","route","_this","_getRoute","_setRouteState","setState","Component","window","addEventListener","this","removeEventListener","component","componentData","filter","repoLink","components","active","location","hash","substr","Wrapper","Brand","as","href","AlysLogo","Link","Spacer","external","GithubLogo","logo","height","github","target","rel","r","__webpack_exports__","d","SvgComponent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_extends","assign","i","source","prototype","hasOwnProperty","call","apply","transform","fill","stroke","version","viewBox","preserveAspectRatio","p","fillRule","clipRule","_NavigationItem","List","ul","Navigation","text","defaultProps","SyntaxHighlightedCode","React","lazy","e","then","t","bind","Description","h4","ButtonWrapper","examplePropsShape","code","Example","showCode","_toggleCode","event","preventDefault","prevState","_this2","_this$props$example","example","ExampleComponent","componentName","Suspense","fallback","onClick","Item","li","NavigationItem","examples","numOfExamples","pluralize","Props","Promise","resolve","./AddMentorIcon/ExampleBasic","./AddMentorIcon/ExampleBasic.jsx","./ArrowLeftIcon/ExampleBasic","./ArrowLeftIcon/ExampleBasic.jsx","./ArrowRightIcon/ExampleBasic","./ArrowRightIcon/ExampleBasic.jsx","./AttachmentIcon/ExampleBasic","./AttachmentIcon/ExampleBasic.jsx","./Avatar/ExampleDefaultSmaller","./Avatar/ExampleDefaultSmaller.jsx","./Avatar/ExampleNormal","./Avatar/ExampleNormal.jsx","./Avatar/ExampleOutlined","./Avatar/ExampleOutlined.jsx","./Avatar/ExampleSmallRound","./Avatar/ExampleSmallRound.jsx","./Avatar/ExampleSmallSize","./Avatar/ExampleSmallSize.jsx","./Avatar/ExampleSmaller","./Avatar/ExampleSmaller.jsx","./CameraFlipIcon/ExampleBasic","./CameraFlipIcon/ExampleBasic.jsx","./CameraIcon/ExampleBasic","./CameraIcon/ExampleBasic.jsx","./CardIcon/ExampleBasic","./CardIcon/ExampleBasic.jsx","./ChevronLeftIcon/ExampleBasic","./ChevronLeftIcon/ExampleBasic.jsx","./ChevronRightIcon/ExampleBasic","./ChevronRightIcon/ExampleBasic.jsx","./ClockIcon/ExampleBasic","./ClockIcon/ExampleBasic.jsx","./CloseIcon/ExampleBasic","./CloseIcon/ExampleBasic.jsx","./CommentIcon/ExampleBasic","./CommentIcon/ExampleBasic.jsx","./ComputerIcon/ExampleBasic","./ComputerIcon/ExampleBasic.jsx","./ConfirmIcon/ExampleBasic","./ConfirmIcon/ExampleBasic.jsx","./EmailIcon/ExampleBasic","./EmailIcon/ExampleBasic.jsx","./EnlargeIcon/ExampleBasic","./EnlargeIcon/ExampleBasic.jsx","./FiltersIcon/ExampleBasic","./FiltersIcon/ExampleBasic.jsx","./HappyIcon/ExampleBasic","./HappyIcon/ExampleBasic.jsx","./HomeIcon/ExampleBasic","./HomeIcon/ExampleBasic.jsx","./LaptopIcon/ExampleBasic","./LaptopIcon/ExampleBasic.jsx","./LikeIcon/ExampleBasic","./LikeIcon/ExampleBasic.jsx","./LiveIcon/ExampleBasic","./LiveIcon/ExampleBasic.jsx","./LocationIcon/ExampleBasic","./LocationIcon/ExampleBasic.jsx","./MentorIcon/ExampleBasic","./MentorIcon/ExampleBasic.jsx","./MicrophoneIcon/ExampleBasic","./MicrophoneIcon/ExampleBasic.jsx","./NewIcon/ExampleBasic","./NewIcon/ExampleBasic.jsx","./OptionsIcon/ExampleBasic","./OptionsIcon/ExampleBasic.jsx","./PasswordIcon/ExampleBasic","./PasswordIcon/ExampleBasic.jsx","./PencilIcon/ExampleBasic","./PencilIcon/ExampleBasic.jsx","./PhoneIcon/ExampleBasic","./PhoneIcon/ExampleBasic.jsx","./PhoneXIcon/ExampleBasic","./PhoneXIcon/ExampleBasic.jsx","./PreviewIcon/ExampleBasic","./PreviewIcon/ExampleBasic.jsx","./ProgressBar/Example100Percent","./ProgressBar/Example100Percent.jsx","./ProgressBar/Example10Percent","./ProgressBar/Example10Percent.jsx","./ProgressBar/Example20pxHeight","./ProgressBar/Example20pxHeight.jsx","./ProgressBar/Example70Percent","./ProgressBar/Example70Percent.jsx","./Rating/Example0Stars","./Rating/Example0Stars.jsx","./Rating/Example3Stars","./Rating/Example3Stars.jsx","./Rating/Example5Stars","./Rating/Example5Stars.jsx","./Rating/ExampleSecondary3Stars","./Rating/ExampleSecondary3Stars.jsx","./RegisterIcon/ExampleBasic","./RegisterIcon/ExampleBasic.jsx","./RemoveMentorIcon/ExampleBasic","./RemoveMentorIcon/ExampleBasic.jsx","./SadIcon/ExampleBasic","./SadIcon/ExampleBasic.jsx","./SearchIcon/ExampleBasic","./SearchIcon/ExampleBasic.jsx","./SettingsIcon/ExampleBasic","./SettingsIcon/ExampleBasic.jsx","./SignOutIcon/ExampleBasic","./SignOutIcon/ExampleBasic.jsx","./SpeakerIcon/ExampleBasic","./SpeakerIcon/ExampleBasic.jsx","./StreamIcon/ExampleBasic","./StreamIcon/ExampleBasic.jsx","./SvgIcon/ExampleEyeIcon","./SvgIcon/ExampleEyeIcon.jsx","./SvgIcon/ExampleEyeIcon4em","./SvgIcon/ExampleEyeIcon4em.jsx","./SvgIcon/ExampleEyeIcon64px","./SvgIcon/ExampleEyeIcon64px.jsx","./TabletIcon/ExampleBasic","./TabletIcon/ExampleBasic.jsx","./TrashIcon/ExampleBasic","./TrashIcon/ExampleBasic.jsx","webpackAsyncContext","req","ids","id","Error","keys","module","exports","test","Number","NaN","PROPTYPE_ENUM","replace","parseEnum","PROPTYPE_UNION","parseCustomOrSimple","parseUnion","PROPTYPE_CUSTOM","raw","dark","computed","src","alt","outlined","size","round","percent","children","fontSize"],"mappings":"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,CACA,GACA,IAEAC,6BAAA,CACA,GACA,IAEAC,iCAAA,CACA,GACA,IAEAC,2BAAA,CACA,GACA,IAEAC,+BAAA,CACA,GACA,IAEAC,6BAAA,CACA,GACA,IAEAC,iCAAA,CACA,GACA,IAEAC,6BAAA,CACA,GACA,IAEAC,iCAAA,CACA,GACA,IAEAC,2BAAA,CACA,GACA,IAEAC,+BAAA,CACA,GACA,IAEAC,0BAAA,CACA,GACA,IAEAC,8BAAA,CACA,GACA,IAEAC,4BAAA,CACA,GACA,IAEAC,gCAAA,CACA,GACA,IAEAC,0BAAA,CACA,GACA,IAEAC,8BAAA,CACA,GACA,IAEAC,0BAAA,CACA,GACA,IAEAC,8BAAA,CACA,GACA,IAEAC,8BAAA,CACA,GACA,IAEAC,kCAAA,CACA,GACA,IAEAC,4BAAA,CACA,GACA,IAEAC,gCAAA,CACA,GACA,IAEAC,gCAAA,CACA,GACA,IAEAC,oCAAA,CACA,GACA,IAEAC,yBAAA,CACA,GACA,IAEAC,6BAAA,CACA,GACA,IAEAC,6BAAA,CACA,GACA,IAEAC,iCAAA,CACA,GACA,IAEAC,8BAAA,CACA,GACA,IAEAC,kCAAA,CACA,GACA,IAEAC,4BAAA,CACA,GACA,IAEAC,gCAAA,CACA,GACA,IAEAC,2BAAA,CACA,GACA,IAEAC,+BAAA,CACA,GACA,IAEAC,4BAAA,CACA,GACA,IAEAC,gCAAA,CACA,GACA,IAEAC,6BAAA,CACA,GACA,IAEAC,iCAAA,CACA,GACA,IAEAC,kCAAA,CACA,GACA,IAEAC,sCAAA,CACA,GACA,IAEAC,iCAAA,CACA,GACA,IAEAC,qCAAA,CACA,GACA,IAEAC,kCAAA,CACA,GACA,IAEAC,sCAAA,CACA,GACA,IAEAC,iCAAA,CACA,GACA,IAEAC,qCAAA,CACA,GACA,IAEAC,yBAAA,CACA,GACA,IAEAC,6BAAA,CACA,GACA,IAEAC,yBAAA,CACA,GACA,IAEAC,6BAAA,CACA,GACA,IAEAC,yBAAA,CACA,GACA,IAEAC,6BAAA,CACA,GACA,IAEAC,kCAAA,CACA,GACA,IAEAC,sCAAA,CACA,GACA,I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","file":"static/js/main.5b10310d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { styleLengths } from '@utils/string-utils';\nimport { parseType } from '@utils/props-utils';\n\nconst Table = styled.table`\n  margin-bottom: 1em;\n  width: 100%;\n`;\n\nconst HeaderCell = styled.td`\n  text-align: ${({ centered }) => (centered ? 'center' : 'left')};\n  padding: 5px;\n  font-weight: 700;\n  width: ${({ width = 'auto' }) => styleLengths(width, '%')};\n`;\n\nconst DataCell = styled.td.attrs(({ required }) => ({\n  title: required ? 'This prop is required by the component.' : null,\n}))`\n  padding: 5px;\n  text-align: ${({ centered }) => (centered ? 'center' : 'left')};\n  color: ${({ required, color }) => (required ? '#aaa' : color)};\n`;\n\nexport const propItemPropsShape = PropTypes.shape({\n  description: PropTypes.string.isRequired,\n  type: PropTypes.shape({ name: PropTypes.string }).isRequired,\n  defaultValue: PropTypes.shape({ value: PropTypes.any }),\n  required: PropTypes.bool,\n});\n\nexport default function Props({ props }) {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <HeaderCell width={20}>Name</HeaderCell>\n          <HeaderCell width={50}>Description</HeaderCell>\n          <HeaderCell width={15}>Type</HeaderCell>\n          <HeaderCell width={15}>Default</HeaderCell>\n        </tr>\n      </thead>\n\n      <tbody>\n        {Object.entries(props).map(([key, value]) => {\n          const { description, type } = value;\n\n          return (\n            <tr key={key}>\n              <DataCell>{key}</DataCell>\n\n              <DataCell>{description}</DataCell>\n\n              <DataCell>\n                <code>{type.name}</code>\n\n                {type.name === 'enum' && (\n                  <React.Fragment>\n                    :{' '}\n                    {parseType(type)\n                      .map((v) => <code key={`${key}-${v}`}>{v}</code>)\n                      .reduce((a, v) => [a, ' | ', v])}\n                  </React.Fragment>\n                )}\n\n                {type.name === 'union' && (\n                  <React.Fragment>\n                    :{' '}\n                    {parseType(type)\n                      .map((v) => <code key={`${key}-${v}`}>{v}</code>)\n                      .reduce((a, v) => [a, ', ', v])}\n                  </React.Fragment>\n                )}\n\n                {type.name === 'custom' && (\n                  <React.Fragment>\n                    : {<code>{parseType(type)}</code>}\n                  </React.Fragment>\n                )}\n              </DataCell>\n\n              <DataCell required={value.required}>\n                {value.defaultValue && value.defaultValue.value}\n                {value.required && 'required'}\n              </DataCell>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n}\n\nProps.propTypes = {\n  props: PropTypes.objectOf(propItemPropsShape).isRequired,\n};\n","import { filterInt } from './number-utils';\n\n/** Returns the plural form of a word. */\nexport function pluralize(word) {\n  return `${word}s`;\n}\n\n/** Returns a valid style length value. */\nexport function styleLengths(length, unit = 'px') {\n  if (isNaN(filterInt(length))) {\n    return length;\n  }\n\n  return `${length}${unit}`;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport Header from './docs/Header';\nimport Navigation from './docs/Navigation';\nimport ComponentPage from './docs/ComponentPage';\nimport componentData from './docs/component-data';\n\nconst MainContent = styled.div`\n  position: fixed;\n  width: 100%;\n  overflow-y: auto;\n  height: calc(100% - 69px);\n`;\n\nexport default class App extends Component {\n  state = {\n    route: this._getRoute(),\n  };\n\n  componentDidMount() {\n    window.addEventListener('hashchange', this._setRouteState);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('hashchange', this._setRouteState);\n  }\n\n  render() {\n    const { route } = this.state;\n    const component = route\n      ? componentData.filter(({ name }) => name === route)[0]\n      : componentData[0];\n\n    return (\n      <React.Fragment>\n        <Header\n          title=\"Alys / Components\"\n          repoLink=\"https://github.com/rmjordas/alys\"\n        />\n\n        <MainContent>\n          <Navigation\n            components={componentData.map(({ name }) => name)}\n            active={route}\n          />\n\n          <ComponentPage component={component} />\n        </MainContent>\n      </React.Fragment>\n    );\n  }\n\n  _getRoute() {\n    return window.location.hash.substr(1);\n  }\n\n  _setRouteState = () => {\n    this.setState({\n      route: this._getRoute(),\n    });\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { ReactComponent as logo } from './assets/logo-icon.svg';\nimport { ReactComponent as github } from './assets/github.svg';\n\nconst AlysLogo = styled(logo).attrs(() => ({\n  height: '20px',\n  width: '20px',\n}))`\n  margin: 0 0.5em;\n`;\n\nconst GithubLogo = styled(github).attrs(() => ({\n  height: '20px',\n  width: '20px',\n}))`\n  margin: 0 0.5em;\n\n  && path {\n    fill: #fff;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0;\n  padding: 1em;\n  color: #fff;\n  background-color: #333;\n  border-bottom: 1px solid #d4dadf;\n  box-shadow: 0 1px 1px 0 rgba(116, 129, 141, 0.1);\n`;\n\nconst Brand = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  text-decoration: none;\n\n  &:visited {\n    color: #fff;\n  }\n`;\n\nconst Link = styled.a.attrs(\n  ({ external }) =>\n    external && {\n      target: '_blank',\n      rel: 'noopener noreferrer',\n    },\n)`\n  font-size: 1.5em;\n  line-height: 1.5;\n  text-decoration: none;\n\n  &:visited {\n    color: #fff;\n  }\n`;\n\nconst Spacer = styled.div`\n  flex: 1;\n`;\n\nexport default function Header({ title, repoLink }) {\n  return (\n    <Wrapper>\n      <Brand as=\"a\" href=\"/\">\n        <AlysLogo />\n        <Link as=\"span\">{title}</Link>\n      </Brand>\n\n      <Spacer />\n\n      <Link href={repoLink} external>\n        <GithubLogo />\n      </Link>\n    </Wrapper>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"metadata\", null, \"Created by potrace 1.11, written by Peter Selinger 2001-2013\");\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0.000000,760.000000) scale(0.100000,-0.100000)\",\n  fill: \"#fff\",\n  stroke: \"none\"\n}, React.createElement(\"path\", {\n  d: \"M3785 7518 c-24 -82 -148 -458 -172 -523 -10 -27 -21 -51 -25 -53 -5\\n-2 -8 -11 -8 -21 0 -9 -7 -27 -16 -39 -8 -12 -13 -22 -11 -22 3 0 -17 -41 -44\\n-92 -27 -51 -49 -96 -49 -100 0 -4 -4 -8 -10 -8 -5 0 -10 -5 -10 -12 0 -9\\n-131 -213 -162 -253 -4 -5 -38 -48 -75 -95 -79 -100 -148 -181 -262 -309 -128\\n-144 -538 -559 -772 -783 -73 -69 -297 -281 -428 -404 -46 -44 -115 -109 -154\\n-146 -39 -38 -75 -68 -79 -68 -4 0 -8 -3 -8 -7 0 -5 -67 -76 -148 -158 -81\\n-83 -158 -166 -172 -185 -14 -19 -33 -42 -43 -53 -34 -35 -144 -212 -195 -312\\n-96 -192 -126 -266 -154 -380 -19 -79 -22 -118 -22 -315 0 -124 3 -250 7 -280\\n4 -30 9 -67 11 -82 3 -15 11 -56 20 -90 63 -252 183 -447 387 -631 90 -81 90\\n-81 129 -108 19 -13 42 -31 52 -40 10 -9 31 -22 46 -30 15 -8 29 -17 32 -20\\n21 -25 253 -114 326 -125 22 -3 50 -7 64 -10 123 -23 441 -22 580 1 451 77\\n806 318 1097 746 32 46 81 118 108 158 28 40 70 94 94 120 l44 46 12 -28 c13\\n-33 10 -157 -10 -362 -3 -22 -6 -60 -9 -85 -7 -81 -17 -155 -21 -170 -2 -8 -7\\n-35 -10 -60 -3 -25 -8 -52 -11 -61 -3 -10 -7 -30 -9 -45 -2 -16 -9 -49 -16\\n-74 -6 -25 -12 -52 -14 -60 -3 -13 -31 -118 -39 -145 -2 -5 -6 -17 -9 -25 -3\\n-8 -15 -44 -28 -80 -67 -200 -185 -415 -321 -587 -67 -86 -222 -243 -308 -313\\n-30 -25 -60 -49 -67 -55 -7 -5 -18 -15 -25 -20 -42 -34 -199 -131 -256 -158\\n-37 -18 -74 -37 -82 -42 -8 -6 -28 -15 -45 -21 -16 -6 -67 -25 -113 -42 -45\\n-18 -93 -34 -105 -37 -12 -3 -65 -17 -117 -31 -52 -14 -106 -28 -120 -30 -14\\n-3 -45 -10 -70 -15 -47 -11 -80 -17 -140 -24 -19 -2 -35 -4 -35 -5 0 -2 -35\\n-8 -85 -15 -231 -30 -315 -51 -344 -86 -13 -15 -22 -38 -21 -51 1 -13 3 -29 4\\n-35 0 -7 16 -19 35 -27 88 -37 335 -41 2441 -41 1722 0 2223 4 2315 20 14 2\\n41 6 61 9 52 8 65 14 77 40 21 47 3 100 -42 120 -41 19 -153 45 -256 60 -19 3\\n-46 8 -60 11 -14 3 -41 7 -60 10 -36 5 -121 18 -130 20 -3 1 -23 5 -45 9 -22\\n5 -65 14 -95 21 -30 8 -66 16 -80 18 -14 3 -80 23 -147 46 -453 152 -871 444\\n-1083 756 -19 28 -42 59 -52 70 -9 11 -18 25 -19 30 -1 6 -19 44 -39 87 -21\\n42 -40 84 -43 95 -3 10 -20 56 -37 103 -52 146 -122 410 -151 570 -35 204 -40\\n259 -46 540 l-5 235 21 -22 c12 -12 21 -26 21 -31 0 -4 8 -17 18 -28 24 -27\\n62 -82 62 -89 0 -3 5 -11 10 -18 6 -7 45 -62 88 -122 81 -116 82 -118 178\\n-229 203 -235 487 -447 699 -523 56 -20 80 -26 160 -39 133 -22 182 -25 355\\n-28 194 -3 321 11 415 46 73 26 239 108 243 120 2 4 9 8 16 8 23 0 212 146\\n287 222 124 124 187 208 256 338 42 80 95 215 87 223 -2 2 0 15 5 28 17 45 26\\n193 25 399 -1 187 -11 297 -39 425 -4 17 -8 35 -9 40 -1 6 -4 15 -7 20 -4 6\\n-9 22 -13 37 -3 15 -11 40 -18 55 -6 15 -12 30 -13 33 -11 36 -96 192 -140\\n256 -34 50 -128 179 -134 184 -4 3 -17 18 -29 34 -25 32 -103 123 -172 200\\n-163 180 -312 335 -800 826 -432 434 -607 615 -745 765 -49 54 -97 105 -105\\n114 -8 9 -53 61 -98 116 -46 55 -91 109 -101 120 -9 11 -32 43 -51 70 -19 28\\n-38 52 -41 55 -10 9 -86 125 -85 130 0 3 -14 26 -32 52 -45 66 -131 241 -187\\n383 -26 66 -51 129 -56 140 -4 11 -36 99 -70 195 -76 216 -70 200 -78 200 -4\\n0 -16 -28 -26 -62z\"\n}));\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    version: 1.0,\n    width: \"20px\",\n    height: \"20px\",\n    viewBox: \"0 0 760.000000 760.000000\",\n    preserveAspectRatio: \"xMidYMid meet\"\n  }, props), _ref, _ref2);\n};\n\nexport default __webpack_public_path__ + \"static/media/logo-icon.3fa9413b.svg\";\nexport { SvgComponent as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\",\n  transform: \"scale(64)\",\n  fill: \"#1B1F23\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 1024,\n    height: 1024,\n    viewBox: \"0 0 1024 1024\",\n    fill: \"none\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/github.07883e93.svg\";\nexport { SvgComponent as ReactComponent };","export { default } from './Navigation';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport NavigationItem from './NavigationItem';\n\nconst List = styled.ul`\n  float: left;\n  width: 16em;\n  list-style-type: none;\n  padding: 1em;\n  display: none;\n  height: calc(100% - 2em);\n  overflow-y: auto;\n  margin: 0;\n\n  @media (min-width: 60em) {\n    display: block;\n  }\n`;\n\nexport default function Navigation({ components, active }) {\n  return (\n    <List>\n      {components.map((name) => (\n        <NavigationItem key={name} text={name} active={active === name} />\n      ))}\n    </List>\n  );\n}\n\nNavigation.defaultProps = {\n  active: '#',\n};\n\nNavigation.propTypes = {\n  /** List of component names */\n  components: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n  /** Name of component currently being viewed */\n  active: PropTypes.string,\n};\n","import React, { Component, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst SyntaxHighlightedCode = React.lazy(() =>\n  import('@common/SyntaxHighlightedCode'),\n);\n\nconst Wrapper = styled.div`\n  border: solid 1px #d3d3d3;\n  padding: 1em;\n  margin-bottom: 1em;\n  background-color: #f4f6f9;\n`;\n\nconst Description = styled.h4`\n  margin-top: 0;\n`;\n\nconst ButtonWrapper = styled.p`\n  margin-bottom: 0;\n`;\n\nexport const examplePropsShape = PropTypes.shape({\n  code: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string.isRequired,\n});\n\nexport default class Example extends Component {\n  static propTypes = {\n    examples: PropTypes.arrayOf(examplePropsShape),\n    componentName: PropTypes.string.isRequired,\n  };\n\n  state = {\n    showCode: false,\n  };\n\n  render() {\n    const { showCode } = this.state;\n    const { code, description, name } = this.props.example;\n    const ExampleComponent = React.lazy(() =>\n      import(`../examples/${this.props.componentName}/${name}`),\n    );\n\n    return (\n      <Wrapper>\n        {description && <Description>{description}</Description>}\n\n        <Suspense fallback={<div>Loading...</div>}>\n          <ExampleComponent />\n        </Suspense>\n\n        <ButtonWrapper>\n          <button onClick={this._toggleCode}>\n            {showCode ? 'Hide' : 'Show'} Code\n          </button>\n        </ButtonWrapper>\n\n        {showCode && (\n          <Suspense\n            fallback={\n              <pre>\n                <code>Loading...</code>\n              </pre>\n            }\n          >\n            <SyntaxHighlightedCode>{code}</SyntaxHighlightedCode>\n          </Suspense>\n        )}\n      </Wrapper>\n    );\n  }\n\n  _toggleCode = (event) => {\n    event.preventDefault();\n    this.setState((prevState) => ({ showCode: !prevState.showCode }));\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Item = styled.li`\n  padding: 0.5em 0;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n  font-weight: ${({ active }) => (active ? 500 : 400)};\n`;\n\nexport default function NavigationItem({ text, active }) {\n  return (\n    <Item>\n      <Link href={`#${text}`} active={active}>\n        {text}\n      </Link>\n    </Item>\n  );\n}\n\nNavigationItem.defaultProps = {\n  active: false,\n};\n\nNavigationItem.propTypes = {\n  /** Text to display */\n  text: PropTypes.string.isRequired,\n\n  /** `true` if item is currently viewed */\n  active: PropTypes.bool,\n};\n","import React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { examplePropShape } from './Example';\nimport { propItemPropsShape } from './Props';\nimport { pluralize } from '@utils/string-utils';\n\nconst Example = React.lazy(() => import('./Example'));\nconst Props = React.lazy(() => import('./Props'));\n\nconst Wrapper = styled.div`\n  padding: 0 1em 0 1em;\n  height: 100%;\n  overflow-y: auto;\n\n  @media (min-width: 60em) {\n    margin-left: 18.5em;\n  }\n`;\n\nexport default function ComponentPage({ component }) {\n  const { name, description, props, examples } = component;\n  const numOfExamples = examples.length;\n\n  return (\n    <Wrapper>\n      <h2>\n        <code>{name}</code>\n      </h2>\n\n      <p>{description}</p>\n\n      <h3>{numOfExamples > 1 && pluralize('Example')}</h3>\n\n      {numOfExamples > 0\n        ? examples.map((example) => (\n            <Suspense\n              key={example.code}\n              fallback={<React.Fragment>Loading...</React.Fragment>}\n            >\n              <Example example={example} componentName={name} />\n            </Suspense>\n          ))\n        : 'No examples exist.'}\n\n      <h3>Props</h3>\n\n      {props ? (\n        <Suspense fallback={<React.Fragment>Loading...</React.Fragment>}>\n          <Props props={props} />\n        </Suspense>\n      ) : (\n        'This component accepts no props.'\n      )}\n    </Wrapper>\n  );\n}\n\nComponentPage.propTypes = {\n  component: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    props: PropTypes.objectOf(propItemPropsShape),\n    examples: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.arrayOf(examplePropShape),\n    ]),\n  }).isRequired,\n};\n","var map = {\n\t\"./AddMentorIcon/ExampleBasic\": [\n\t\t15,\n\t\t0\n\t],\n\t\"./AddMentorIcon/ExampleBasic.jsx\": [\n\t\t15,\n\t\t0\n\t],\n\t\"./ArrowLeftIcon/ExampleBasic\": [\n\t\t16,\n\t\t1\n\t],\n\t\"./ArrowLeftIcon/ExampleBasic.jsx\": [\n\t\t16,\n\t\t1\n\t],\n\t\"./ArrowRightIcon/ExampleBasic\": [\n\t\t17,\n\t\t2\n\t],\n\t\"./ArrowRightIcon/ExampleBasic.jsx\": [\n\t\t17,\n\t\t2\n\t],\n\t\"./AttachmentIcon/ExampleBasic\": [\n\t\t18,\n\t\t3\n\t],\n\t\"./AttachmentIcon/ExampleBasic.jsx\": [\n\t\t18,\n\t\t3\n\t],\n\t\"./Avatar/ExampleDefaultSmaller\": [\n\t\t19,\n\t\t4\n\t],\n\t\"./Avatar/ExampleDefaultSmaller.jsx\": [\n\t\t19,\n\t\t4\n\t],\n\t\"./Avatar/ExampleNormal\": [\n\t\t20,\n\t\t5\n\t],\n\t\"./Avatar/ExampleNormal.jsx\": [\n\t\t20,\n\t\t5\n\t],\n\t\"./Avatar/ExampleOutlined\": [\n\t\t21,\n\t\t6\n\t],\n\t\"./Avatar/ExampleOutlined.jsx\": [\n\t\t21,\n\t\t6\n\t],\n\t\"./Avatar/ExampleSmallRound\": [\n\t\t22,\n\t\t7\n\t],\n\t\"./Avatar/ExampleSmallRound.jsx\": [\n\t\t22,\n\t\t7\n\t],\n\t\"./Avatar/ExampleSmallSize\": [\n\t\t23,\n\t\t8\n\t],\n\t\"./Avatar/ExampleSmallSize.jsx\": [\n\t\t23,\n\t\t8\n\t],\n\t\"./Avatar/ExampleSmaller\": [\n\t\t24,\n\t\t9\n\t],\n\t\"./Avatar/ExampleSmaller.jsx\": [\n\t\t24,\n\t\t9\n\t],\n\t\"./CameraFlipIcon/ExampleBasic\": [\n\t\t25,\n\t\t10\n\t],\n\t\"./CameraFlipIcon/ExampleBasic.jsx\": [\n\t\t25,\n\t\t10\n\t],\n\t\"./CameraIcon/ExampleBasic\": [\n\t\t26,\n\t\t11\n\t],\n\t\"./CameraIcon/ExampleBasic.jsx\": [\n\t\t26,\n\t\t11\n\t],\n\t\"./CardIcon/ExampleBasic\": [\n\t\t27,\n\t\t12\n\t],\n\t\"./CardIcon/ExampleBasic.jsx\": [\n\t\t27,\n\t\t12\n\t],\n\t\"./ChevronLeftIcon/ExampleBasic\": [\n\t\t28,\n\t\t13\n\t],\n\t\"./ChevronLeftIcon/ExampleBasic.jsx\": [\n\t\t28,\n\t\t13\n\t],\n\t\"./ChevronRightIcon/ExampleBasic\": [\n\t\t29,\n\t\t14\n\t],\n\t\"./ChevronRightIcon/ExampleBasic.jsx\": [\n\t\t29,\n\t\t14\n\t],\n\t\"./ClockIcon/ExampleBasic\": [\n\t\t30,\n\t\t15\n\t],\n\t\"./ClockIcon/ExampleBasic.jsx\": [\n\t\t30,\n\t\t15\n\t],\n\t\"./CloseIcon/ExampleBasic\": [\n\t\t31,\n\t\t16\n\t],\n\t\"./CloseIcon/ExampleBasic.jsx\": [\n\t\t31,\n\t\t16\n\t],\n\t\"./CommentIcon/ExampleBasic\": [\n\t\t32,\n\t\t17\n\t],\n\t\"./CommentIcon/ExampleBasic.jsx\": [\n\t\t32,\n\t\t17\n\t],\n\t\"./ComputerIcon/ExampleBasic\": [\n\t\t33,\n\t\t18\n\t],\n\t\"./ComputerIcon/ExampleBasic.jsx\": [\n\t\t33,\n\t\t18\n\t],\n\t\"./ConfirmIcon/ExampleBasic\": [\n\t\t34,\n\t\t19\n\t],\n\t\"./ConfirmIcon/ExampleBasic.jsx\": [\n\t\t34,\n\t\t19\n\t],\n\t\"./EmailIcon/ExampleBasic\": [\n\t\t35,\n\t\t20\n\t],\n\t\"./EmailIcon/ExampleBasic.jsx\": [\n\t\t35,\n\t\t20\n\t],\n\t\"./EnlargeIcon/ExampleBasic\": [\n\t\t36,\n\t\t21\n\t],\n\t\"./EnlargeIcon/ExampleBasic.jsx\": [\n\t\t36,\n\t\t21\n\t],\n\t\"./FiltersIcon/ExampleBasic\": [\n\t\t37,\n\t\t22\n\t],\n\t\"./FiltersIcon/ExampleBasic.jsx\": [\n\t\t37,\n\t\t22\n\t],\n\t\"./HappyIcon/ExampleBasic\": [\n\t\t38,\n\t\t23\n\t],\n\t\"./HappyIcon/ExampleBasic.jsx\": [\n\t\t38,\n\t\t23\n\t],\n\t\"./HomeIcon/ExampleBasic\": [\n\t\t39,\n\t\t24\n\t],\n\t\"./HomeIcon/ExampleBasic.jsx\": [\n\t\t39,\n\t\t24\n\t],\n\t\"./LaptopIcon/ExampleBasic\": [\n\t\t40,\n\t\t25\n\t],\n\t\"./LaptopIcon/ExampleBasic.jsx\": [\n\t\t40,\n\t\t25\n\t],\n\t\"./LikeIcon/ExampleBasic\": [\n\t\t41,\n\t\t26\n\t],\n\t\"./LikeIcon/ExampleBasic.jsx\": [\n\t\t41,\n\t\t26\n\t],\n\t\"./LiveIcon/ExampleBasic\": [\n\t\t42,\n\t\t27\n\t],\n\t\"./LiveIcon/ExampleBasic.jsx\": [\n\t\t42,\n\t\t27\n\t],\n\t\"./LocationIcon/ExampleBasic\": [\n\t\t43,\n\t\t28\n\t],\n\t\"./LocationIcon/ExampleBasic.jsx\": [\n\t\t43,\n\t\t28\n\t],\n\t\"./MentorIcon/ExampleBasic\": [\n\t\t44,\n\t\t29\n\t],\n\t\"./MentorIcon/ExampleBasic.jsx\": [\n\t\t44,\n\t\t29\n\t],\n\t\"./MicrophoneIcon/ExampleBasic\": [\n\t\t45,\n\t\t30\n\t],\n\t\"./MicrophoneIcon/ExampleBasic.jsx\": [\n\t\t45,\n\t\t30\n\t],\n\t\"./NewIcon/ExampleBasic\": [\n\t\t46,\n\t\t31\n\t],\n\t\"./NewIcon/ExampleBasic.jsx\": [\n\t\t46,\n\t\t31\n\t],\n\t\"./OptionsIcon/ExampleBasic\": [\n\t\t47,\n\t\t32\n\t],\n\t\"./OptionsIcon/ExampleBasic.jsx\": [\n\t\t47,\n\t\t32\n\t],\n\t\"./PasswordIcon/ExampleBasic\": [\n\t\t48,\n\t\t33\n\t],\n\t\"./PasswordIcon/ExampleBasic.jsx\": [\n\t\t48,\n\t\t33\n\t],\n\t\"./PencilIcon/ExampleBasic\": [\n\t\t49,\n\t\t34\n\t],\n\t\"./PencilIcon/ExampleBasic.jsx\": [\n\t\t49,\n\t\t34\n\t],\n\t\"./PhoneIcon/ExampleBasic\": [\n\t\t50,\n\t\t35\n\t],\n\t\"./PhoneIcon/ExampleBasic.jsx\": [\n\t\t50,\n\t\t35\n\t],\n\t\"./PhoneXIcon/ExampleBasic\": [\n\t\t51,\n\t\t36\n\t],\n\t\"./PhoneXIcon/ExampleBasic.jsx\": [\n\t\t51,\n\t\t36\n\t],\n\t\"./PreviewIcon/ExampleBasic\": [\n\t\t52,\n\t\t37\n\t],\n\t\"./PreviewIcon/ExampleBasic.jsx\": [\n\t\t52,\n\t\t37\n\t],\n\t\"./ProgressBar/Example100Percent\": [\n\t\t53,\n\t\t38\n\t],\n\t\"./ProgressBar/Example100Percent.jsx\": [\n\t\t53,\n\t\t38\n\t],\n\t\"./ProgressBar/Example10Percent\": [\n\t\t54,\n\t\t39\n\t],\n\t\"./ProgressBar/Example10Percent.jsx\": [\n\t\t54,\n\t\t39\n\t],\n\t\"./ProgressBar/Example20pxHeight\": [\n\t\t55,\n\t\t40\n\t],\n\t\"./ProgressBar/Example20pxHeight.jsx\": [\n\t\t55,\n\t\t40\n\t],\n\t\"./ProgressBar/Example70Percent\": [\n\t\t56,\n\t\t41\n\t],\n\t\"./ProgressBar/Example70Percent.jsx\": [\n\t\t56,\n\t\t41\n\t],\n\t\"./Rating/Example0Stars\": [\n\t\t57,\n\t\t42\n\t],\n\t\"./Rating/Example0Stars.jsx\": [\n\t\t57,\n\t\t42\n\t],\n\t\"./Rating/Example3Stars\": [\n\t\t58,\n\t\t43\n\t],\n\t\"./Rating/Example3Stars.jsx\": [\n\t\t58,\n\t\t43\n\t],\n\t\"./Rating/Example5Stars\": [\n\t\t59,\n\t\t44\n\t],\n\t\"./Rating/Example5Stars.jsx\": [\n\t\t59,\n\t\t44\n\t],\n\t\"./Rating/ExampleSecondary3Stars\": [\n\t\t60,\n\t\t45\n\t],\n\t\"./Rating/ExampleSecondary3Stars.jsx\": [\n\t\t60,\n\t\t45\n\t],\n\t\"./RegisterIcon/ExampleBasic\": [\n\t\t61,\n\t\t46\n\t],\n\t\"./RegisterIcon/ExampleBasic.jsx\": [\n\t\t61,\n\t\t46\n\t],\n\t\"./RemoveMentorIcon/ExampleBasic\": [\n\t\t62,\n\t\t47\n\t],\n\t\"./RemoveMentorIcon/ExampleBasic.jsx\": [\n\t\t62,\n\t\t47\n\t],\n\t\"./SadIcon/ExampleBasic\": [\n\t\t63,\n\t\t48\n\t],\n\t\"./SadIcon/ExampleBasic.jsx\": [\n\t\t63,\n\t\t48\n\t],\n\t\"./SearchIcon/ExampleBasic\": [\n\t\t64,\n\t\t49\n\t],\n\t\"./SearchIcon/ExampleBasic.jsx\": [\n\t\t64,\n\t\t49\n\t],\n\t\"./SettingsIcon/ExampleBasic\": [\n\t\t65,\n\t\t50\n\t],\n\t\"./SettingsIcon/ExampleBasic.jsx\": [\n\t\t65,\n\t\t50\n\t],\n\t\"./SignOutIcon/ExampleBasic\": [\n\t\t66,\n\t\t51\n\t],\n\t\"./SignOutIcon/ExampleBasic.jsx\": [\n\t\t66,\n\t\t51\n\t],\n\t\"./SpeakerIcon/ExampleBasic\": [\n\t\t67,\n\t\t52\n\t],\n\t\"./SpeakerIcon/ExampleBasic.jsx\": [\n\t\t67,\n\t\t52\n\t],\n\t\"./StreamIcon/ExampleBasic\": [\n\t\t68,\n\t\t53\n\t],\n\t\"./StreamIcon/ExampleBasic.jsx\": [\n\t\t68,\n\t\t53\n\t],\n\t\"./SvgIcon/ExampleEyeIcon\": [\n\t\t14,\n\t\t54\n\t],\n\t\"./SvgIcon/ExampleEyeIcon.jsx\": [\n\t\t14,\n\t\t54\n\t],\n\t\"./SvgIcon/ExampleEyeIcon4em\": [\n\t\t69,\n\t\t55\n\t],\n\t\"./SvgIcon/ExampleEyeIcon4em.jsx\": [\n\t\t69,\n\t\t55\n\t],\n\t\"./SvgIcon/ExampleEyeIcon64px\": [\n\t\t70,\n\t\t56\n\t],\n\t\"./SvgIcon/ExampleEyeIcon64px.jsx\": [\n\t\t70,\n\t\t56\n\t],\n\t\"./TabletIcon/ExampleBasic\": [\n\t\t71,\n\t\t57\n\t],\n\t\"./TabletIcon/ExampleBasic.jsx\": [\n\t\t71,\n\t\t57\n\t],\n\t\"./TrashIcon/ExampleBasic\": [\n\t\t72,\n\t\t58\n\t],\n\t\"./TrashIcon/ExampleBasic.jsx\": [\n\t\t72,\n\t\t58\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 92;\nmodule.exports = webpackAsyncContext;","/** Tests a value if it is a number; otherwise return `NaN`. */\nexport function filterInt(value) {\n  if (/^(-|\\+)?([0-9]+|Infinity)$/.test(value)) {\n    return Number(value);\n  }\n\n  return NaN;\n}\n","export const PROPTYPE_SIMPLE = 'simple';\nexport const PROPTYPE_UNION = 'union';\nexport const PROPTYPE_ENUM = 'enum';\nexport const PROPTYPE_CUSTOM = 'custom';\n\n/**\n * Accepts a `react-docgen` type and returns an array containing the parsed\n * types. Returns an empty array if type cannot be parsed.\n */\nexport function parseType(type) {\n  const { name, value } = type;\n  if (!name) {\n    return [];\n  }\n\n  switch (name) {\n    case PROPTYPE_ENUM:\n      return parseEnum(value);\n    case PROPTYPE_UNION:\n      return parseUnion(value);\n    case PROPTYPE_CUSTOM:\n    default:\n      return [parseCustomOrSimple(type)];\n  }\n}\n\nfunction parseEnum(value = []) {\n  return value.map((v) => v.value.replace(/'/g, ''));\n}\n\nfunction parseUnion(value = []) {\n  return value.map((v) => {\n    if (v.name === 'arrayOf') {\n      return `${v.value.name}[]`;\n    }\n\n    return parseCustomOrSimple(v);\n  });\n}\n\nfunction parseCustomOrSimple(value = {}) {\n  return value.name === PROPTYPE_CUSTOM ? value.raw : value.name;\n}\n","module.exports = [{\"name\":\"AddMentorIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function AddMentorIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 23.7 23.5\\\" {...svgProps}>\\n      <g id=\\\"add-mentor-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path {...commonProps} id=\\\"path\\\" d=\\\"M5.5,13.6v3l-5,2.3\\\" />\\n        <path {...commonProps} id=\\\"path-2\\\" data-name=\\\"path\\\" d=\\\"M13.4,17.5\\\" />\\n        <path {...commonProps} id=\\\"path-3\\\" data-name=\\\"path\\\" d=\\\"M13.1,17.4\\\" />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-4\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M11.3,13.6v3l1.8.8\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-5\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M10.2,14.1a5.2,5.2,0,0,0,3.5-4.9V4.6A4.055,4.055,0,0,0,9.6.5H7.3A4.055,4.055,0,0,0,3.2,4.6V9.2a5.2,5.2,0,0,0,3.5,4.9\\\"\\n        />\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse\\\"\\n          cx=\\\"5\\\"\\n          cy=\\\"5\\\"\\n          r=\\\"5\\\"\\n          transform=\\\"translate(13.2 13)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          y2=\\\"4\\\"\\n          transform=\\\"translate(18.2 16)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line-2\\\"\\n          data-name=\\\"line\\\"\\n          x1=\\\"4\\\"\\n          transform=\\\"translate(16.2 18)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nAddMentorIcon.defaultProps = {\\n  dark: false,\\n};\\n\\nAddMentorIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic add mentor icon\",\"code\":\"import React from 'react';\\nimport AddMentorIcon from 'alys/AddMentorIcon';\\n\\n/** Basic add mentor icon */\\nexport default function ExampleBasic() {\\n  return <AddMentorIcon />;\\n}\\n\"}]},{\"name\":\"ArrowLeftIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function ArrowLeftIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 19 17.2\\\" {...svgProps}>\\n      <g id=\\\"arrow-left-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          x1=\\\"17\\\"\\n          transform=\\\"translate(1.5 8.6)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          d=\\\"M8.6.5.5,8.6l8.1,8.1\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nArrowLeftIcon.defaultProps = { dark: false };\\n\\nArrowLeftIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic arrow left icon\",\"code\":\"import React from 'react';\\nimport ArrowLeftIcon from 'alys/ArrowLeftIcon';\\n\\n/** Basic arrow left icon */\\nexport default function ExampleBasic() {\\n  return <ArrowLeftIcon />;\\n}\\n\"}]},{\"name\":\"ArrowRightIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function ArrowLeftIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 18.8 17.2\\\" {...svgProps}>\\n      <g id=\\\"arrow-right-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <line\\n          {...commonProps}\\n          id=\\\"Line_375\\\"\\n          data-name=\\\"Line 375\\\"\\n          x2=\\\"17\\\"\\n          transform=\\\"translate(0.5 8.6)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"Path_1156\\\"\\n          data-name=\\\"Path 1156\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          d=\\\"M10.2.5l8.1,8.1-8.1,8.1\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nArrowLeftIcon.defaultProps = { dark: false };\\n\\nArrowLeftIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic arrow right icon\",\"code\":\"import React from 'react';\\nimport ArrowRightIcon from 'alys/ArrowRightIcon';\\n\\n/** Basic arrow right icon */\\nexport default function ExampleBasic() {\\n  return <ArrowRightIcon />;\\n}\\n\"}]},{\"name\":\"AttachmentIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function AttachmentIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 17.9 19.3\\\" {...svgProps}>\\n      <g id=\\\"attachment-icon\\\" transform=\\\"translate(0.05 -0.05)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          d=\\\"M9.6,3.3,1.8,11.1a4.468,4.468,0,0,0,0,6.4h0a4.468,4.468,0,0,0,6.4,0L16,9.7\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M7.5,15.3l8.8-8.8a3.383,3.383,0,0,0,0-4.9h0a3.383,3.383,0,0,0-4.9,0L3.2,9.7\\\"\\n        />\\n        <path {...commonProps} id=\\\"path-3\\\" data-name=\\\"path\\\" d=\\\"M2.9,15\\\" />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          x1=\\\"7.1\\\"\\n          y2=\\\"7.1\\\"\\n          transform=\\\"translate(3.9 4.7)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-4\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M3.9,11.8a2.416,2.416,0,0,0,0,3.5,2.5,2.5,0,0,0,3.5,0\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nAttachmentIcon.defaultProps = { dark: false };\\n\\nAttachmentIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic attachment icon\",\"code\":\"import React from 'react';\\nimport AttachmentIcon from 'alys/AttachmentIcon';\\n\\n/** Basic attachment icon */\\nexport default function ExampleBasic() {\\n  return <AttachmentIcon />;\\n}\\n\"}]},{\"name\":\"Avatar\",\"description\":\"Image avatars.\",\"props\":{\"src\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Path to the image file\"},\"alt\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Alternate text for the image\",\"defaultValue\":{\"value\":\"''\",\"computed\":false}},\"outlined\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Show or hide image outline\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}},\"size\":{\"type\":{\"name\":\"enum\",\"value\":[{\"value\":\"'smaller'\",\"computed\":false},{\"value\":\"'small'\",\"computed\":false},{\"value\":\"'default'\",\"computed\":false}]},\"required\":false,\"description\":\"Pre-set avatar size\",\"defaultValue\":{\"value\":\"'default'\",\"computed\":false}},\"round\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to true to make the image round\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport styled, { ThemeProvider } from 'styled-components';\\n\\nimport MentorIcon from '@/MentorIcon';\\n\\nconst getSize = ({ theme: { size } }) => size;\\nconst calcSize = (percent) => ({ theme: { size } }) => size + size * percent;\\nconst sizes = {\\n  smaller: 2.5,\\n  small: 3.75,\\n  default: 6.25,\\n};\\n\\nconst Wrapper = styled.div`\\n  background-color: white;\\n  width: ${calcSize(0.2)}em;\\n  height: ${calcSize(0.2)}em;\\n  border-radius: ${({ theme: { size } }) => size * 0.1}em;\\n`;\\n\\nconst Img = styled.img`\\n  height: ${getSize}em;\\n  width: ${getSize}em;\\n  border-radius: ${({ theme: { size, round } }) =>\\n    round ? '50%' : `${size * 0.1}em`};\\n  margin: ${({ theme: { size, outlined, round } }) =>\\n    outlined && !round ? size * 0.1 : 0}em;\\n`;\\n\\nconst DefaultWrapper = styled(Wrapper)`\\n  background-color: #e2e8ed;\\n`;\\n\\nconst StyledMentorIcon = styled(MentorIcon)`\\n  position: relative;\\n  left: 50%;\\n  top: 50%;\\n  transform: translate(-50%, -50%);\\n\\n  && path {\\n    stroke: #bcc5d3;\\n  }\\n`;\\n\\n/** Image avatars. */\\nexport default function Avatar({ src, alt, outlined, size, round }) {\\n  const theme = {\\n    size: sizes[size],\\n    outlined,\\n    round,\\n  };\\n\\n  return (\\n    <ThemeProvider theme={theme}>\\n      {src ? (\\n        outlined && !round ? (\\n          <Wrapper>\\n            <Img src={src} alt={alt} />\\n          </Wrapper>\\n        ) : (\\n          <Img src={src} alt={alt} />\\n        )\\n      ) : (\\n        <DefaultWrapper>\\n          <StyledMentorIcon />\\n        </DefaultWrapper>\\n      )}\\n    </ThemeProvider>\\n  );\\n}\\n\\nAvatar.defaultProps = {\\n  alt: '',\\n  outlined: false,\\n  size: 'default',\\n  round: false,\\n};\\n\\nAvatar.propTypes = {\\n  /** Path to the image file */\\n  src: PropTypes.string,\\n\\n  /** Alternate text for the image */\\n  alt: PropTypes.string,\\n\\n  /** Show or hide image outline */\\n  outlined: PropTypes.bool,\\n\\n  /** Pre-set avatar size */\\n  size: PropTypes.oneOf(['smaller', 'small', 'default']),\\n\\n  /** Set to true to make the image round */\\n  round: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleDefaultSmaller\",\"description\":\"Smaller size avatar with default image\",\"code\":\"import React from 'react';\\nimport Avatar from 'alys/Avatar';\\n\\n/** Smaller size avatar with default image */\\nexport default function ExampleDefaultSmaller() {\\n  return <Avatar size=\\\"smaller\\\" />;\\n}\\n\"},{\"name\":\"ExampleNormal\",\"description\":\"Normal size avatar\",\"code\":\"import React from 'react';\\nimport Avatar from 'alys/Avatar';\\n\\nimport img from '../../docs/assets/alys.jpg';\\n\\n/** Normal size avatar */\\nexport default function ExampleNormal() {\\n  return <Avatar src={img} />;\\n}\\n\"},{\"name\":\"ExampleOutlined\",\"description\":\"Small size with outline\",\"code\":\"import React from 'react';\\nimport Avatar from 'alys/Avatar';\\n\\nimport img from '../../docs/assets/alys.jpg';\\n\\n/** Small size with outline */\\nexport default function ExampleOutlined() {\\n  return <Avatar src={img} size=\\\"small\\\" outlined />;\\n}\\n\"},{\"name\":\"ExampleSmallRound\",\"description\":\"Small and rounded avatar\",\"code\":\"import React from 'react';\\nimport Avatar from 'alys/Avatar';\\n\\nimport img from '../../docs/assets/alys.jpg';\\n\\n/** Small and rounded avatar */\\nexport default function ExampleSmallRound() {\\n  return <Avatar src={img} size=\\\"small\\\" round />;\\n}\\n\"},{\"name\":\"ExampleSmallSize\",\"description\":\"Small avatar\",\"code\":\"import React from 'react';\\nimport Avatar from 'alys/Avatar';\\n\\nimport img from '../../docs/assets/alys.jpg';\\n\\n/** Small avatar */\\nexport default function ExampleSmallSize() {\\n  return <Avatar src={img} size=\\\"small\\\" />;\\n}\\n\"},{\"name\":\"ExampleSmaller\",\"description\":\"Smaller size avatar\",\"code\":\"import React from 'react';\\nimport Avatar from 'alys/Avatar';\\n\\nimport img from '../../docs/assets/alys.jpg';\\n\\n/** Smaller size avatar */\\nexport default function ExampleSmaller() {\\n  return <Avatar src={img} size=\\\"smaller\\\" />;\\n}\\n\"}]},{\"name\":\"CameraFlipIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function CameraFlipIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 20.752 16.104\\\" {...svgProps}>\\n      <g id=\\\"camera-flip-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          d=\\\"M18.974,2.824H15.14l-.465-1.51A1.116,1.116,0,0,0,13.629.5H7.123a1.116,1.116,0,0,0-1.046.813L5.5,2.824H1.778A1.289,1.289,0,0,0,.5,4.1V14.326A1.289,1.289,0,0,0,1.778,15.6h17.2a1.289,1.289,0,0,0,1.278-1.278V4.1A1.289,1.289,0,0,0,18.974,2.824Z\\\"\\n          transform=\\\"translate(0 0)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M14.464,7.3l-1.743,3.021L9.7,8.694\\\"\\n          transform=\\\"translate(1.489 1.101)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-3\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M5.1,9.667A4.041,4.041,0,0,1,9.167,5.6a3.944,3.944,0,0,1,3.95,4.067\\\"\\n          transform=\\\"translate(0.745 0.826)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nCameraFlipIcon.defaultProps = {\\n  dark: false,\\n};\\n\\nCameraFlipIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic camera flip icon\",\"code\":\"import React from 'react';\\nimport CameraFlipIcon from 'alys/CameraFlipIcon';\\n\\n/** Basic camera flip icon */\\nexport default function ExampleBasic() {\\n  return <CameraFlipIcon />;\\n}\\n\"}]},{\"name\":\"CameraIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function CameraIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 18 14\\\" {...svgProps}>\\n      <circle\\n        {...commonProps}\\n        id=\\\"ellipse\\\"\\n        cx=\\\"3.5\\\"\\n        cy=\\\"3.5\\\"\\n        r=\\\"3.5\\\"\\n        transform=\\\"translate(5.5 4.5)\\\"\\n      />\\n      <circle\\n        {...commonProps}\\n        id=\\\"ellipse-2\\\"\\n        data-name=\\\"ellipse\\\"\\n        cx=\\\"0.5\\\"\\n        cy=\\\"0.5\\\"\\n        r=\\\"0.5\\\"\\n        transform=\\\"translate(14.5 4.5)\\\"\\n      />\\n      <path\\n        {...commonProps}\\n        id=\\\"path\\\"\\n        d=\\\"M16.4,2.5H13.1l-.4-1.3a.961.961,0,0,0-.9-.7H6.2a.961.961,0,0,0-.9.7L4.8,2.5H1.6A1.11,1.11,0,0,0,.5,3.6v8.8a1.11,1.11,0,0,0,1.1,1.1H16.4a1.11,1.11,0,0,0,1.1-1.1V3.6A1.11,1.11,0,0,0,16.4,2.5Z\\\"\\n      />\\n    </SvgIcon>\\n  );\\n}\\n\\nCameraIcon.defaultProps = { dark: false };\\n\\nCameraIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic camera icon\",\"code\":\"import React from 'react';\\nimport CameraIcon from 'alys/CameraIcon';\\n\\n/** Basic camera icon */\\nexport default function ExampleBasic() {\\n  return <CameraIcon />;\\n}\\n\"}]},{\"name\":\"CardIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function CardIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 19 14\\\" {...svgProps}>\\n      <g id=\\\"card-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          strokeLinecap=\\\"round\\\"\\n          d=\\\"M17.5,13.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h16a.945.945,0,0,1,1,1v11A.945.945,0,0,1,17.5,13.5Z\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          strokeWidth=\\\"3px\\\"\\n          x2=\\\"18\\\"\\n          transform=\\\"translate(1 5.5)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line-2\\\"\\n          data-name=\\\"line\\\"\\n          strokeLinecap=\\\"round\\\"\\n          x2=\\\"4\\\"\\n          transform=\\\"translate(3.5 10.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nCardIcon.defaultProps = { dark: false };\\n\\nCardIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic card icon\",\"code\":\"import React from 'react';\\nimport CardIcon from 'alys/CardIcon';\\n\\n/** Basic card icon */\\nexport default function ExampleBasic() {\\n  return <CardIcon />;\\n}\\n\"}]},{\"name\":\"ChevronLeftIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function ChevronLeftIcon({ dark, ...svgProps }) {\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 5.8 10.7\\\" {...svgProps}>\\n      <g id=\\\"arrow-left\\\" transform=\\\"translate(-512.002 -387)\\\">\\n        <path\\n          id=\\\"arrow-left-2\\\"\\n          data-name=\\\"arrow-left\\\"\\n          fill=\\\"none\\\"\\n          stroke={iconDark(dark)}\\n          strokeLinecap=\\\"round\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          strokeMiterlimit={10}\\n          d=\\\"M5.3,10.2.5,5.3,5.3.5\\\"\\n          transform=\\\"translate(512.002 387)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nChevronLeftIcon.defaultProps = { dark: false };\\n\\nChevronLeftIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic chevron left icon\",\"code\":\"import React from 'react';\\nimport ChevronLeftIcon from 'alys/ChevronLeftIcon';\\n\\n/** Basic chevron left icon */\\nexport default function ExampleBasic() {\\n  return <ChevronLeftIcon />;\\n}\\n\"}]},{\"name\":\"ChevronRightIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function ChevronRightIcon({ dark, ...svgProps }) {\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 5.8 10.7\\\" {...svgProps}>\\n      <g id=\\\"arrow-right\\\" transform=\\\"translate(-652.002 -385)\\\">\\n        <path\\n          id=\\\"arrow-right-2\\\"\\n          data-name=\\\"arrow-right\\\"\\n          fill=\\\"none\\\"\\n          stroke={iconDark(dark)}\\n          strokeLinecap=\\\"round\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          strokeMiterlimit={10}\\n          d=\\\"M.5,10.2,5.3,5.3.5.5\\\"\\n          transform=\\\"translate(652.002 385)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nChevronRightIcon.defaultProps = { dark: false };\\n\\nChevronRightIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic chevron right icon\",\"code\":\"import React from 'react';\\nimport ChevronRightIcon from 'alys/ChevronRightIcon';\\n\\n/** Basic chevron right icon */\\nexport default function ExampleBasic() {\\n  return <ChevronRightIcon />;\\n}\\n\"}]},{\"name\":\"ClockIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function ClockIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 20 20\\\" {...svgProps}>\\n      <g id=\\\"clock-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse\\\"\\n          cx=\\\"9.5\\\"\\n          cy=\\\"9.5\\\"\\n          r=\\\"9.5\\\"\\n          transform=\\\"translate(0.5 0.5)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          y2=\\\"8\\\"\\n          transform=\\\"translate(9.5 3.5)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line-2\\\"\\n          data-name=\\\"line\\\"\\n          x1=\\\"5\\\"\\n          transform=\\\"translate(9.5 11.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nClockIcon.defaultProps = { dark: false };\\n\\nClockIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic clock icon\",\"code\":\"import React from 'react';\\nimport ClockIcon from 'alys/ClockIcon';\\n\\n/** Basic clock icon */\\nexport default function ExampleBasic() {\\n  return <ClockIcon />;\\n}\\n\"}]},{\"name\":\"CloseIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function CloseIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 17.414 17.414\\\" {...svgProps}>\\n      <g id=\\\"close-icon\\\" transform=\\\"translate(0.207 0.207)\\\">\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          x1=\\\"16\\\"\\n          y1=\\\"16\\\"\\n          transform=\\\"translate(0.5 0.5)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line-2\\\"\\n          data-name=\\\"line\\\"\\n          y1=\\\"16\\\"\\n          x2=\\\"16\\\"\\n          transform=\\\"translate(0.5 0.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nCloseIcon.defaultProps = { dark: false };\\n\\nCloseIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic close icon\",\"code\":\"import React from 'react';\\nimport CloseIcon from 'alys/CloseIcon';\\n\\n/** Basic close icon */\\nexport default function ExampleBasic() {\\n  return <CloseIcon />;\\n}\\n\"}]},{\"name\":\"CommentIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function CommentIcon({ dark, ...svgProps }) {\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 21.4 18.3\\\" {...svgProps}>\\n      <g id=\\\"comment-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path\\n          id=\\\"path\\\"\\n          fill=\\\"none\\\"\\n          stroke={iconDark(dark)}\\n          strokeLinecap=\\\"round\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          strokeMiterlimit={10}\\n          d=\\\"M10.7.5C5.1.5.5,4.3.5,9a7.82,7.82,0,0,0,2.6,5.7l-.8,3.1,4-1.1a12.307,12.307,0,0,0,4.4.8c5.6,0,10.2-3.8,10.2-8.5S16.4.5,10.7.5Z\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nCommentIcon.defaultProps = { dark: false };\\n\\nCommentIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic comment icon\",\"code\":\"import React from 'react';\\nimport CommentIcon from 'alys/CommentIcon';\\n\\n/** Basic comment icon */\\nexport default function ExampleBasic() {\\n  return <CommentIcon />;\\n}\\n\"}]},{\"name\":\"ComputerIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function ComputerIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 22.917 19\\\" {...svgProps}>\\n      <g id=\\\"computer-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          d=\\\"M21.6,14.5H1.4a.9.9,0,0,1-.9-.9V1.4A.9.9,0,0,1,1.4.5H21.5a.9.9,0,0,1,.9.9V13.5A.805.805,0,0,1,21.6,14.5Z\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          x2=\\\"3\\\"\\n          strokeLinecap=\\\"round\\\"\\n          transform=\\\"translate(10 16.5)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line-2\\\"\\n          data-name=\\\"line\\\"\\n          strokeLinecap=\\\"round\\\"\\n          x2=\\\"7\\\"\\n          transform=\\\"translate(8 18.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nComputerIcon.defaultProps = {\\n  dark: false,\\n};\\n\\nComputerIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic computer icon\",\"code\":\"import React from 'react';\\nimport ComputerIcon from 'alys/ComputerIcon';\\n\\n/** Basic computer icon */\\nexport default function ExampleBasic() {\\n  return <ComputerIcon />;\\n}\\n\"}]},{\"name\":\"ConfirmIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function ConfirmIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 21 21\\\" {...svgProps}>\\n      <g id=\\\"confirm-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path {...commonProps} id=\\\"path\\\" d=\\\"M5.6,10.9,8.7,14l7.2-7.1\\\" />\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse\\\"\\n          cx=\\\"10\\\"\\n          cy=\\\"10\\\"\\n          r=\\\"10\\\"\\n          transform=\\\"translate(0.5 0.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nConfirmIcon.defaultProps = { dark: false };\\n\\nConfirmIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic confirm icon\",\"code\":\"import React from 'react';\\nimport ConfirmIcon from 'alys/ConfirmIcon';\\n\\n/** Basic confirm icon */\\nexport default function ExampleBasic() {\\n  return <ConfirmIcon />;\\n}\\n\"}]},{\"name\":\"EmailIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function EmailIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 20 15\\\" {...svgProps}>\\n      <g id=\\\"email-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          d=\\\"M18.5,14.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h17a.945.945,0,0,1,1,1v12A.945.945,0,0,1,18.5,14.5Z\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          stroke-strokeLinecap=\\\"round\\\"\\n          stroke-strokeLinejoin=\\\"round\\\"\\n          d=\\\"M.7,1.8,9.4,7.9a1.36,1.36,0,0,0,1.5,0l8.3-6.1\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nEmailIcon.defaultProps = { dark: false };\\n\\nEmailIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic email icon\",\"code\":\"import React from 'react';\\nimport EmailIcon from 'alys/EmailIcon';\\n\\n/** Basic email icon */\\nexport default function ExampleBasic() {\\n  return <EmailIcon />;\\n}\\n\"}]},{\"name\":\"EnlargeIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function MentorIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 18 18\\\" {...svgProps}>\\n      <path\\n        {...commonProps}\\n        id=\\\"path\\\"\\n        d=\\\"M16.5,17.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h15a.945.945,0,0,1,1,1v15A.945.945,0,0,1,16.5,17.5Z\\\"\\n      />\\n      <line\\n        {...commonProps}\\n        id=\\\"line\\\"\\n        y1=\\\"3.7\\\"\\n        x2=\\\"3.7\\\"\\n        transform=\\\"translate(10.5 3.9)\\\"\\n      />\\n      <path {...commonProps} id=\\\"path-2\\\" data-name=\\\"path\\\" d=\\\"M11.5,3.5h3v3\\\" />\\n      <line\\n        {...commonProps}\\n        id=\\\"line-2\\\"\\n        data-name=\\\"line\\\"\\n        x1=\\\"3.7\\\"\\n        y2=\\\"3.8\\\"\\n        transform=\\\"translate(3.8 10.6)\\\"\\n      />\\n      <path {...commonProps} id=\\\"path-3\\\" data-name=\\\"path\\\" d=\\\"M6.5,14.5h-3v-3\\\" />\\n    </SvgIcon>\\n  );\\n}\\n\\nMentorIcon.defaultProps = { dark: false };\\n\\nMentorIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic enlarge icon\",\"code\":\"import React from 'react';\\nimport EnlargeIcon from 'alys/EnlargeIcon';\\n\\n/** Basic enlarge icon */\\nexport default function ExampleBasic() {\\n  return <EnlargeIcon />;\\n}\\n\"}]},{\"name\":\"FiltersIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function FiltersIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 17.175 18\\\" {...svgProps}>\\n      <g id=\\\"filters-icon\\\" transform=\\\"translate(-30 -58)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          d=\\\"M-2,0H8.148\\\"\\n          transform=\\\"translate(32 60)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M0,0H4.026\\\"\\n          transform=\\\"translate(43.148 60)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-3\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M0,0H7.026\\\"\\n          transform=\\\"translate(40.148 67)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-4\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M-2,0H5.026\\\"\\n          transform=\\\"translate(32.148 67)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-5\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M-2,0H2\\\"\\n          transform=\\\"translate(32.148 74)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-6\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M0,0H10.026\\\"\\n          transform=\\\"translate(37.148 74)\\\"\\n        />\\n        <g {...commonProps} id=\\\"ellipse\\\" transform=\\\"translate(39.648 58)\\\">\\n          <circle stroke=\\\"none\\\" cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\" />\\n          <circle fill=\\\"none\\\" cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"1.5\\\" />\\n        </g>\\n        <g\\n          {...commonProps}\\n          id=\\\"ellipse-2\\\"\\n          data-name=\\\"ellipse\\\"\\n          transform=\\\"translate(36.648 65)\\\"\\n        >\\n          <circle stroke=\\\"none\\\" cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\" />\\n          <circle fill=\\\"none\\\" cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"1.5\\\" />\\n        </g>\\n        <g\\n          {...commonProps}\\n          id=\\\"ellipse-3\\\"\\n          data-name=\\\"ellipse\\\"\\n          transform=\\\"translate(33.648 72)\\\"\\n        >\\n          <circle stroke=\\\"none\\\" cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\" />\\n          <circle fill=\\\"none\\\" cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"1.5\\\" />\\n        </g>\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nFiltersIcon.defaultProps = { dark: false };\\n\\nFiltersIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic filters icon\",\"code\":\"import React from 'react';\\nimport FiltersIcon from 'alys/FiltersIcon';\\n\\n/** Basic filters icon */\\nexport default function ExampleBasic() {\\n  return <FiltersIcon />;\\n}\\n\"}]},{\"name\":\"HappyIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function HappyIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 20 20\\\" {...svgProps}>\\n      <g id=\\\"happy-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse\\\"\\n          fill=\\\"none\\\"\\n          cx=\\\"9.5\\\"\\n          cy=\\\"9.5\\\"\\n          r=\\\"9.5\\\"\\n          transform=\\\"translate(0.5 0.5)\\\"\\n        />\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse-2\\\"\\n          data-name=\\\"ellipse\\\"\\n          fill={iconDark(dark)}\\n          cx=\\\"0.5\\\"\\n          cy=\\\"0.5\\\"\\n          r=\\\"0.5\\\"\\n          transform=\\\"translate(6.5 6.5)\\\"\\n        />\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse-3\\\"\\n          data-name=\\\"ellipse\\\"\\n          fill={iconDark(dark)}\\n          cx=\\\"0.5\\\"\\n          cy=\\\"0.5\\\"\\n          r=\\\"0.5\\\"\\n          transform=\\\"translate(12.5 6.5)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          fill=\\\"none\\\"\\n          d=\\\"M6.3,13.5a4.507,4.507,0,0,0,3.7,2,4.373,4.373,0,0,0,3.7-2\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nHappyIcon.defaultProps = { dark: false };\\n\\nHappyIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic happy icon\",\"code\":\"import React from 'react';\\nimport HappyIcon from 'alys/HappyIcon';\\n\\n/** Basic happy icon */\\nexport default function ExampleBasic() {\\n  return <HappyIcon />;\\n}\\n\"}]},{\"name\":\"HomeIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function HomeIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 20.4 19.6\\\" {...svgProps}>\\n      <g id=\\\"home-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path {...commonProps} id=\\\"path\\\" d=\\\"M17.5,8.1h2.4L10.2.5.5,8.1h2\\\" />\\n        <path {...commonProps} id=\\\"path-2\\\" data-name=\\\"path\\\" d=\\\"M17.5,7.1\\\" />\\n        <path {...commonProps} id=\\\"path-3\\\" data-name=\\\"path\\\" d=\\\"M2.5,8.1\\\" />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-4\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M2.5,8.1v11h6v-6h3v6h6V8.1\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nHomeIcon.defaultProps = { dark: false };\\n\\nHomeIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic home icon\",\"code\":\"import React from 'react';\\nimport HomeIcon from 'alys/HomeIcon';\\n\\n/** Basic home icon */\\nexport default function ExampleBasic() {\\n  return <HomeIcon />;\\n}\\n\"}]},{\"name\":\"LaptopIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function LaptopIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 23.217 18\\\" {...svgProps}>\\n      <g id=\\\"laptop-icon\\\" transform=\\\"translate(-0.041 0)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          d=\\\"M21.1,12.5H2.1V1.4A.9.9,0,0,1,3,.5H20.2a.9.9,0,0,1,.9.9Z\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M21.1,12.5H2.1L.6,16.3a.881.881,0,0,0,.8,1.2H21.9a.881.881,0,0,0,.8-1.2Z\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          strokeLinecap=\\\"round\\\"\\n          x2=\\\"3\\\"\\n          transform=\\\"translate(10.1 15.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nLaptopIcon.defaultProps = { dark: false };\\n\\nLaptopIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic laptop icon\",\"code\":\"import React from 'react';\\nimport LaptopIcon from 'alys/LaptopIcon';\\n\\n/** Basic laptop icon */\\nexport default function ExampleBasic() {\\n  return <LaptopIcon />;\\n}\\n\"}]},{\"name\":\"LikeIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function LikeIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 21.552 18.875\\\" {...svgProps}>\\n      <g id=\\\"like-icon\\\" transform=\\\"translate(0.022 0)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          d=\\\"M10.8,18.3h0C25.5,11.4,20,3.1,20,3.1A5.381,5.381,0,0,0,15.4.5a5.553,5.553,0,0,0-4.7,2.6A5.255,5.255,0,0,0,6.1.5,5.172,5.172,0,0,0,1.5,3.1S-4,11.4,10.8,18.3C10.7,18.4,10.8,18.4,10.8,18.3Z\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          strokeLinecap=\\\"round\\\"\\n          d=\\\"M15.4,2.6a3.159,3.159,0,0,1,3.2,3.2\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nLikeIcon.defaultProps = { dark: false };\\n\\nLikeIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic like icon\",\"code\":\"import React from 'react';\\nimport LikeIcon from 'alys/LikeIcon';\\n\\n/** Basic like icon */\\nexport default function ExampleBasic() {\\n  return <LikeIcon />;\\n}\\n\"}]},{\"name\":\"LiveIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function LiveIcon({ dark, ...svgProps }) {\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 21 21\\\" {...svgProps}>\\n      <g id=\\\"live-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <circle\\n          id=\\\"ellipse\\\"\\n          fill=\\\"none\\\"\\n          stroke={iconDark(dark)}\\n          strokeLinecap=\\\"round\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          strokeMiterlimit={10}\\n          cx=\\\"10\\\"\\n          cy=\\\"10\\\"\\n          r=\\\"10\\\"\\n          transform=\\\"translate(0.5 0.5)\\\"\\n        />\\n        <circle\\n          id=\\\"ellipse-2\\\"\\n          data-name=\\\"ellipse\\\"\\n          fill={iconDark(dark)}\\n          cx=\\\"4.5\\\"\\n          cy=\\\"4.5\\\"\\n          r=\\\"4.5\\\"\\n          transform=\\\"translate(6 6)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nLiveIcon.defaultProps = { dark: false };\\n\\nLiveIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic live icon\",\"code\":\"import React from 'react';\\nimport LiveIcon from 'alys/LiveIcon';\\n\\n/** Basic live icon */\\nexport default function ExampleBasic() {\\n  return <LiveIcon />;\\n}\\n\"}]},{\"name\":\"LocationIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function LocationIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 17.015 20.071\\\" {...svgProps}>\\n      <g id=\\\"location-icon\\\" transform=\\\"translate(0.015 -0.029)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          d=\\\"M13.8,14.5,9.2,19.3a.965.965,0,0,1-1.4,0L3.1,14.4l-.8-.9A7.78,7.78,0,0,1,.6,7.3,8,8,0,0,1,16.5,8.5a7.907,7.907,0,0,1-2.1,5.4Z\\\"\\n        />\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse\\\"\\n          cx=\\\"3\\\"\\n          cy=\\\"3\\\"\\n          r=\\\"3\\\"\\n          transform=\\\"translate(5.5 5.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nLocationIcon.defaultProps = { dark: false };\\n\\nLocationIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic location icon\",\"code\":\"import React from 'react';\\nimport LocationIcon from 'alys/LocationIcon';\\n\\n/** Basic location icon */\\nexport default function ExampleBasic() {\\n  return <LocationIcon />;\\n}\\n\"}]},{\"name\":\"MentorIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function MentorIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 21.7 19.4\\\" {...svgProps}>\\n      <g id=\\\"mentor-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path {...commonProps} id=\\\"path\\\" d=\\\"M10.3,13.6v3l-5,2.3\\\" />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M16.1,13.6v3l5.1,2.3\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-3\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M15,14.1a5.2,5.2,0,0,0,3.5-4.9V4.6A4.055,4.055,0,0,0,14.4.5H12.2A4.14,4.14,0,0,0,8,4.6V9.2a5.2,5.2,0,0,0,3.5,4.9\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-4\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M4.6,11.3v2.4L.5,15.6\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-5\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M6.9.5H6.1A3.372,3.372,0,0,0,2.7,3.9V7.6a4.249,4.249,0,0,0,2.8,4\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nMentorIcon.defaultProps = { dark: false };\\n\\nMentorIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic mentor icon\",\"code\":\"import React from 'react';\\nimport MentorIcon from 'alys/MentorIcon';\\n\\n/** Basic mentor icon */\\nexport default function ExampleBasic() {\\n  return <MentorIcon />;\\n}\\n\"}]},{\"name\":\"MicrophoneIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function MicrophoneIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 11.8 19.9\\\" {...svgProps}>\\n      <g id=\\\"microphone-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          d=\\\"M5.9,13.3h0A3.543,3.543,0,0,1,2.4,9.8V4A3.543,3.543,0,0,1,5.9.5h0A3.543,3.543,0,0,1,9.4,4V9.8A3.418,3.418,0,0,1,5.9,13.3Z\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M.5,7.8v2a5.378,5.378,0,0,0,5.4,5.4h0a5.378,5.378,0,0,0,5.4-5.4v-2\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          y2=\\\"4\\\"\\n          transform=\\\"translate(5.9 15.4)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line-2\\\"\\n          data-name=\\\"line\\\"\\n          x1=\\\"6\\\"\\n          transform=\\\"translate(2.9 19.4)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nMicrophoneIcon.defaultProps = { dark: false };\\n\\nMicrophoneIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic microphone icon\",\"code\":\"import React from 'react';\\nimport MicrophoneIcon from 'alys/MicrophoneIcon';\\n\\n/** Basic microphone icon */\\nexport default function ExampleBasic() {\\n  return <MicrophoneIcon />;\\n}\\n\"}]},{\"name\":\"NewIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function NewIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 19 19\\\" {...svgProps}>\\n      <g id=\\\"new-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          x1=\\\"18\\\"\\n          transform=\\\"translate(0.5 9.5)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line-2\\\"\\n          data-name=\\\"line\\\"\\n          y1=\\\"18\\\"\\n          transform=\\\"translate(9.5 0.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nNewIcon.defaultProps = {\\n  dark: false,\\n};\\n\\nNewIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic new icon\",\"code\":\"import React from 'react';\\nimport NewIcon from 'alys/NewIcon';\\n\\n/** Basic new icon */\\nexport default function ExampleBasic() {\\n  return <NewIcon />;\\n}\\n\"}]},{\"name\":\"OptionsIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function OptionsIcon({ dark, ...svgProps }) {\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 19 5\\\" {...svgProps}>\\n      <g id=\\\"options-icon\\\" transform=\\\"translate(-326 -201)\\\">\\n        <g\\n          id=\\\"ellipse\\\"\\n          fill=\\\"none\\\"\\n          stroke={iconDark(dark)}\\n          transform=\\\"translate(326 201)\\\"\\n        >\\n          <circle stroke=\\\"none\\\" cx=\\\"2.5\\\" cy=\\\"2.5\\\" r=\\\"2.5\\\" />\\n          <circle fill=\\\"none\\\" cx=\\\"2.5\\\" cy=\\\"2.5\\\" r=\\\"2\\\" />\\n        </g>\\n        <g\\n          id=\\\"ellipse-2\\\"\\n          data-name=\\\"ellipse\\\"\\n          fill=\\\"none\\\"\\n          stroke={iconDark(dark)}\\n          transform=\\\"translate(333 201)\\\"\\n        >\\n          <circle stroke=\\\"none\\\" cx=\\\"2.5\\\" cy=\\\"2.5\\\" r=\\\"2.5\\\" />\\n          <circle fill=\\\"none\\\" cx=\\\"2.5\\\" cy=\\\"2.5\\\" r=\\\"2\\\" />\\n        </g>\\n        <g\\n          id=\\\"ellipse-3\\\"\\n          data-name=\\\"ellipse\\\"\\n          fill=\\\"none\\\"\\n          stroke={iconDark(dark)}\\n          transform=\\\"translate(340 201)\\\"\\n        >\\n          <circle stroke=\\\"none\\\" cx=\\\"2.5\\\" cy=\\\"2.5\\\" r=\\\"2.5\\\" />\\n          <circle fill=\\\"none\\\" cx=\\\"2.5\\\" cy=\\\"2.5\\\" r=\\\"2\\\" />\\n        </g>\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nOptionsIcon.defaultProps = { dark: false };\\n\\nOptionsIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic options icon\",\"code\":\"import React from 'react';\\nimport OptionsIcon from 'alys/OptionsIcon';\\n\\n/** Basic options icon */\\nexport default function ExampleBasic() {\\n  return <OptionsIcon />;\\n}\\n\"}]},{\"name\":\"PasswordIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function PasswordIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 17 19.988\\\" {...svgProps}>\\n      <g id=\\\"password-icon\\\" transform=\\\"translate(0 -0.011)\\\">\\n        <path\\n          {...commonProps}\\n          strokeLinecap=\\\"round\\\"\\n          id=\\\"path\\\"\\n          d=\\\"M15.5,19.5H1.5a.945.945,0,0,1-1-1V7.5a.945.945,0,0,1,1-1h14a.945.945,0,0,1,1,1v11A.945.945,0,0,1,15.5,19.5Z\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          d=\\\"M4.5,7V4.7A4.179,4.179,0,0,1,7.7.6a3.957,3.957,0,0,1,4.8,3.9V7\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-3\\\"\\n          data-name=\\\"path\\\"\\n          strokeLinecap=\\\"round\\\"\\n          d=\\\"M10.2,11.9a1.685,1.685,0,0,0-1.7-1.7,1.628,1.628,0,0,0-1.7,1.7,1.709,1.709,0,0,0,.7,1.3v1.6a.945.945,0,0,0,1,1,.945.945,0,0,0,1-1V13.2A1.709,1.709,0,0,0,10.2,11.9Z\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nPasswordIcon.defaultProps = { dark: false };\\n\\nPasswordIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic password icon\",\"code\":\"import React from 'react';\\nimport PasswordIcon from 'alys/PasswordIcon';\\n\\n/** Basic password icon */\\nexport default function ExampleBasic() {\\n  return <PasswordIcon />;\\n}\\n\"}]},{\"name\":\"PencilIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function PencilIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 19.25 19.306\\\" {...svgProps}>\\n      <g id=\\\"pencil-icon\\\" transform=\\\"translate(0 0.105)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          d=\\\"M4.3,17.7l-3.8,1,1-3.9L15.8.6a.483.483,0,0,1,.7,0l2.1,2.1a.483.483,0,0,1,0,.7Z\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          x2=\\\"2.8\\\"\\n          y2=\\\"2.8\\\"\\n          transform=\\\"translate(14.7 1.7)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nPencilIcon.defaultProps = {\\n  dark: false,\\n};\\n\\nPencilIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic pencil icon\",\"code\":\"import React from 'react';\\nimport PencilIcon from 'alys/PencilIcon';\\n\\n/** Basic pencil icon */\\nexport default function ExampleBasic() {\\n  return <PencilIcon />;\\n}\\n\"}]},{\"name\":\"PhoneIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function PhoneIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 13 22\\\" {...svgProps}>\\n      <g id=\\\"phone-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          d=\\\"M11.5,21.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h10a.945.945,0,0,1,1,1v19A.945.945,0,0,1,11.5,21.5Z\\\"\\n        />\\n        <line {...commonProps} id=\\\"line\\\" x2=\\\"12\\\" transform=\\\"translate(1 4.5)\\\" />\\n        <line\\n          {...commonProps}\\n          id=\\\"line-2\\\"\\n          data-name=\\\"line\\\"\\n          strokeLinecap=\\\"round\\\"\\n          x2=\\\"2\\\"\\n          transform=\\\"translate(5.5 2.5)\\\"\\n        />\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse\\\"\\n          cx=\\\"0.5\\\"\\n          cy=\\\"0.5\\\"\\n          r=\\\"0.5\\\"\\n          transform=\\\"translate(6 18.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nPhoneIcon.defaultProps = {\\n  dark: false,\\n};\\n\\nPhoneIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic phone icon\",\"code\":\"import React from 'react';\\nimport PhoneIcon from 'alys/PhoneIcon';\\n\\n/** Basic phone icon */\\nexport default function ExampleBasic() {\\n  return <PhoneIcon />;\\n}\\n\"}]},{\"name\":\"PhoneXIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function PhoneXIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 13 22\\\" {...svgProps}>\\n      <g id=\\\"phone-x-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          strokeLinecap=\\\"round\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          d=\\\"M6.5,1.5H8a.908.908,0,0,0,.7-.3L9.4.5H3.6l.7.7a.908.908,0,0,0,.7.3Z\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M11.5,21.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h10a.945.945,0,0,1,1,1v19A.945.945,0,0,1,11.5,21.5Z\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nPhoneXIcon.defaultProps = { dark: false };\\n\\nPhoneXIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic phone X icon\",\"code\":\"import React from 'react';\\nimport PhoneXIcon from 'alys/PhoneXIcon';\\n\\n/** Basic phone X icon */\\nexport default function ExampleBasic() {\\n  return <PhoneXIcon />;\\n}\\n\"}]},{\"name\":\"PreviewIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function PreviewIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 19 19\\\" {...svgProps}>\\n      <g id=\\\"preview-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path {...commonProps} id=\\\"path\\\" d=\\\"M.5,4.5v-3a.945.945,0,0,1,1-1h3\\\" />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M14.5.5h3a.945.945,0,0,1,1,1v3\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-3\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M18.5,14.5v3a.945.945,0,0,1-1,1h-3\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-4\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M4.5,18.5h-3a.945.945,0,0,1-1-1v-3\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          x2=\\\"6\\\"\\n          transform=\\\"translate(6.5 9.5)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line-2\\\"\\n          data-name=\\\"line\\\"\\n          y2=\\\"6\\\"\\n          transform=\\\"translate(9.5 6.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nPreviewIcon.defaultProps = { dark: false };\\n\\nPreviewIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic preview icon\",\"code\":\"import React from 'react';\\nimport PreviewIcon from 'alys/PreviewIcon';\\n\\n/** Basic preview icon */\\nexport default function ExampleBasic() {\\n  return <PreviewIcon />;\\n}\\n\"}]},{\"name\":\"ProgressBar\",\"description\":\"A custom progress bar.\",\"props\":{\"percent\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"Percent of progress completed\"},\"width\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"Bar width\"},\"height\":{\"type\":{\"name\":\"number\"},\"required\":false,\"description\":\"Bar height\",\"defaultValue\":{\"value\":\"5\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport styled from 'styled-components';\\n\\nimport { getWidthAsPercentOfTotalWidth } from '@utils/percent-utils';\\nimport { styleLengths } from '@utils/string-utils';\\n\\nconst ProgressBarWrapper = styled.div`\\n  border: solid 1px lightgray;\\n  width: ${({ width }) => styleLengths(width)};\\n`;\\n\\nconst ProgressBarValue = styled.div`\\n  width: ${({ percent, width }) =>\\n    styleLengths(getWidthAsPercentOfTotalWidth(percent, width))};\\n  height: ${({ height }) => styleLengths(height)};\\n  background-color: ${({ percent }) => {\\n    if (percent === 100) return 'green';\\n\\n    return percent > 50 ? 'lightgreen' : 'red';\\n  }};\\n`;\\n\\n/** A custom progress bar. */\\nexport default function ProgressBar({ width, height, percent }) {\\n  return (\\n    <ProgressBarWrapper width={width}>\\n      <ProgressBarValue width={width} height={height} percent={percent} />\\n    </ProgressBarWrapper>\\n  );\\n}\\n\\nProgressBar.defaultProps = {\\n  height: 5,\\n};\\n\\nProgressBar.propTypes = {\\n  /** Percent of progress completed */\\n  percent: PropTypes.number.isRequired,\\n\\n  /** Bar width */\\n  width: PropTypes.number.isRequired,\\n\\n  /** Bar height */\\n  height: PropTypes.number,\\n};\\n\",\"examples\":[{\"name\":\"Example100Percent\",\"description\":\"100% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'alys/ProgressBar';\\n\\n/** 100% progress */\\nexport default function Example100Percent() {\\n  return <ProgressBar percent={100} width={150} />;\\n}\\n\"},{\"name\":\"Example10Percent\",\"description\":\"10% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'alys/ProgressBar';\\n\\n/** 10% progress */\\nexport default function Example10Percent() {\\n  return <ProgressBar percent={10} width={150} />;\\n}\\n\"},{\"name\":\"Example20pxHeight\",\"description\":\"20px height and 100% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'alys/ProgressBar';\\n\\n/** 20px height and 100% progress */\\nexport default function Example20pxHeight() {\\n  return <ProgressBar percent={100} width={150} height={20} />;\\n}\\n\"},{\"name\":\"Example70Percent\",\"description\":\"70% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'alys/ProgressBar';\\n\\n/** 70% progress */\\nexport default function Example70Percent() {\\n  return <ProgressBar percent={70} width={150} />;\\n}\\n\"}]},{\"name\":\"Rating\",\"description\":\"\",\"props\":{\"value\":{\"type\":{\"name\":\"enum\",\"value\":[{\"value\":\"0\",\"computed\":false},{\"value\":\"1\",\"computed\":false},{\"value\":\"2\",\"computed\":false},{\"value\":\"3\",\"computed\":false},{\"value\":\"4\",\"computed\":false},{\"value\":\"5\",\"computed\":false}]},\"required\":true,\"description\":\"Amount of filled stars\"},\"color\":{\"type\":{\"name\":\"enum\",\"value\":[{\"value\":\"'default'\",\"computed\":false},{\"value\":\"'secondary'\",\"computed\":false}]},\"required\":false,\"description\":\"Fill color of stars\",\"defaultValue\":{\"value\":\"'default'\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport styled from 'styled-components';\\n\\nimport StarIcon from '@common/StarIcon';\\n\\nconst RATING_MAX_VALUE = 5;\\nconst Wrapper = styled.div`\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  max-width: 5em;\\n`;\\n\\nexport default function Rating({ value, color }) {\\n  let stars = [];\\n\\n  for (let i = 1; i <= RATING_MAX_VALUE; i += 1) {\\n    stars.push(\\n      <StarIcon\\n        fontSize=\\\"0.77875em\\\"\\n        key={`ratingstar${i}`}\\n        filled={i <= value}\\n        color={color}\\n      />,\\n    );\\n  }\\n\\n  return <Wrapper>{stars}</Wrapper>;\\n}\\n\\nRating.defaultProps = {\\n  color: 'default',\\n};\\n\\nRating.propTypes = {\\n  /** Amount of filled stars */\\n  value: PropTypes.oneOf([0, 1, 2, 3, 4, 5]).isRequired,\\n\\n  /** Fill color of stars */\\n  color: PropTypes.oneOf(['default', 'secondary']),\\n};\\n\",\"examples\":[{\"name\":\"Example0Stars\",\"description\":\"Rating with value of 0\",\"code\":\"import React from 'react';\\nimport Rating from 'alys/Rating';\\n\\n/** Rating with value of 0 */\\nexport default function Example0Stars() {\\n  return <Rating value={0} />;\\n}\\n\"},{\"name\":\"Example3Stars\",\"description\":\"Rating with value of 3\",\"code\":\"import React from 'react';\\nimport Rating from 'alys/Rating';\\n\\n/** Rating with value of 3 */\\nexport default function Example3Stars() {\\n  return <Rating value={3} />;\\n}\\n\"},{\"name\":\"Example5Stars\",\"description\":\"Rating with value of 5\",\"code\":\"import React from 'react';\\nimport Rating from 'alys/Rating';\\n\\n/** Rating with value of 5 */\\nexport default function Example5Stars() {\\n  return <Rating value={5} />;\\n}\\n\"},{\"name\":\"ExampleSecondary3Stars\",\"description\":\"Rating with secondary color and value of 3\",\"code\":\"import React from 'react';\\nimport Rating from 'alys/Rating';\\n\\n/** Rating with secondary color and value of 3 */\\nexport default function Example0Stars() {\\n  return <Rating value={3} color=\\\"secondary\\\" />;\\n}\\n\"}]},{\"name\":\"RegisterIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function RegisterIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 19.25 19.306\\\" {...svgProps}>\\n      <g id=\\\"register-icon\\\" transform=\\\"translate(0 0.105)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          d=\\\"M4.3,17.7l-3.8,1,1-3.9L15.8.6a.483.483,0,0,1,.7,0l2.1,2.1a.483.483,0,0,1,0,.7Z\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          x2=\\\"2.8\\\"\\n          y2=\\\"2.8\\\"\\n          transform=\\\"translate(14.7 1.7)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M1.8,9.4V1.9H9.3\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-3\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M16.8,10.4v7.5H9.3\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nRegisterIcon.defaultProps = { dark: false };\\n\\nRegisterIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic register icon\",\"code\":\"import React from 'react';\\nimport RegisterIcon from 'alys/RegisterIcon';\\n\\n/** Basic register icon */\\nexport default function ExampleBasic() {\\n  return <RegisterIcon />;\\n}\\n\"}]},{\"name\":\"RemoveMentorIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function RemoveMentorIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 23.7 23.5\\\" {...svgProps}>\\n      <g id=\\\"remove-mentor-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path id=\\\"path\\\" {...commonProps} d=\\\"M5.5,13.6v3l-5,2.3\\\" />\\n        <path id=\\\"path-2\\\" data-name=\\\"path\\\" {...commonProps} d=\\\"M13.4,17.5\\\" />\\n        <path id=\\\"path-3\\\" data-name=\\\"path\\\" {...commonProps} d=\\\"M13.1,17.4\\\" />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-4\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M11.3,13.6v3l1.8.8\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-5\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M10.2,14.1a5.2,5.2,0,0,0,3.5-4.9V4.6A4.055,4.055,0,0,0,9.6.5H7.3A4.055,4.055,0,0,0,3.2,4.6V9.2a5.2,5.2,0,0,0,3.5,4.9\\\"\\n        />\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse\\\"\\n          cx=\\\"5\\\"\\n          cy=\\\"5\\\"\\n          r=\\\"5\\\"\\n          transform=\\\"translate(13.2 13)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          x1=\\\"3.4\\\"\\n          y2=\\\"3.4\\\"\\n          transform=\\\"translate(16.5 16.3)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line-2\\\"\\n          data-name=\\\"line\\\"\\n          x1=\\\"3.4\\\"\\n          y1=\\\"3.4\\\"\\n          transform=\\\"translate(16.5 16.3)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nRemoveMentorIcon.defaultProps = {\\n  dark: false,\\n};\\n\\nRemoveMentorIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic remove mentor icon\",\"code\":\"import React from 'react';\\nimport RemoveMentorIcon from 'alys/RemoveMentorIcon';\\n\\n/** Basic remove mentor icon */\\nexport default function ExampleBasic() {\\n  return <RemoveMentorIcon />;\\n}\\n\"}]},{\"name\":\"SadIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function SadIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 20 20\\\" {...svgProps}>\\n      <g id=\\\"sad-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse\\\"\\n          fill=\\\"none\\\"\\n          cx=\\\"9.5\\\"\\n          cy=\\\"9.5\\\"\\n          r=\\\"9.5\\\"\\n          transform=\\\"translate(0.5 0.5)\\\"\\n        />\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse-2\\\"\\n          data-name=\\\"ellipse\\\"\\n          fill={iconDark(dark)}\\n          cx=\\\"0.5\\\"\\n          cy=\\\"0.5\\\"\\n          r=\\\"0.5\\\"\\n          transform=\\\"translate(6.5 6.5)\\\"\\n        />\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse-3\\\"\\n          data-name=\\\"ellipse\\\"\\n          fill={iconDark(dark)}\\n          cx=\\\"0.5\\\"\\n          cy=\\\"0.5\\\"\\n          r=\\\"0.5\\\"\\n          transform=\\\"translate(12.5 6.5)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          fill=\\\"none\\\"\\n          d=\\\"M13.7,14.5a4.507,4.507,0,0,0-3.7-2,4.373,4.373,0,0,0-3.7,2\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nSadIcon.defaultProps = { dark: false };\\n\\nSadIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic sad icon\",\"code\":\"import React from 'react';\\nimport SadIcon from 'alys/SadIcon';\\n\\n/** Basic sad icon */\\nexport default function ExampleBasic() {\\n  return <SadIcon />;\\n}\\n\"}]},{\"name\":\"SearchIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function SearchIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 18.907 18.507\\\" {...svgProps}>\\n      <g id=\\\"search-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          cx=\\\"8\\\"\\n          cy=\\\"8\\\"\\n          r=\\\"8\\\"\\n          transform=\\\"translate(0.5 0.5)\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          strokeLinejoin=\\\"round\\\"\\n          x2=\\\"3.5\\\"\\n          y2=\\\"3.5\\\"\\n          transform=\\\"translate(14.7 14.3)\\\"\\n        />\\n        <path {...commonProps} id=\\\"path\\\" d=\\\"M9,2.8a5.335,5.335,0,0,1,5.3,5.3\\\" />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nSearchIcon.defaultProps = { dark: false };\\n\\nSearchIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic search icon\",\"code\":\"import React from 'react';\\nimport SearchIcon from 'alys/SearchIcon';\\n\\n/** Basic search icon */\\nexport default function ExampleBasic() {\\n  return <SearchIcon />;\\n}\\n\"}]},{\"name\":\"SettingsIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function Settings({ dark, ...svgProps }) {\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 19.875 19.98\\\" {...svgProps}>\\n      <path\\n        id=\\\"path\\\"\\n        fill=\\\"none\\\"\\n        stroke={iconDark(dark)}\\n        strokeLinecap=\\\"round\\\"\\n        strokeLinejoin=\\\"round\\\"\\n        strokeMiterlimit={10}\\n        d=\\\"M18.7,15.7,11.1,8.1A4.638,4.638,0,0,0,11.5,6,5.549,5.549,0,0,0,6,.5a4.618,4.618,0,0,0-2.6.7L7.3,5.1,5.1,7.3,1.2,3.4A4.618,4.618,0,0,0,.5,6,5.549,5.549,0,0,0,6,11.5a5.222,5.222,0,0,0,2.1-.4l7.6,7.6a2.175,2.175,0,0,0,3,0h0A2,2,0,0,0,18.7,15.7Z\\\"\\n      />\\n    </SvgIcon>\\n  );\\n}\\n\\nSettings.defaultProps = { dark: false };\\n\\nSettings.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic settings icon\",\"code\":\"import React from 'react';\\nimport SettingsIcon from 'alys/SettingsIcon';\\n\\n/** Basic settings icon */\\nexport default function ExampleBasic() {\\n  return <SettingsIcon />;\\n}\\n\"}]},{\"name\":\"SignOutIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function SignOutIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 21 20.9\\\" {...svgProps}>\\n      <g id=\\\"sign-out-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path {...commonProps} id=\\\"path\\\" d=\\\"M15.5,5.3,10.7.5,5.8,5.3\\\" />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M2.8,4.1A9.4,9.4,0,0,0,.5,10.4a10,10,0,0,0,20,0,9.4,9.4,0,0,0-2.3-6.3\\\"\\n        />\\n        <line\\n          {...commonProps}\\n          id=\\\"line\\\"\\n          y2=\\\"11\\\"\\n          transform=\\\"translate(10.7 0.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nSignOutIcon.defaultProps = { dark: false };\\n\\nSignOutIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic sign out icon\",\"code\":\"import React from 'react';\\nimport SignOutIcon from 'alys/SignOutIcon';\\n\\n/** Basic sign out icon */\\nexport default function ExampleBasic() {\\n  return <SignOutIcon />;\\n}\\n\"}]},{\"name\":\"SpeakerIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function SpeakerIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeLinejoin: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 18.5 16.179\\\" {...svgProps}>\\n      <g id=\\\"speaker-icon\\\" transform=\\\"translate(0 0.016)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          d=\\\"M4.8,11.3H3.7A3.159,3.159,0,0,1,.5,8.1h0A3.159,3.159,0,0,1,3.7,4.9H4.8Z\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M10.6,15.4,4.8,11.2V4.9L10.6.7a1.081,1.081,0,0,1,1.7.9v13A1.045,1.045,0,0,1,10.6,15.4Z\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-3\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M14.4,11a4.373,4.373,0,0,0,0-5.8\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-4\\\"\\n          data-name=\\\"path\\\"\\n          d=\\\"M16.2,12.9A7.492,7.492,0,0,0,18,8.1a7.492,7.492,0,0,0-1.8-4.8\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nSpeakerIcon.defaultProps = { dark: false };\\n\\nSpeakerIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic speaker icon\",\"code\":\"import React from 'react';\\nimport SpeakerIcon from 'alys/SpeakerIcon';\\n\\n/** Basic speaker icon */\\nexport default function ExampleBasic() {\\n  return <SpeakerIcon />;\\n}\\n\"}]},{\"name\":\"StreamIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function StreamIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 23 16.575\\\" {...svgProps}>\\n      <g id=\\\"stream-icon\\\" transform=\\\"translate(0 -0.025)\\\">\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse\\\"\\n          cx=\\\"0.5\\\"\\n          cy=\\\"0.5\\\"\\n          r=\\\"0.5\\\"\\n          transform=\\\"translate(11 15.1)\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          strokeLinecap=\\\"round\\\"\\n          d=\\\"M6.9,12.4a6.58,6.58,0,0,1,9.2,0\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-2\\\"\\n          data-name=\\\"path\\\"\\n          strokeLinecap=\\\"round\\\"\\n          d=\\\"M4.2,8.6a10.322,10.322,0,0,1,14.7,0\\\"\\n        />\\n        <path\\n          {...commonProps}\\n          id=\\\"path-3\\\"\\n          data-name=\\\"path\\\"\\n          strokeLinecap=\\\"round\\\"\\n          d=\\\"M.5,5.1a15.512,15.512,0,0,1,22,0\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nStreamIcon.defaultProps = { dark: false };\\n\\nStreamIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic stream icon\",\"code\":\"import React from 'react';\\nimport StreamIcon from 'alys/StreamIcon';\\n\\n/** Basic stream icon */\\nexport default function ExampleBasic() {\\n  return <StreamIcon />;\\n}\\n\"}]},{\"name\":\"SvgIcon\",\"description\":\"Renders SVG paths.\",\"props\":{\"children\":{\"type\":{\"name\":\"node\"},\"required\":true,\"description\":\"SVG paths to render\"},\"fontSize\":{\"type\":{\"name\":\"union\",\"value\":[{\"name\":\"string\"},{\"name\":\"number\"}]},\"required\":false,\"description\":\"Size of the icon\",\"defaultValue\":{\"value\":\"24\",\"computed\":false}},\"viewBox\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Defines the position and dimension for the content of the <svg> element\",\"defaultValue\":{\"value\":\"'0 0 24 24'\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { styleLengths } from '@utils/string-utils';\\n\\n/** Renders SVG paths. */\\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\\n  return (\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      color=\\\"inherit\\\"\\n      viewBox={viewBox}\\n      focusable={false}\\n      width={styleLengths(fontSize)}\\n      height={styleLengths(fontSize)}\\n      {...svgProps}\\n    >\\n      {children}\\n    </svg>\\n  );\\n}\\n\\nconst SVG_ICON_DEFAULT_FONT_SIZE = 24;\\n\\nSvgIcon.defaultProps = {\\n  fontSize: SVG_ICON_DEFAULT_FONT_SIZE,\\n  viewBox: '0 0 24 24',\\n};\\n\\nSvgIcon.propTypes = {\\n  /** SVG paths to render */\\n  children: PropTypes.node.isRequired,\\n\\n  /** Size of the icon */\\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\\n\\n  /** Defines the position and dimension for the content of the <svg> element */\\n  viewBox: PropTypes.string,\\n};\\n\",\"examples\":[{\"name\":\"ExampleEyeIcon\",\"description\":\"Basic EyeIcon component\",\"code\":\"import React from 'react';\\nimport SvgIcon from 'alys/SvgIcon';\\n\\n/** Basic EyeIcon component */\\nexport default function ExampleEyeIcon({ dark, ...svgProps }) {\\n  return (\\n    <SvgIcon {...svgProps}>\\n      <g\\n        transform=\\\"matrix(.02146 0 0 .02146 1 1)\\\"\\n        fill={dark ? '#fff' : '#4C5264'}\\n      >\\n        <path d=\\\"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1\\\" />\\n        <circle cx=\\\"466.08\\\" cy=\\\"466.02\\\" r=\\\"134.5\\\" />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\"},{\"name\":\"ExampleEyeIcon4em\",\"description\":\"EyeIcon component with font size of 4em\",\"code\":\"import React from 'react';\\nimport ExampleEyeIcon from './ExampleEyeIcon';\\n\\n/** EyeIcon component with font size of 4em */\\nexport default function ExampleEyeIcon4em() {\\n  return <ExampleEyeIcon fontSize=\\\"4em\\\" />;\\n}\\n\"},{\"name\":\"ExampleEyeIcon64px\",\"description\":\"EyeIcon component with font size of 64px\",\"code\":\"import React from 'react';\\nimport ExampleEyeIcon from './ExampleEyeIcon';\\n\\n/** EyeIcon component with font size of 64px */\\nexport default function ExampleEyeIcon64px() {\\n  return <ExampleEyeIcon fontSize={64} />;\\n}\\n\"}]},{\"name\":\"TabletIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function TabletIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 17 22\\\" {...svgProps}>\\n      <g id=\\\"tablet-icon\\\" transform=\\\"translate(0 0)\\\">\\n        <path\\n          {...commonProps}\\n          id=\\\"path\\\"\\n          d=\\\"M15.5,21.5H1.5a.945.945,0,0,1-1-1V1.5a.945.945,0,0,1,1-1h14a.945.945,0,0,1,1,1v19A.945.945,0,0,1,15.5,21.5Z\\\"\\n        />\\n        <line {...commonProps} id=\\\"line\\\" x2=\\\"16\\\" transform=\\\"translate(1 4.5)\\\" />\\n        <line\\n          {...commonProps}\\n          id=\\\"line-2\\\"\\n          data-name=\\\"line\\\"\\n          strokeLinecap=\\\"round\\\"\\n          x2=\\\"2\\\"\\n          transform=\\\"translate(7.5 2.5)\\\"\\n        />\\n        <circle\\n          {...commonProps}\\n          id=\\\"ellipse\\\"\\n          cx=\\\"0.5\\\"\\n          cy=\\\"0.5\\\"\\n          r=\\\"0.5\\\"\\n          transform=\\\"translate(8 18.5)\\\"\\n        />\\n      </g>\\n    </SvgIcon>\\n  );\\n}\\n\\nTabletIcon.defaultProps = { dark: false };\\n\\nTabletIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic tablet icon\",\"code\":\"import React from 'react';\\nimport TabletIcon from 'alys/TabletIcon';\\n\\n/** Basic tablet icon */\\nexport default function ExampleBasic() {\\n  return <TabletIcon />;\\n}\\n\"}]},{\"name\":\"TrashIcon\",\"description\":\"See <SvgIcon /> for more prop descriptions.\",\"props\":{\"dark\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to `true` to make icon viewable in dark backgrounds\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport { iconDark } from '@utils/icon-utils';\\nimport SvgIcon from '@/SvgIcon';\\n\\n/** See <SvgIcon /> for more prop descriptions. */\\nexport default function TrashIcon({ dark, ...svgProps }) {\\n  const commonProps = {\\n    fill: 'none',\\n    stroke: iconDark(dark),\\n    strokeLinecap: 'round',\\n    strokeMiterlimit: 10,\\n  };\\n\\n  return (\\n    <SvgIcon viewBox=\\\"0 0 19 19\\\" {...svgProps}>\\n      <path\\n        {...commonProps}\\n        id=\\\"path\\\"\\n        d=\\\"M16.5,2.5l-1,15a.945.945,0,0,1-1,1H4.5a.945.945,0,0,1-1-1l-1-15\\\"\\n      />\\n      <line id=\\\"line\\\" {...commonProps} x2=\\\"18\\\" transform=\\\"translate(0.5 2.5)\\\" />\\n      <line\\n        {...commonProps}\\n        id=\\\"line-2\\\"\\n        data-name=\\\"line\\\"\\n        x2=\\\"10\\\"\\n        transform=\\\"translate(4.5 0.5)\\\"\\n      />\\n      <line\\n        {...commonProps}\\n        id=\\\"line-3\\\"\\n        data-name=\\\"line\\\"\\n        y2=\\\"10\\\"\\n        transform=\\\"translate(9.5 5.5)\\\"\\n      />\\n      <line\\n        {...commonProps}\\n        id=\\\"line-4\\\"\\n        data-name=\\\"line\\\"\\n        y2=\\\"10\\\"\\n        transform=\\\"translate(6.5 5.5)\\\"\\n      />\\n      <line\\n        {...commonProps}\\n        id=\\\"line-5\\\"\\n        data-name=\\\"line\\\"\\n        y2=\\\"10\\\"\\n        transform=\\\"translate(12.5 5.5)\\\"\\n      />\\n    </SvgIcon>\\n  );\\n}\\n\\nTrashIcon.defaultProps = {\\n  dark: false,\\n};\\n\\nTrashIcon.propTypes = {\\n  /** Set to `true` to make icon viewable in dark backgrounds */\\n  dark: PropTypes.bool,\\n};\\n\",\"examples\":[{\"name\":\"ExampleBasic\",\"description\":\"Basic trash icon\",\"code\":\"import React from 'react';\\nimport TrashIcon from 'alys/TrashIcon';\\n\\n/** Basic trash icon */\\nexport default function ExampleBasic() {\\n  return <TrashIcon />;\\n}\\n\"}]}];\n"],"sourceRoot":""}