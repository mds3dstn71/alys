{"version":3,"sources":["components/ProgressBar/index.js","components/ProgressBar/ProgressBar.jsx","components/utils/percent-utils.js","examples/ProgressBar/Example70Percent.jsx"],"names":["_ProgressBar","__webpack_require__","_react","_interopRequireDefault","_styledComponents","_percentUtils","_stringUtils","ProgressBarWrapper","styled","div","withConfig","displayName","componentId","_ref","width","styleLengths","ProgressBarValue","_ref2","percent","getWidthAsPercentOfTotalWidth","_ref3","height","_ref4","ProgressBar","_ref5","default","createElement","defaultProps","totalWidth","parseInt"],"mappings":"gOAAA,MAAAA,KAAAC,EAAA,iICAA,IAAAC,EAAAC,EAAAF,EAAA,IAEAG,EAAAD,EAAAF,EAAA,IAEAI,EAAAJ,EAAA,KACAK,EAAAL,EAAA,sDAEA,IAAMM,EAAqBC,UAAOC,IAAVC,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGJ,CAAH,0CAEb,SAAAK,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OAAe,EAAAR,EAAAS,cAAaD,KAGjCE,EAAmBR,UAAOC,IAAVC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAGJ,CAAH,+CACX,SAAAS,GAAA,IAAGC,EAAHD,EAAGC,QAASJ,EAAZG,EAAYH,MAAZ,OACP,EAAAR,EAAAS,eAAa,EAAAV,EAAAc,+BAA8BD,EAASJ,KAC5C,SAAAM,GAAA,IAAGC,EAAHD,EAAGC,OAAH,OAAgB,EAAAf,EAAAS,cAAaM,IACnB,SAAAC,GAAiB,IAAdJ,EAAcI,EAAdJ,QACrB,OAAgB,MAAZA,EAAwB,QAErBA,EAAU,GAAK,aAAe,QAK1B,SAASK,EAATC,GAAiD,IAA1BV,EAA0BU,EAA1BV,MAAOO,EAAmBG,EAAnBH,OAAQH,EAAWM,EAAXN,QACnD,OACEhB,EAAAuB,QAAAC,cAACnB,EAAD,CAAoBO,MAAOA,GACzBZ,EAAAuB,QAAAC,cAACV,EAAD,CAAkBF,MAAOA,EAAOO,OAAQA,EAAQH,QAASA,KAK/DK,EAAYI,aAAe,CACzBN,OAAQ,sHChCH,SAAuCH,EAASU,GACrD,OAAOC,SAASD,GAAcV,EAAU,KAAM,iGCEjC,WACb,OAAOhB,EAAAuB,QAAAC,cAAC1B,EAAAyB,QAAD,CAAaP,QAAS,GAAIJ,MAAO,OAL1C,IAAAZ,EAAAC,EAAAF,EAAA,IACAD,EAAAG,EAAAF,EAAA","file":"static/js/39.305d6148.chunk.js","sourcesContent":["export { default } from './ProgressBar';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { getWidthAsPercentOfTotalWidth } from '@utils/percent-utils';\nimport { styleLengths } from '@utils/string-utils';\n\nconst ProgressBarWrapper = styled.div`\n  border: solid 1px lightgray;\n  width: ${({ width }) => styleLengths(width)};\n`;\n\nconst ProgressBarValue = styled.div`\n  width: ${({ percent, width }) =>\n    styleLengths(getWidthAsPercentOfTotalWidth(percent, width))};\n  height: ${({ height }) => styleLengths(height)};\n  background-color: ${({ percent }) => {\n    if (percent === 100) return 'green';\n\n    return percent > 50 ? 'lightgreen' : 'red';\n  }};\n`;\n\n/** A custom progress bar. */\nexport default function ProgressBar({ width, height, percent }) {\n  return (\n    <ProgressBarWrapper width={width}>\n      <ProgressBarValue width={width} height={height} percent={percent} />\n    </ProgressBarWrapper>\n  );\n}\n\nProgressBar.defaultProps = {\n  height: 5,\n};\n\nProgressBar.propTypes = {\n  /** Percent of progress completed */\n  percent: PropTypes.number.isRequired,\n\n  /** Bar width */\n  width: PropTypes.number.isRequired,\n\n  /** Bar height */\n  height: PropTypes.number,\n};\n","/** Returns the width of a percent of total widths, as an integer */\nexport function getWidthAsPercentOfTotalWidth(percent, totalWidth) {\n  return parseInt(totalWidth * (percent / 100), 10);\n}\n","import React from 'react';\nimport ProgressBar from 'alys/ProgressBar';\n\n/** 70% progress */\nexport default function Example70Percent() {\n  return <ProgressBar percent={70} width={150} />;\n}\n"],"sourceRoot":""}