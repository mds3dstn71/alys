{"version":3,"sources":["examples/ActiveIndicator/ExampleBasic.jsx","components/constants.js","components/ActiveIndicator/index.js","components/ActiveIndicator/ActiveIndicator.jsx"],"names":["_react","default","createElement","_ActiveIndicator","_interopRequireDefault","__webpack_require__","colors","primary","primaryLight","primaryFill","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","lineHeights","avatarSizes","smaller","small","type","_styledComponents","_constants","Indicator","styled","div","withConfig","displayName","componentId","_ref","active","color","ActiveIndicator","props","defaultProps"],"mappings":"sJAIe,WACb,OAAOA,EAAAC,QAAAC,cAACC,EAAAF,QAAD,OALT,IAAAD,EAAAI,EAAAC,EAAA,IACAF,EAAAC,EAAAC,EAAA,08BCD6B,gCACM,+BACD,wBACP,gCACQ,qFAET,4BACK,4BACA,6BACC,wBACL,gCACQ,yFAEA,4EAEH,CAAC,UAAW,sCAEJ,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,gCAEE,iCACA,kCACA,mCACA,kCACA,mCACA,+BACA,2BAEP,wBACF,2BACE,KAE5B,IAAMC,EAAS,CACpBC,QAtC2B,UAuC3BC,aAtCiC,UAuCjCC,YAtCgC,UAuChCC,MAtCyB,UAuCzBC,UAtCiC,2BAuCjCC,KArCwB,UAsCxBC,SArC6B,UAsC7BC,UApC8B,UAqC9BC,MApCyB,UAqCzBC,KApCiC,uCAuC5B,IAAMC,EAAY,CACvBC,GAlCsC,GAmCtCC,GAlCsC,GAmCtCC,GAlCsC,GAmCtCC,GAlCsC,GAmCtCC,GAlCsC,GAmCtCC,GAlCsC,GAmCtCC,EAlCsC,kBAqCjC,IAAMC,EAAc,CACzBP,GApCwC,IAqCxCC,GApCwC,KAqCxCC,GApCwC,MAqCxCC,GApCwC,KAqCxCC,GApCwC,MAqCxCC,GApCwC,EAqCxCC,EApCwC,sBAuCnC,IAAME,EAAc,CACzBC,QAtCiC,IAuCjCC,MAtC+B,KAuC/B3B,QAtCiC,sBAyC5B,IAAM4B,EAAO,CAClBZ,YACAQ,8BAGa,CACbnB,SACAuB,OACAH,iMCpFF,MAAAvB,KAAAE,EAAA,+HCAA,IAAAL,EAAAI,EAAAC,EAAA,IAEAyB,EAAA1B,EAAAC,EAAA,IAEA0B,EAAA1B,EAAA,uDAEA,IAAM2B,EAAYC,UAAOC,IAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,kHAMO,SAAAK,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,MAAX,OAClBD,EACIjC,SAAiB,YAAVkC,EAAsB,eAAiBA,GAC9ClC,SAAOQ,YAMA,SAAS2B,EAAgBC,GACtC,OAAO1C,EAAAC,QAAAC,cAAC8B,EAAcU,GAGxBD,EAAgBE,aAAe,CAC7BJ,QAAQ,EACRC,MAAO","file":"static/js/85.1f4bf41b.chunk.js","sourcesContent":["import React from 'react';\nimport ActiveIndicator from 'alys/ActiveIndicator';\n\n/** Default */\nexport default function ExampleBasic() {\n  return <ActiveIndicator />;\n}\n","export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_PRIMARY_FILL = '#dce9ff';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_BLUE_GRAY = '#b0caff';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const COLOR_BLACK_ALPHA20 = 'rgba(0, 0, 0, 0.2)';\nexport const COLOR_SHADOW = COLOR_BLACK_ALPHA20;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const TYPE_LINE_HEIGHT_HEADING_1 = 1.5;\nexport const TYPE_LINE_HEIGHT_HEADING_2 = 1.75;\nexport const TYPE_LINE_HEIGHT_HEADING_3 = 1.625;\nexport const TYPE_LINE_HEIGHT_HEADING_4 = 1.25;\nexport const TYPE_LINE_HEIGHT_HEADING_5 = 1.125;\nexport const TYPE_LINE_HEIGHT_HEADING_6 = 1;\nexport const TYPE_LINE_HEIGHT_PARAGRAPH = 1.25;\n\nexport const AVATAR_SIZE_SMALLER = 2.5;\nexport const AVATAR_SIZE_SMALL = 3.75;\nexport const AVATAR_SIZE_DEFAULT = 6.25;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  primaryFill: COLOR_PRIMARY_FILL,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport const lineHeights = {\n  h1: TYPE_LINE_HEIGHT_HEADING_1,\n  h2: TYPE_LINE_HEIGHT_HEADING_2,\n  h3: TYPE_LINE_HEIGHT_HEADING_3,\n  h4: TYPE_LINE_HEIGHT_HEADING_4,\n  h5: TYPE_LINE_HEIGHT_HEADING_5,\n  h6: TYPE_LINE_HEIGHT_HEADING_6,\n  p: TYPE_LINE_HEIGHT_PARAGRAPH,\n};\n\nexport const avatarSizes = {\n  smaller: AVATAR_SIZE_SMALLER,\n  small: AVATAR_SIZE_SMALL,\n  default: AVATAR_SIZE_DEFAULT,\n};\n\nexport const type = {\n  fontSizes,\n  lineHeights,\n};\n\nexport default {\n  colors,\n  type,\n  avatarSizes,\n};\n","export { default } from './ActiveIndicator';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { colors } from '@/constants';\n\nconst Indicator = styled.div`\n  min-height: 0.75em;\n  max-height: 0.75em;\n  min-width: 0.75em;\n  max-width: 0.75em;\n  border-radius: 50%;\n  background-color: ${({ active, color }) =>\n    active\n      ? colors[color === 'default' ? 'primaryLight' : color]\n      : colors.whiteBlue};\n`;\n\n/**\n * Provides a visual representation of the status or state of an interface item.\n */\nexport default function ActiveIndicator(props) {\n  return <Indicator {...props} />;\n}\n\nActiveIndicator.defaultProps = {\n  active: false,\n  color: 'default',\n};\n\nActiveIndicator.propTypes = {\n  /**\n   * If set to `true`, indicator will be filled with the color of represented by\n   * the value of the `color` prop\n   */\n  active: PropTypes.bool,\n\n  /** Indicator fill color when value of `active` prop is `true` */\n  color: PropTypes.oneOf(['default', 'error']),\n};\n"],"sourceRoot":""}