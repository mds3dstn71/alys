{"version":3,"sources":["examples/ChevronIcon/ExampleDefault.jsx","components/constants.js","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/utils/icon-utils.js","components/ChevronIcon/index.js","components/ChevronIcon/ChevronIcon.jsx","components/ChevronIcon/chevronIconOptions.js"],"names":["_react","default","createElement","_ChevronIcon","_interopRequireDefault","__webpack_require__","colors","primary","primaryLight","primaryFill","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","lineHeights","avatarSizes","smaller","small","type","_SvgIcon","_stringUtils","SvgIcon","_ref","fontSize","viewBox","children","svgProps","_objectWithoutProperties","Object","assign","xmlns","color","focusable","width","styleLengths","height","defaultProps","isDark","colorWhenBgDark","arguments","length","undefined","COLOR_WHITE","colorWhenBgLight","COLOR_DARK","_constants","_chevronIconOptions","_iconUtils","ChevronIcon","direction","thick","_chevronIconOptions$d","chevronIconOptions","transform","d","id","group","path","fill","stroke","iconDark","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeWidth","up","right","down","left"],"mappings":"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","file":"static/js/20.55129fd8.chunk.js","sourcesContent":["import React from 'react';\nimport ChevronIcon from 'alys/ChevronIcon';\n\n/** Default */\nexport default function ExampleDefault() {\n  return <ChevronIcon />;\n}\n","export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_PRIMARY_FILL = '#dce9ff';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_BLUE_GRAY = '#b0caff';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const COLOR_BLACK_ALPHA20 = 'rgba(0, 0, 0, 0.2)';\nexport const COLOR_SHADOW = COLOR_BLACK_ALPHA20;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const TYPE_LINE_HEIGHT_HEADING_1 = 1.5;\nexport const TYPE_LINE_HEIGHT_HEADING_2 = 1.75;\nexport const TYPE_LINE_HEIGHT_HEADING_3 = 1.625;\nexport const TYPE_LINE_HEIGHT_HEADING_4 = 1.25;\nexport const TYPE_LINE_HEIGHT_HEADING_5 = 1.125;\nexport const TYPE_LINE_HEIGHT_HEADING_6 = 1;\nexport const TYPE_LINE_HEIGHT_PARAGRAPH = 1.25;\n\nexport const AVATAR_SIZE_SMALLER = 2.5;\nexport const AVATAR_SIZE_SMALL = 3.75;\nexport const AVATAR_SIZE_DEFAULT = 6.25;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  primaryFill: COLOR_PRIMARY_FILL,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport const lineHeights = {\n  h1: TYPE_LINE_HEIGHT_HEADING_1,\n  h2: TYPE_LINE_HEIGHT_HEADING_2,\n  h3: TYPE_LINE_HEIGHT_HEADING_3,\n  h4: TYPE_LINE_HEIGHT_HEADING_4,\n  h5: TYPE_LINE_HEIGHT_HEADING_5,\n  h6: TYPE_LINE_HEIGHT_HEADING_6,\n  p: TYPE_LINE_HEIGHT_PARAGRAPH,\n};\n\nexport const avatarSizes = {\n  smaller: AVATAR_SIZE_SMALLER,\n  small: AVATAR_SIZE_SMALL,\n  default: AVATAR_SIZE_DEFAULT,\n};\n\nexport const type = {\n  fontSizes,\n  lineHeights,\n};\n\nexport default {\n  colors,\n  type,\n  avatarSizes,\n};\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nSvgIcon.defaultProps = {\n  fontSize: 24,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n","import { COLOR_WHITE, COLOR_DARK } from '@/constants';\n\n/** Determines the color of the icon depending on the background. */\nexport function iconDark(\n  isDark,\n  colorWhenBgDark = COLOR_WHITE,\n  colorWhenBgLight = COLOR_DARK,\n) {\n  return isDark ? colorWhenBgDark : colorWhenBgLight;\n}\n","export { default } from './ChevronIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { chevronIconOptions } from './chevronIconOptions';\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function ChevronIcon({\n  dark,\n  direction,\n  thick,\n  color,\n  ...svgProps\n}) {\n  const { viewBox, transform, d } = chevronIconOptions[direction];\n\n  return (\n    <SvgIcon viewBox={viewBox} {...svgProps}>\n      <g id=\"chevron-icon\" transform={transform.group}>\n        <path\n          id=\"chevron-icon-2\"\n          d={d}\n          transform={transform.path}\n          fill=\"none\"\n          stroke={iconDark(\n            dark,\n            COLOR_WHITE,\n            color ? colors[color] : 'currentColor',\n          )}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          strokeWidth={thick ? 2 : undefined}\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nChevronIcon.defaultProps = {\n  dark: false,\n  direction: 'up',\n  thick: false,\n};\n\nChevronIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Sets the direction */\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n\n  /** Set to `true` to make icon thicker */\n  thick: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n","const viewBox = {\n  vertical: '0 0 11.7 6.8',\n  horizontal: '0 0 5.8 10.7',\n};\nconst verticalPathTransform = 'translate(237.7 103.95) rotate(90)';\n\nexport const chevronIconOptions = {\n  up: {\n    d: 'M.5,10.2,5.3,5.3.5.5',\n    viewBox: viewBox.vertical,\n    transform: {\n      group: 'translate(238.2 110.25) rotate(180)',\n      path: verticalPathTransform,\n    },\n  },\n  right: {\n    d: 'M.5,10.2,5.3,5.3.5.5',\n    viewBox: viewBox.horizontal,\n    transform: {\n      group: 'translate(-652.002 -385)',\n      path: 'translate(652.002 385)',\n    },\n  },\n  down: {\n    d: 'M.5,10.2,5.3,5.3.5.5',\n    viewBox: viewBox.vertical,\n    transform: {\n      group: 'translate(-226.5 -103.45)',\n      path: verticalPathTransform,\n    },\n  },\n  left: {\n    d: 'M5.3,10.2.5,5.3,5.3.5',\n    viewBox: viewBox.horizontal,\n    transform: {\n      group: 'translate(-512.002 -387)',\n      path: 'translate(512.002 387)',\n    },\n  },\n};\n"],"sourceRoot":""}