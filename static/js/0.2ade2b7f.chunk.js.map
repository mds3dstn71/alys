{"version":3,"sources":["components/ListItemPerson/index.js","components/ListItemPerson/ListItemPerson.jsx","components/common/ListItemMoreOptions/index.js","components/common/ListItemMoreOptions/ListItemMoreOptions.jsx","components/common/ListItemMoreOptions/ListItemMoreOptionsAction.jsx","components/common/ListItemMoreOptions/ListItemMoreOptionsActionButton.jsx","components/constants.js","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/utils/icon-utils.js","components/MentorIcon/index.js","components/MentorIcon/MentorIcon.jsx","components/Typography/index.js","components/Typography/Typography.jsx","components/Avatar/index.js","components/Avatar/Avatar.jsx","components/ActiveIndicator/index.js","components/ActiveIndicator/ActiveIndicator.jsx","components/CloseIcon/index.js","components/CloseIcon/CloseIcon.jsx","components/OptionsIcon/index.js","components/OptionsIcon/OptionsIcon.jsx"],"names":["_ListItemPerson","__webpack_require__","_react","_interopRequireWildcard","_styledComponents","_interopRequireDefault","_constants","_ActiveIndicator","_Avatar","_Typography","_ListItemMoreOptions","Wrapper","styled","div","withConfig","displayName","componentId","COLOR_WHITE","COLOR_DARK","Text","PrimaryText","p","ListItemPerson","state","isMoreOptionsOpen","_handleMoreOptionsOnClick","_this","setState","prevState","Component","_this$props","this","props","active","avatar","name","detail","onClick","moreOptionsActions","default","createElement","style","flexShrink","size","src","actions","isOpen","defaultProps","_OptionsIcon","_ListItemMoreOptionsAction","_ref","visible","ListItemMoreOptions","_ref2","length","_CloseIcon","_ListItemMoreOptionsActionButton","ButtonWrapper","ListItemMoreOptionsAction","_generateActionButtons","map","action","Object","assign","key","label","ActionButton","color","COLOR_PRIMARY_LIGHT","colors","ListItemMoreOptionsActionButton","_handleOnActionButtonClick","event","stopPropagation","icon","title","primary","primaryLight","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","lineHeights","avatarSizes","smaller","small","type","_SvgIcon","_stringUtils","SvgIcon","fontSize","viewBox","children","svgProps","_objectWithoutProperties","xmlns","focusable","width","styleLengths","height","isDark","colorWhenBgDark","arguments","undefined","colorWhenBgLight","_MentorIcon","_iconUtils","MentorIcon","commonProps","fill","stroke","iconDark","strokeLinecap","strokeLinejoin","strokeMiterlimit","id","transform","d","data-name","pStyles","css","builder","variant","gutterBottom","Typography","getSize","theme","calcSize","percent","_ref3","Img","img","_ref4","_ref4$theme","round","concat","_ref5","_ref5$theme","outlined","DefaultWrapper","COLOR_WHITE_BLUE","StyledMentorIcon","COLOR_GRAY_BLUE","Avatar","_ref6","alt","ThemeProvider","Indicator","ActiveIndicator","CloseIcon","x1","y1","x2","OptionsIcon","cx","cy","r"],"mappings":"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","file":"static/js/0.2ade2b7f.chunk.js","sourcesContent":["export { default } from './ListItemPerson';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { COLOR_WHITE, COLOR_DARK } from '@/constants';\nimport ActiveIndicator from '@/ActiveIndicator';\nimport Avatar from '@/Avatar';\nimport Typepography from '@/Typography';\nimport ListItemMoreOptions from '@common/ListItemMoreOptions';\n\nconst Wrapper = styled.div`\n  box-sizing: border-box;\n  background-color: ${COLOR_WHITE};\n  color: ${COLOR_DARK};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  min-height: 6.28125em;\n  width: 100%;\n  padding: 0.9375em;\n\n  @media (min-width: 34em) {\n    padding: 0 1.875em;\n  }\n`;\n\n// @TODO+ListItemPerson: Fix items being pushed and responsiveness\nconst Text = styled.div`\n  display: flex;\n  flex: 0.86;\n  flex-shrink: 1;\n  flex-direction: column;\n`;\n\nconst PrimaryText = styled.p`\n  font-weight: 500;\n  margin: 0 0 0.5em 0;\n`;\n\n/** Displays an overview for a person */\nexport default class ListItemPerson extends Component {\n  static defaultProps = {\n    active: false,\n  };\n\n  static propTypes = {\n    /** The name to display */\n    name: PropTypes.string.isRequired,\n\n    /** A detail about this item */\n    detail: PropTypes.string.isRequired,\n\n    /**\n     * If empty, this will hide the more options button. Otherwise, it will\n     * render a button that when clicked will reveal a list of actions.\n     */\n    moreOptionsActions: PropTypes.arrayOf(\n      PropTypes.shape({\n        icon: PropTypes.node.isRequired,\n        label: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired,\n        color: PropTypes.oneOf(['default', 'primary']),\n      }),\n    ).isRequired,\n\n    /** Sets the status of the person item */\n    active: PropTypes.bool,\n\n    /** Image to display before the name and details */\n    avatar: PropTypes.string,\n\n    /** Action to perform when item is clicked */\n    onClick: PropTypes.func,\n  };\n\n  state = {\n    isMoreOptionsOpen: false,\n  };\n\n  render() {\n    const {\n      active,\n      avatar,\n      name,\n      detail,\n      onClick,\n      moreOptionsActions,\n    } = this.props;\n    const { isMoreOptionsOpen } = this.state;\n\n    return (\n      <Wrapper onClick={onClick}>\n        <ActiveIndicator active={active} style={{ flexShrink: 0 }} />\n        <Avatar size=\"smaller\" src={avatar} style={{ flexShrink: 0 }} />\n        <Text>\n          <PrimaryText>{name}</PrimaryText>\n          <Typepography>{detail}</Typepography>\n        </Text>\n        <ListItemMoreOptions\n          actions={moreOptionsActions}\n          isOpen={isMoreOptionsOpen}\n          onClick={this._handleMoreOptionsOnClick}\n        />\n      </Wrapper>\n    );\n  }\n\n  _handleMoreOptionsOnClick = () =>\n    this.setState((prevState) => ({\n      isMoreOptionsOpen: !prevState.isMoreOptionsOpen,\n    }));\n}\n","export { default } from './ListItemMoreOptions';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport OptionsIcon from '@/OptionsIcon';\nimport ListItemMoreOptionsAction from './ListItemMoreOptionsAction';\n\nconst Wrapper = styled.div`\n  cursor: pointer;\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\n`;\n\n/** Toggles between hiding and showing more option actions */\nexport default function ListItemMoreOptions({ isOpen, actions, onClick }) {\n  return (\n    <Wrapper onClick={onClick} visible={actions.length > 0}>\n      {isOpen ? (\n        <ListItemMoreOptionsAction actions={actions} />\n      ) : (\n        <OptionsIcon />\n      )}\n    </Wrapper>\n  );\n}\n\nListItemMoreOptions.defaultProps = {\n  isOpen: false,\n};\n\nListItemMoreOptions.propTypes = {\n  /** List of actions to display */\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.node.isRequired,\n      label: PropTypes.string.isRequired,\n      onClick: PropTypes.func.isRequired,\n      color: PropTypes.oneOf(['default', 'primary']),\n    }),\n  ).isRequired,\n\n  /** Action */\n  onClick: PropTypes.func.isRequired,\n\n  /** Determines if more actions will be rendered */\n  isOpen: PropTypes.bool,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport CloseIcon from '@/CloseIcon';\nimport ListItemMoreOptionsActionButton from './ListItemMoreOptionsActionButton';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-right: 1.1875em;\n`;\n\n/** Container for a action item buttons */\nexport default class ListItemMoreOptionsAction extends Component {\n  static propTypes = {\n    /** List of actions to display */\n    actions: PropTypes.arrayOf(\n      PropTypes.shape({\n        icon: PropTypes.node.isRequired,\n        label: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired,\n        color: PropTypes.oneOf(['default', 'primary']),\n      }),\n    ).isRequired,\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <ButtonWrapper>{this._generateActionButtons()}</ButtonWrapper>\n        <CloseIcon />\n      </Wrapper>\n    );\n  }\n\n  _generateActionButtons = () => {\n    return this.props.actions.map((action) => (\n      <ListItemMoreOptionsActionButton key={action.label} {...action} />\n    ));\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { COLOR_WHITE, COLOR_PRIMARY_LIGHT, colors } from '@/constants';\n\nconst ActionButton = styled.div`\n  background-color: ${({ color }) =>\n    color === 'default' ? COLOR_PRIMARY_LIGHT : colors[color]};\n  color: ${COLOR_WHITE};\n  padding: 0.75em 1em;\n  vertical-align: middle;\n\n  &:first-child {\n    border-top-left-radius: 6px;\n    border-bottom-left-radius: 6px;\n  }\n\n  &:last-child {\n    border-top-right-radius: 6px;\n    border-bottom-right-radius: 6px;\n  }\n`;\n\nexport default class ListItemMoreOptionsActionButton extends Component {\n  static defaultProps = {\n    color: 'default',\n  };\n\n  static propTypes = {\n    /** Button icon */\n    icon: PropTypes.node.isRequired,\n\n    /** Label for button */\n    label: PropTypes.string.isRequired,\n\n    /** Handler for button clicks */\n    onClick: PropTypes.func.isRequired,\n\n    /** Button background color */\n    color: PropTypes.oneOf(['default', 'primary']),\n  };\n\n  render() {\n    const { onClick, color, label, icon } = this.props;\n\n    return (\n      <ActionButton\n        onClick={this._handleOnActionButtonClick(onClick)}\n        color={color}\n        title={label}\n      >\n        {icon}\n      </ActionButton>\n    );\n  }\n\n  _handleOnActionButtonClick = (onClick) => (event) => {\n    event.stopPropagation();\n\n    onClick();\n  };\n}\n","export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const TYPE_LINE_HEIGHT_HEADING_1 = 1.5;\nexport const TYPE_LINE_HEIGHT_HEADING_2 = 1.75;\nexport const TYPE_LINE_HEIGHT_HEADING_3 = 1.625;\nexport const TYPE_LINE_HEIGHT_HEADING_4 = 1.25;\nexport const TYPE_LINE_HEIGHT_HEADING_5 = 1.125;\nexport const TYPE_LINE_HEIGHT_HEADING_6 = 1;\nexport const TYPE_LINE_HEIGHT_PARAGRAPH = 1.25;\n\nexport const AVATAR_SIZE_SMALLER = 2.5;\nexport const AVATAR_SIZE_SMALL = 3.75;\nexport const AVATAR_SIZE_DEFAULT = 6.25;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport const lineHeights = {\n  h1: TYPE_LINE_HEIGHT_HEADING_1,\n  h2: TYPE_LINE_HEIGHT_HEADING_2,\n  h3: TYPE_LINE_HEIGHT_HEADING_3,\n  h4: TYPE_LINE_HEIGHT_HEADING_4,\n  h5: TYPE_LINE_HEIGHT_HEADING_5,\n  h6: TYPE_LINE_HEIGHT_HEADING_6,\n  p: TYPE_LINE_HEIGHT_PARAGRAPH,\n};\n\nexport const avatarSizes = {\n  smaller: AVATAR_SIZE_SMALLER,\n  small: AVATAR_SIZE_SMALL,\n  default: AVATAR_SIZE_DEFAULT,\n};\n\nexport const type = {\n  fontSizes,\n  lineHeights,\n};\n\nexport default {\n  colors,\n  type,\n  avatarSizes,\n};\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nSvgIcon.defaultProps = {\n  fontSize: 24,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n","import { COLOR_WHITE, COLOR_DARK } from '@/constants';\n\n/** Determines the color of the icon depending on the background. */\nexport function iconDark(\n  isDark,\n  colorWhenBgDark = COLOR_WHITE,\n  colorWhenBgLight = COLOR_DARK,\n) {\n  return isDark ? colorWhenBgDark : colorWhenBgLight;\n}\n","export { default } from './MentorIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function MentorIcon({ dark, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, color ? colors[color] : 'currentColor'),\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox=\"0 0 21.7 19.4\" {...svgProps}>\n      <g id=\"mentor-icon\" transform=\"translate(0 0)\">\n        <path {...commonProps} id=\"path\" d=\"M10.3,13.6v3l-5,2.3\" />\n        <path\n          {...commonProps}\n          id=\"path-2\"\n          data-name=\"path\"\n          d=\"M16.1,13.6v3l5.1,2.3\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-3\"\n          data-name=\"path\"\n          d=\"M15,14.1a5.2,5.2,0,0,0,3.5-4.9V4.6A4.055,4.055,0,0,0,14.4.5H12.2A4.14,4.14,0,0,0,8,4.6V9.2a5.2,5.2,0,0,0,3.5,4.9\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-4\"\n          data-name=\"path\"\n          d=\"M4.6,11.3v2.4L.5,15.6\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-5\"\n          data-name=\"path\"\n          d=\"M6.9.5H6.1A3.372,3.372,0,0,0,2.7,3.9V7.6a4.249,4.249,0,0,0,2.8,4\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nMentorIcon.defaultProps = {\n  dark: false,\n};\n\nMentorIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n","export { default } from './Typography';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport { fontSizes, lineHeights } from '@/constants';\nimport { styleLengths } from '@utils/string-utils';\n\nconst pStyles = css`\n  font-weight: 400;\n`;\nconst builder = (variant) => styled(variant)`\n  color: inherit;\n  margin: 0 0\n    ${({ gutterBottom }) =>\n      gutterBottom ? styleLengths(lineHeights[variant] * 12) : 0};\n  font-weight: 500;\n  font-size: ${styleLengths(fontSizes[variant])};\n  line-height: ${lineHeights[variant]};\n  ${variant === 'p' && pStyles}\n`;\n\n/** Styled text using pre-set type scales and sizes */\nexport default function Typography({ variant, children, ...props }) {\n  const Component = builder(variant);\n\n  return <Component {...props}>{children}</Component>;\n}\n\nTypography.defaultProps = {\n  variant: 'p',\n  gutterBottom: false,\n};\n\nTypography.propTypes = {\n  /** Text to display */\n  children: PropTypes.string.isRequired,\n\n  /** Determines the styles of the text */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p']),\n\n  /** Add a margin at the bottom */\n  gutterBottom: PropTypes.bool,\n};\n","export { default } from './Avatar';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport {\n  COLOR_GRAY_BLUE,\n  COLOR_WHITE,\n  COLOR_WHITE_BLUE,\n  avatarSizes,\n} from '@/constants';\nimport MentorIcon from '@/MentorIcon';\n\n/** Returns the size of the avatar */\nexport function getSize({ theme: { size } }) {\n  return size;\n}\n\n/** Calculates size of the avatar with an outline */\nexport function calcSize(percent) {\n  return ({ theme: { size } }) => size + size * percent;\n}\n\nconst Wrapper = styled.div`\n  background-color: ${COLOR_WHITE};\n  width: ${calcSize(0.2)}em;\n  height: ${calcSize(0.2)}em;\n  border-radius: ${({ theme: { size } }) => size * 0.1}em;\n`;\n\nconst Img = styled.img`\n  height: ${getSize}em;\n  width: ${getSize}em;\n  border-radius: ${({ theme: { size, round } }) =>\n    round ? '50%' : `${size * 0.1}em`};\n  margin: ${({ theme: { size, outlined, round } }) =>\n    outlined && !round ? size * 0.1 : 0}em;\n`;\n\nconst DefaultWrapper = styled(Wrapper)`\n  background-color: ${COLOR_WHITE_BLUE};\n`;\n\nconst StyledMentorIcon = styled(MentorIcon)`\n  position: relative;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  && path {\n    stroke: ${COLOR_GRAY_BLUE};\n  }\n`;\n\n/** Image avatars. */\nexport default function Avatar({ src, alt, outlined, size, round }) {\n  const theme = {\n    size: avatarSizes[size],\n    outlined,\n    round,\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      {src ? (\n        outlined && !round ? (\n          <Wrapper>\n            <Img src={src} alt={alt} />\n          </Wrapper>\n        ) : (\n          <Img src={src} alt={alt} />\n        )\n      ) : (\n        <DefaultWrapper>\n          <StyledMentorIcon />\n        </DefaultWrapper>\n      )}\n    </ThemeProvider>\n  );\n}\n\nAvatar.defaultProps = {\n  alt: '',\n  outlined: false,\n  size: 'default',\n  round: false,\n};\n\nAvatar.propTypes = {\n  /** Path to the image file */\n  src: PropTypes.string,\n\n  /** Alternate text for the image */\n  alt: PropTypes.string,\n\n  /** Show or hide image outline */\n  outlined: PropTypes.bool,\n\n  /** Pre-set avatar size */\n  size: PropTypes.oneOf(['smaller', 'small', 'default']),\n\n  /** If set `true`, image shape will be clipped to a circle */\n  round: PropTypes.bool,\n};\n","export { default } from './ActiveIndicator';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { colors } from '@/constants';\n\nconst Indicator = styled.div`\n  min-height: 0.75em;\n  max-height: 0.75em;\n  min-width: 0.75em;\n  max-width: 0.75em;\n  border-radius: 50%;\n  background-color: ${({ active, color }) =>\n    active\n      ? colors[color === 'default' ? 'primaryLight' : color]\n      : colors.whiteBlue};\n`;\n\n/**\n * Provides a visual representation of the status or state of an interface item.\n */\nexport default function ActiveIndicator(props) {\n  return <Indicator {...props} />;\n}\n\nActiveIndicator.defaultProps = {\n  active: false,\n  color: 'default',\n};\n\nActiveIndicator.propTypes = {\n  /**\n   * If set to `true`, indicator will be filled with the color of represented by\n   * the value of the `color` prop\n   */\n  active: PropTypes.bool,\n\n  /** Indicator fill color when value of `active` prop is `true` */\n  color: PropTypes.oneOf(['default', 'error']),\n};\n","export { default } from './CloseIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function CloseIcon({ dark, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, color ? colors[color] : 'currentColor'),\n    strokeLinecap: 'round',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox=\"0 0 17.414 17.414\" {...svgProps}>\n      <g id=\"close-icon\" transform=\"translate(0.207 0.207)\">\n        <line\n          {...commonProps}\n          id=\"line\"\n          x1=\"16\"\n          y1=\"16\"\n          transform=\"translate(0.5 0.5)\"\n        />\n        <line\n          {...commonProps}\n          id=\"line-2\"\n          data-name=\"line\"\n          y1=\"16\"\n          x2=\"16\"\n          transform=\"translate(0.5 0.5)\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nCloseIcon.defaultProps = {\n  dark: false,\n};\n\nCloseIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n","export { default } from './OptionsIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function OptionsIcon({ dark, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, color ? colors[color] : 'currentColor'),\n  };\n  return (\n    <SvgIcon viewBox=\"0 0 19 5\" {...svgProps}>\n      <g id=\"options-icon\" transform=\"translate(-326 -201)\">\n        <g {...commonProps} id=\"ellipse\" transform=\"translate(326 201)\">\n          <circle stroke=\"none\" cx=\"2.5\" cy=\"2.5\" r=\"2.5\" />\n          <circle fill=\"none\" cx=\"2.5\" cy=\"2.5\" r=\"2\" />\n        </g>\n        <g\n          {...commonProps}\n          id=\"ellipse-2\"\n          data-name=\"ellipse\"\n          transform=\"translate(333 201)\"\n        >\n          <circle stroke=\"none\" cx=\"2.5\" cy=\"2.5\" r=\"2.5\" />\n          <circle fill=\"none\" cx=\"2.5\" cy=\"2.5\" r=\"2\" />\n        </g>\n        <g\n          {...commonProps}\n          id=\"ellipse-3\"\n          data-name=\"ellipse\"\n          transform=\"translate(340 201)\"\n        >\n          <circle stroke=\"none\" cx=\"2.5\" cy=\"2.5\" r=\"2.5\" />\n          <circle fill=\"none\" cx=\"2.5\" cy=\"2.5\" r=\"2\" />\n        </g>\n      </g>\n    </SvgIcon>\n  );\n}\n\nOptionsIcon.defaultProps = {\n  dark: false,\n};\n\nOptionsIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n"],"sourceRoot":""}