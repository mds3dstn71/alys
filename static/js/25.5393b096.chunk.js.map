{"version":3,"sources":["examples/Button/ExamplePlayground.jsx","components/constants.js","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/utils/icon-utils.js","components/Button/index.js","components/Button/Button.jsx","components/ArrowLeftIcon/index.js","components/ArrowLeftIcon/ArrowLeftIcon.jsx"],"names":["_react","_interopRequireWildcard","__webpack_require__","_Button","_interopRequireDefault","_ArrowLeftIcon","_ToggleButton","ExamplePlayground","state","disabled","count","_toggleButtonDisabledState","_this","setState","_ref","_updateCount","_ref2","Component","common","this","onClick","default","createElement","Fragment","on","onText","offText","style","textAlign","Object","assign","basic","text","marginBottom","block","iconOnly","icon","ArrowLeftIcon","type","colors","primary","primaryLight","primaryFill","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","lineHeights","avatarSizes","smaller","small","_SvgIcon","_stringUtils","SvgIcon","fontSize","viewBox","children","svgProps","_objectWithoutProperties","xmlns","color","focusable","width","styleLengths","height","defaultProps","isDark","colorWhenBgDark","arguments","length","undefined","COLOR_WHITE","colorWhenBgLight","COLOR_DARK","_constants","_styledComponents","disabledStyles","css","COLOR_GRAY_BLUE","buttonIcon","_ref$type","_ref$iconOnly","Icon","attrs","withConfig","displayName","componentId","BasicButton","styled","div","role","_ref3","COLOR_PRIMARY","_ref4","TYPE_FONT_SIZE_HEADING_6","_ref5","IconOnlyButton","_ref6","WideButton","_ref7","GRADIENT_PRIMARY","concat","_ref8","darkMode","theme","_ref9","_ref10","Button","_ref11","props","_iconUtils","commonProps","fill","stroke","iconDark","strokeLinecap","strokeMiterlimit","id","transform","x1","strokeLinejoin","d"],"mappings":"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","file":"static/js/25.5393b096.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'alys/Button';\nimport ArrowLeftIcon from 'alys/ArrowLeftIcon';\n\nimport ToggleButton from '../../app/common/ToggleButton';\n\n/** Button playgound */\nexport default class ExamplePlayground extends Component {\n  state = {\n    disabled: false,\n    count: 0,\n  };\n\n  render() {\n    const common = {\n      disabled: this.state.disabled,\n      onClick: this._updateCount,\n    };\n\n    return (\n      <React.Fragment>\n        <ToggleButton\n          on={this.state.disabled}\n          onClick={this._toggleButtonDisabledState}\n          onText=\"enable\"\n          offText=\"disable\"\n        />\n\n        <p>\n          Count: <strong>{this.state.count}</strong>\n        </p>\n\n        <div style={{ textAlign: 'center' }}>\n          <Button\n            basic\n            text=\"basic\"\n            {...common}\n            style={{ marginBottom: '1em' }}\n          />\n\n          <Button block text=\"block\" {...common} />\n\n          <Button text=\"default\" {...common} />\n\n          <Button iconOnly icon={ArrowLeftIcon} {...common} />\n\n          <Button type=\"link\" text=\"Link\" {...common} />\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  _toggleButtonDisabledState = () =>\n    this.setState(({ disabled: prevDisabled }) => ({\n      disabled: !prevDisabled,\n    }));\n\n  _updateCount = () =>\n    this.setState(({ count: prevCount }) => ({ count: prevCount + 1 }));\n}\n","export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_PRIMARY_FILL = '#dce9ff';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_BLUE_GRAY = '#b0caff';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const TYPE_LINE_HEIGHT_HEADING_1 = 1.5;\nexport const TYPE_LINE_HEIGHT_HEADING_2 = 1.75;\nexport const TYPE_LINE_HEIGHT_HEADING_3 = 1.625;\nexport const TYPE_LINE_HEIGHT_HEADING_4 = 1.25;\nexport const TYPE_LINE_HEIGHT_HEADING_5 = 1.125;\nexport const TYPE_LINE_HEIGHT_HEADING_6 = 1;\nexport const TYPE_LINE_HEIGHT_PARAGRAPH = 1.25;\n\nexport const AVATAR_SIZE_SMALLER = 2.5;\nexport const AVATAR_SIZE_SMALL = 3.75;\nexport const AVATAR_SIZE_DEFAULT = 6.25;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  primaryFill: COLOR_PRIMARY_FILL,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport const lineHeights = {\n  h1: TYPE_LINE_HEIGHT_HEADING_1,\n  h2: TYPE_LINE_HEIGHT_HEADING_2,\n  h3: TYPE_LINE_HEIGHT_HEADING_3,\n  h4: TYPE_LINE_HEIGHT_HEADING_4,\n  h5: TYPE_LINE_HEIGHT_HEADING_5,\n  h6: TYPE_LINE_HEIGHT_HEADING_6,\n  p: TYPE_LINE_HEIGHT_PARAGRAPH,\n};\n\nexport const avatarSizes = {\n  smaller: AVATAR_SIZE_SMALLER,\n  small: AVATAR_SIZE_SMALL,\n  default: AVATAR_SIZE_DEFAULT,\n};\n\nexport const type = {\n  fontSizes,\n  lineHeights,\n};\n\nexport default {\n  colors,\n  type,\n  avatarSizes,\n};\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nSvgIcon.defaultProps = {\n  fontSize: 24,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n","import { COLOR_WHITE, COLOR_DARK } from '@/constants';\n\n/** Determines the color of the icon depending on the background. */\nexport function iconDark(\n  isDark,\n  colorWhenBgDark = COLOR_WHITE,\n  colorWhenBgLight = COLOR_DARK,\n) {\n  return isDark ? colorWhenBgDark : colorWhenBgLight;\n}\n","export { default } from './Button';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport {\n  COLOR_PRIMARY,\n  COLOR_WHITE,\n  COLOR_GRAY_BLUE,\n  GRADIENT_PRIMARY,\n  TYPE_FONT_SIZE_HEADING_6,\n} from '@/constants';\nimport { styleLengths } from '@utils/string-utils';\n\nconst disabledStyles = css`\n  background-color: ${COLOR_GRAY_BLUE};\n\n  && {\n    cursor: default;\n  }\n`;\n\n/**\n * Returns `null` if an icon node is not provided. Otherwise, it returns a\n * styled <Icon /> component.\n */\nfunction buttonIcon({ icon, type = 'default', iconOnly = false }) {\n  if (!icon) {\n    return null;\n  }\n\n  const Icon = styled(icon).attrs(() => ({\n    dark: type !== 'link',\n  }))`\n    margin-right: ${iconOnly ? 0 : '1.125em'};\n    vertical-align: middle;\n\n    && svg {\n      font-size: 1.125em;\n    }\n  `;\n\n  return <Icon />;\n}\n\n/** Linear gradient value builder for the `background` property. */\nfunction linearGradient(colors) {\n  return `linear-gradient(to right, ${colors})`;\n}\n\nconst BasicButton = styled.div.attrs(({ text }) => ({\n  children: text,\n  role: 'button',\n}))`\n  border: 0;\n  outline: none;\n  user-select: none;\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  background: ${({ type }) =>\n    type === 'link' ? 'transparent' : COLOR_PRIMARY};\n  color: ${({ type }) => (type === 'link' ? COLOR_PRIMARY : COLOR_WHITE)};\n  text-transform: uppercase;\n  border-radius: 0.375em;\n  padding: 1em;\n  font-size: ${styleLengths(TYPE_FONT_SIZE_HEADING_6)};\n  font-weight: 500;\n  overflow: hidden;\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  ${({ disabled }) => disabled && disabledStyles}\n`;\n\nconst IconOnlyButton = styled(BasicButton).attrs(({ icon }) => ({\n  children: buttonIcon({ icon, iconOnly: true }),\n}))`\n  border-radius: 50%;\n`;\n\nconst WideButton = styled(BasicButton)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: ${({ type, disabled }) => {\n    if (disabled) {\n      return type === 'link' ? 'transparent' : COLOR_GRAY_BLUE;\n    }\n\n    return type === 'link' ? 'transparent' : linearGradient(GRADIENT_PRIMARY);\n  }};\n  color: ${({ type, disabled, theme: { darkMode } }) => {\n    if (type === 'link') {\n      if (disabled) {\n        return 'inherit';\n      }\n\n      return darkMode ? 'inherit' : COLOR_PRIMARY;\n    }\n\n    return COLOR_WHITE;\n  }};\n  border-radius: ${({ block }) => (block ? 0 : '0.375em')};\n  min-height: 4em;\n  margin: ${({ block }) => (block ? 0 : '1.25em 1.875em')};\n`;\n\n/**\n * Button signals to the user that an action can be performed by clicking or\n * taping this element.\n */\nexport default function Button({\n  basic,\n  text,\n  block,\n  type,\n  icon,\n  iconOnly,\n  ...props\n}) {\n  if (props.disabled) {\n    props.onClick = undefined;\n  }\n\n  if (iconOnly) {\n    return <IconOnlyButton icon={icon} {...props} />;\n  }\n\n  if (basic) {\n    return <BasicButton text={text} type={type} {...props} />;\n  }\n\n  return (\n    <WideButton block={block} type={type} {...props}>\n      {buttonIcon({ icon, type })} {text}\n    </WideButton>\n  );\n}\n\nButton.defaultProps = {\n  basic: false,\n  block: false,\n  color: 'default',\n  icon: null,\n  iconOnly: false,\n  type: 'default',\n  disabled: false,\n};\n\nButton.propTypes = {\n  /** Text to display on the button */\n  text: PropTypes.string,\n\n  /** Handler to call when button is clicked */\n  onClick: PropTypes.func,\n\n  /** If set to `true`, the button cannot be interacted with */\n  disabled: PropTypes.bool,\n\n  /**\n   * Button width is determined by the content. If set to `true`, the value of\n   * `icon` will be ignored.\n   */\n  basic: PropTypes.bool,\n\n  /** If set to `true`, the button's width will span it's container's width */\n  block: PropTypes.bool,\n\n  /** Button color preset */\n  color: PropTypes.oneOf(['default', 'secondary']),\n\n  /** Button type */\n  type: PropTypes.oneOf(['default', 'link']),\n\n  /** The icon to be displayed before the button text */\n  icon: PropTypes.func,\n\n  /**\n   * A button that contains only an icon. If this is set to `true` the value of\n   * `text` is ignored.\n   */\n  iconOnly: PropTypes.bool,\n};\n","export { default } from './ArrowLeftIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function ArrowLeftIcon({ dark, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, color ? colors[color] : 'currentColor'),\n    strokeLinecap: 'round',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox=\"0 0 19 17.2\" {...svgProps}>\n      <g id=\"arrow-left-icon\" transform=\"translate(0 0)\">\n        <line\n          {...commonProps}\n          id=\"line\"\n          x1=\"17\"\n          transform=\"translate(1.5 8.6)\"\n        />\n        <path\n          {...commonProps}\n          id=\"path\"\n          strokeLinejoin=\"round\"\n          d=\"M8.6.5.5,8.6l8.1,8.1\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nArrowLeftIcon.defaultProps = {\n  dark: false,\n};\n\nArrowLeftIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n"],"sourceRoot":""}