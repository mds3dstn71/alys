{"version":3,"sources":["components/BottomBar/index.js","components/BottomBar/BottomBar.jsx","components/constants.js","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/utils/icon-utils.js","components/MentorIcon/index.js","components/MentorIcon/MentorIcon.jsx","components/BottomBarAction/index.js","components/BottomBarAction/BottomBarAction.jsx","components/HomeIcon/index.js","components/HomeIcon/HomeIcon.jsx","components/CommentIcon/index.js","components/CommentIcon/CommentIcon.jsx","components/SettingsIcon/index.js","components/SettingsIcon/SettingsIcon.jsx","examples/BottomBar/ExampleBasic.jsx"],"names":["_BottomBar","__webpack_require__","_ref","childrenProp","children","value","onChange","React","Children","map","child","i","isValidElement","childValue","undefined","props","cloneElement","selected","_react","default","createElement","Wrapper","_interopRequireDefault","_styledComponents","_constants","styled","div","withConfig","displayName","componentId","COLOR_WHITE","colors","primary","primaryLight","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","lineHeights","type","_SvgIcon","_stringUtils","SvgIcon","fontSize","viewBox","svgProps","_objectWithoutProperties","Object","assign","xmlns","color","focusable","width","styleLengths","height","defaultProps","isDark","colorWhenBgDark","arguments","length","colorWhenBgLight","COLOR_DARK","_MentorIcon","_iconUtils","MentorIcon","commonProps","fill","stroke","iconDark","strokeLinecap","strokeLinejoin","strokeMiterlimit","id","transform","d","data-name","_BottomBarAction","_interopRequireWildcard","Action","COLOR_GRAY_BLUE","COLOR_PRIMARY","BottomBarAction","_handleOnClick","event","_this$props","_this","Component","_this$props2","this","icon","onClick","_HomeIcon","HomeIcon","_CommentIcon","CommentIcon","_SettingsIcon","Settings","ExampleBasic","state","_handleOnChange","setState","PureComponent","Fragment"],"mappings":"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","file":"static/js/13.83b8a22e.chunk.js","sourcesContent":["export { default } from './BottomBar';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { COLOR_WHITE } from '@/constants';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-height: 5.3125em;\n  background: ${COLOR_WHITE};\n`;\n\n/**\n * Provides a list of action items that the user can click to move to another\n * page of the app.\n */\nexport default function BottomBar({ children: childrenProp, value, onChange }) {\n  const children = React.Children.map(childrenProp, (child, i) => {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    const childValue = child.props.value === undefined ? i : child.props.value;\n\n    return React.cloneElement(child, {\n      selected: childValue === value,\n      value: childValue,\n      onChange,\n    });\n  });\n\n  return <Wrapper>{children}</Wrapper>;\n}\n\nBottomBar.propTypes = {\n  /** Action items */\n  children: PropTypes.node.isRequired,\n\n  /** Represents the currently selected action item */\n  value: PropTypes.any,\n\n  /**\n   * Callback when `value` changes. Must have two params for the `event` object\n   * and the `value`\n   */\n  onChange: PropTypes.func,\n};\n","export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const TYPE_LINE_HEIGHT_HEADING_1 = 1.5;\nexport const TYPE_LINE_HEIGHT_HEADING_2 = 1.75;\nexport const TYPE_LINE_HEIGHT_HEADING_3 = 1.625;\nexport const TYPE_LINE_HEIGHT_HEADING_4 = 1.25;\nexport const TYPE_LINE_HEIGHT_HEADING_5 = 1.125;\nexport const TYPE_LINE_HEIGHT_HEADING_6 = 1;\nexport const TYPE_LINE_HEIGHT_PARAGRAPH = 1.25;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport const lineHeights = {\n  h1: TYPE_LINE_HEIGHT_HEADING_1,\n  h2: TYPE_LINE_HEIGHT_HEADING_2,\n  h3: TYPE_LINE_HEIGHT_HEADING_3,\n  h4: TYPE_LINE_HEIGHT_HEADING_4,\n  h5: TYPE_LINE_HEIGHT_HEADING_5,\n  h6: TYPE_LINE_HEIGHT_HEADING_6,\n  p: TYPE_LINE_HEIGHT_PARAGRAPH,\n};\n\nexport const type = {\n  fontSizes,\n  lineHeights,\n};\n\nexport default {\n  colors,\n  type,\n};\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nconst SVG_ICON_DEFAULT_FONT_SIZE = 24;\n\nSvgIcon.defaultProps = {\n  fontSize: SVG_ICON_DEFAULT_FONT_SIZE,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n","import { COLOR_WHITE, COLOR_DARK } from '@/constants';\n\n/** Determines the color of the icon depending on the background. */\nexport function iconDark(\n  isDark,\n  colorWhenBgDark = COLOR_WHITE,\n  colorWhenBgLight = COLOR_DARK,\n) {\n  return isDark ? colorWhenBgDark : colorWhenBgLight;\n}\n","export { default } from './MentorIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function MentorIcon({ dark, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, color ? colors[color] : 'currentColor'),\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox=\"0 0 21.7 19.4\" {...svgProps}>\n      <g id=\"mentor-icon\" transform=\"translate(0 0)\">\n        <path {...commonProps} id=\"path\" d=\"M10.3,13.6v3l-5,2.3\" />\n        <path\n          {...commonProps}\n          id=\"path-2\"\n          data-name=\"path\"\n          d=\"M16.1,13.6v3l5.1,2.3\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-3\"\n          data-name=\"path\"\n          d=\"M15,14.1a5.2,5.2,0,0,0,3.5-4.9V4.6A4.055,4.055,0,0,0,14.4.5H12.2A4.14,4.14,0,0,0,8,4.6V9.2a5.2,5.2,0,0,0,3.5,4.9\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-4\"\n          data-name=\"path\"\n          d=\"M4.6,11.3v2.4L.5,15.6\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-5\"\n          data-name=\"path\"\n          d=\"M6.9.5H6.1A3.372,3.372,0,0,0,2.7,3.9V7.6a4.249,4.249,0,0,0,2.8,4\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nMentorIcon.defaultProps = {\n  dark: false,\n};\n\nMentorIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n","export { default } from './BottomBarAction';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { COLOR_GRAY_BLUE, COLOR_PRIMARY } from '@/constants';\n\nconst Action = styled.div`\n  padding: 1.75em 3.5em;\n  cursor: pointer;\n  color: ${COLOR_GRAY_BLUE};\n\n  svg {\n    transition: color 0.2s ease-in-out;\n    color: ${({ selected }) => (selected ? COLOR_PRIMARY : 'inherit')};\n  }\n\n  &:hover svg {\n    color: ${COLOR_PRIMARY};\n  }\n`;\n\n/** An action item inside a bottom bar */\nexport default class BottomBarAction extends Component {\n  static propTypes = {\n    /** Value to be passed to a `BottomBar` parent's `onChange` prop  */\n    value: PropTypes.string,\n\n    /** Icon to display */\n    icon: PropTypes.node.isRequired,\n  };\n\n  render() {\n    const { icon, selected } = this.props;\n\n    return (\n      <Action selected={selected} onClick={this._handleOnClick}>\n        {icon}\n      </Action>\n    );\n  }\n\n  _handleOnClick = (event) => {\n    const { value, onChange } = this.props;\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n}\n","export { default } from './HomeIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function HomeIcon({ dark, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, color ? colors[color] : 'currentColor'),\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox=\"0 0 20.4 19.6\" {...svgProps}>\n      <g id=\"home-icon\" transform=\"translate(0 0)\">\n        <path {...commonProps} id=\"path\" d=\"M17.5,8.1h2.4L10.2.5.5,8.1h2\" />\n        <path {...commonProps} id=\"path-2\" data-name=\"path\" d=\"M17.5,7.1\" />\n        <path {...commonProps} id=\"path-3\" data-name=\"path\" d=\"M2.5,8.1\" />\n        <path\n          {...commonProps}\n          id=\"path-4\"\n          data-name=\"path\"\n          d=\"M2.5,8.1v11h6v-6h3v6h6V8.1\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nHomeIcon.defaultProps = {\n  dark: false,\n};\n\nHomeIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n","export { default } from './CommentIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function CommentIcon({ dark, color, ...svgProps }) {\n  return (\n    <SvgIcon viewBox=\"0 0 21.4 18.3\" {...svgProps}>\n      <g id=\"comment-icon\" transform=\"translate(0 0)\">\n        <path\n          id=\"path\"\n          fill=\"none\"\n          stroke={iconDark(\n            dark,\n            COLOR_WHITE,\n            color ? colors[color] : 'currentColor',\n          )}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          d=\"M10.7.5C5.1.5.5,4.3.5,9a7.82,7.82,0,0,0,2.6,5.7l-.8,3.1,4-1.1a12.307,12.307,0,0,0,4.4.8c5.6,0,10.2-3.8,10.2-8.5S16.4.5,10.7.5Z\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nCommentIcon.defaultProps = {\n  dark: false,\n};\n\nCommentIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n","export { default } from './SettingsIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function Settings({ dark, color, ...svgProps }) {\n  return (\n    <SvgIcon viewBox=\"0 0 19.875 19.98\" {...svgProps}>\n      <path\n        id=\"path\"\n        fill=\"none\"\n        stroke={iconDark(\n          dark,\n          COLOR_WHITE,\n          color ? colors[color] : 'currentColor',\n        )}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeMiterlimit={10}\n        d=\"M18.7,15.7,11.1,8.1A4.638,4.638,0,0,0,11.5,6,5.549,5.549,0,0,0,6,.5a4.618,4.618,0,0,0-2.6.7L7.3,5.1,5.1,7.3,1.2,3.4A4.618,4.618,0,0,0,.5,6,5.549,5.549,0,0,0,6,11.5a5.222,5.222,0,0,0,2.1-.4l7.6,7.6a2.175,2.175,0,0,0,3,0h0A2,2,0,0,0,18.7,15.7Z\"\n      />\n    </SvgIcon>\n  );\n}\n\nSettings.defaultProps = {\n  dark: false,\n};\n\nSettings.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n","import React, { PureComponent } from 'react';\nimport BottomBar from 'alys/BottomBar';\nimport BottomBarAction from 'alys/BottomBarAction';\nimport HomeIcon from 'alys/HomeIcon';\nimport MentorIcon from 'alys/MentorIcon';\nimport CommentIcon from 'alys/CommentIcon';\nimport SettingsIcon from 'alys/SettingsIcon';\n\n/** Basic bottom bar */\nexport default class ExampleBasic extends PureComponent {\n  state = {\n    value: 'Mentor',\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <p>\n          Selected: <strong>{this.state.value}</strong>\n        </p>\n\n        <BottomBar value={this.state.value} onChange={this._handleOnChange}>\n          <BottomBarAction value=\"Home\" icon={<HomeIcon />} />\n          <BottomBarAction value=\"Mentor\" icon={<MentorIcon />} />\n          <BottomBarAction value=\"Comment\" icon={<CommentIcon />} />\n          <BottomBarAction value=\"Settings\" icon={<SettingsIcon />} />\n        </BottomBar>\n      </React.Fragment>\n    );\n  }\n\n  _handleOnChange = (event, value) => this.setState({ value });\n}\n"],"sourceRoot":""}