{"version":3,"sources":["examples/Button/ExampleBlockIcon.jsx","components/constants.js","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/utils/icon-utils.js","components/Button/index.js","components/Button/Button.jsx","components/RegisterIcon/index.js","components/RegisterIcon/RegisterIcon.jsx"],"names":["_react","default","createElement","_Button","block","icon","RegisterIcon","text","_interopRequireDefault","__webpack_require__","_RegisterIcon","colors","primary","primaryLight","primaryFill","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","lineHeights","avatarSizes","smaller","small","type","_SvgIcon","_stringUtils","SvgIcon","_ref","fontSize","viewBox","children","svgProps","_objectWithoutProperties","Object","assign","xmlns","color","focusable","width","styleLengths","height","defaultProps","isDark","colorWhenBgDark","arguments","length","undefined","COLOR_WHITE","colorWhenBgLight","COLOR_DARK","_constants","_styledComponents","_interopRequireWildcard","disabledStyles","css","COLOR_GRAY_BLUE","buttonIcon","_ref$type","_ref$iconOnly","iconOnly","Icon","attrs","withConfig","displayName","componentId","BasicButton","styled","div","_ref2","role","_ref3","COLOR_PRIMARY","_ref4","TYPE_FONT_SIZE_HEADING_6","_ref5","disabled","IconOnlyButton","_ref6","WideButton","_ref7","GRADIENT_PRIMARY","concat","_ref8","darkMode","theme","_ref9","_ref10","Button","_ref11","basic","props","onClick","_iconUtils","commonProps","fill","stroke","iconDark","strokeLinecap","strokeMiterlimit","id","transform","strokeLinejoin","d","x2","y2","data-name"],"mappings":"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","file":"static/js/21.efeb2079.chunk.js","sourcesContent":["import React from 'react';\nimport Button from 'alys/Button';\nimport RegisterIcon from 'alys/RegisterIcon';\n\n/** Block with icon button */\nexport default function ExampleBlockIcon() {\n  return <Button block icon={RegisterIcon} text=\"Example block with Icon\" />;\n}\n","export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_PRIMARY_FILL = '#dce9ff';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_BLUE_GRAY = '#b0caff';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const COLOR_BLACK_ALPHA20 = 'rgba(0, 0, 0, 0.2)';\nexport const COLOR_SHADOW = COLOR_BLACK_ALPHA20;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const TYPE_LINE_HEIGHT_HEADING_1 = 1.5;\nexport const TYPE_LINE_HEIGHT_HEADING_2 = 1.75;\nexport const TYPE_LINE_HEIGHT_HEADING_3 = 1.625;\nexport const TYPE_LINE_HEIGHT_HEADING_4 = 1.25;\nexport const TYPE_LINE_HEIGHT_HEADING_5 = 1.125;\nexport const TYPE_LINE_HEIGHT_HEADING_6 = 1;\nexport const TYPE_LINE_HEIGHT_PARAGRAPH = 1.25;\n\nexport const AVATAR_SIZE_SMALLER = 2.5;\nexport const AVATAR_SIZE_SMALL = 3.75;\nexport const AVATAR_SIZE_DEFAULT = 6.25;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  primaryFill: COLOR_PRIMARY_FILL,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport const lineHeights = {\n  h1: TYPE_LINE_HEIGHT_HEADING_1,\n  h2: TYPE_LINE_HEIGHT_HEADING_2,\n  h3: TYPE_LINE_HEIGHT_HEADING_3,\n  h4: TYPE_LINE_HEIGHT_HEADING_4,\n  h5: TYPE_LINE_HEIGHT_HEADING_5,\n  h6: TYPE_LINE_HEIGHT_HEADING_6,\n  p: TYPE_LINE_HEIGHT_PARAGRAPH,\n};\n\nexport const avatarSizes = {\n  smaller: AVATAR_SIZE_SMALLER,\n  small: AVATAR_SIZE_SMALL,\n  default: AVATAR_SIZE_DEFAULT,\n};\n\nexport const type = {\n  fontSizes,\n  lineHeights,\n};\n\nexport default {\n  colors,\n  type,\n  avatarSizes,\n};\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nSvgIcon.defaultProps = {\n  fontSize: 24,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n","import { COLOR_WHITE, COLOR_DARK } from '@/constants';\n\n/** Determines the color of the icon depending on the background. */\nexport function iconDark(\n  isDark,\n  colorWhenBgDark = COLOR_WHITE,\n  colorWhenBgLight = COLOR_DARK,\n) {\n  return isDark ? colorWhenBgDark : colorWhenBgLight;\n}\n","export { default } from './Button';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport {\n  COLOR_PRIMARY,\n  COLOR_WHITE,\n  COLOR_GRAY_BLUE,\n  GRADIENT_PRIMARY,\n  TYPE_FONT_SIZE_HEADING_6,\n} from '@/constants';\nimport { styleLengths } from '@utils/string-utils';\n\nconst disabledStyles = css`\n  background-color: ${COLOR_GRAY_BLUE};\n\n  && {\n    cursor: default;\n  }\n`;\n\n/**\n * Returns `null` if an icon node is not provided. Otherwise, it returns a\n * styled <Icon /> component.\n */\nfunction buttonIcon({ icon, type = 'default', iconOnly = false }) {\n  if (!icon) {\n    return null;\n  }\n\n  const Icon = styled(icon).attrs(() => ({\n    dark: type !== 'link',\n  }))`\n    margin-right: ${iconOnly ? 0 : '1.125em'};\n    vertical-align: middle;\n\n    && svg {\n      font-size: 1.125em;\n    }\n  `;\n\n  return <Icon />;\n}\n\n/** Linear gradient value builder for the `background` property. */\nfunction linearGradient(colors) {\n  return `linear-gradient(to right, ${colors})`;\n}\n\nconst BasicButton = styled.div.attrs(({ text }) => ({\n  children: text,\n  role: 'button',\n}))`\n  border: 0;\n  outline: none;\n  user-select: none;\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  background: ${({ type }) =>\n    type === 'link' ? 'transparent' : COLOR_PRIMARY};\n  color: ${({ type }) => (type === 'link' ? COLOR_PRIMARY : COLOR_WHITE)};\n  text-transform: uppercase;\n  border-radius: 0.375em;\n  padding: 1em;\n  font-size: ${styleLengths(TYPE_FONT_SIZE_HEADING_6)};\n  font-weight: 500;\n  overflow: hidden;\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  ${({ disabled }) => disabled && disabledStyles}\n`;\n\nconst IconOnlyButton = styled(BasicButton).attrs(({ icon }) => ({\n  children: buttonIcon({ icon, iconOnly: true }),\n}))`\n  border-radius: 50%;\n`;\n\nconst WideButton = styled(BasicButton)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: ${({ type, disabled }) => {\n    if (disabled) {\n      return type === 'link' ? 'transparent' : COLOR_GRAY_BLUE;\n    }\n\n    return type === 'link' ? 'transparent' : linearGradient(GRADIENT_PRIMARY);\n  }};\n  color: ${({ type, disabled, theme: { darkMode } }) => {\n    if (type === 'link') {\n      if (disabled) {\n        return 'inherit';\n      }\n\n      return darkMode ? 'inherit' : COLOR_PRIMARY;\n    }\n\n    return COLOR_WHITE;\n  }};\n  border-radius: ${({ block }) => (block ? 0 : '0.375em')};\n  min-height: 4em;\n  margin: ${({ block }) => (block ? 0 : '1.25em 1.875em')};\n`;\n\n/**\n * Button signals to the user that an action can be performed by clicking or\n * taping this element.\n */\nexport default function Button({\n  basic,\n  text,\n  block,\n  type,\n  icon,\n  iconOnly,\n  ...props\n}) {\n  if (props.disabled) {\n    props.onClick = undefined;\n  }\n\n  if (iconOnly) {\n    return <IconOnlyButton icon={icon} {...props} />;\n  }\n\n  if (basic) {\n    return <BasicButton text={text} type={type} {...props} />;\n  }\n\n  return (\n    <WideButton block={block} type={type} {...props}>\n      {buttonIcon({ icon, type })} {text}\n    </WideButton>\n  );\n}\n\nButton.defaultProps = {\n  basic: false,\n  block: false,\n  color: 'default',\n  icon: null,\n  iconOnly: false,\n  type: 'default',\n  disabled: false,\n};\n\nButton.propTypes = {\n  /** Text to display on the button */\n  text: PropTypes.string,\n\n  /** Handler to call when button is clicked */\n  onClick: PropTypes.func,\n\n  /** If set to `true`, the button cannot be interacted with */\n  disabled: PropTypes.bool,\n\n  /**\n   * Button width is determined by the content. If set to `true`, the value of\n   * `icon` will be ignored.\n   */\n  basic: PropTypes.bool,\n\n  /** If set to `true`, the button's width will span it's container's width */\n  block: PropTypes.bool,\n\n  /** Button color preset */\n  color: PropTypes.oneOf(['default', 'secondary']),\n\n  /** Button type */\n  type: PropTypes.oneOf(['default', 'link']),\n\n  /** The icon to be displayed before the button text */\n  icon: PropTypes.func,\n\n  /**\n   * A button that contains only an icon. If this is set to `true` the value of\n   * `text` is ignored.\n   */\n  iconOnly: PropTypes.bool,\n};\n","export { default } from './RegisterIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function RegisterIcon({ dark, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, color ? colors[color] : 'currentColor'),\n    strokeLinecap: 'round',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox=\"0 0 19.25 19.306\" {...svgProps}>\n      <g id=\"register-icon\" transform=\"translate(0 0.105)\">\n        <path\n          {...commonProps}\n          id=\"path\"\n          strokeLinejoin=\"round\"\n          d=\"M4.3,17.7l-3.8,1,1-3.9L15.8.6a.483.483,0,0,1,.7,0l2.1,2.1a.483.483,0,0,1,0,.7Z\"\n        />\n        <line\n          {...commonProps}\n          id=\"line\"\n          x2=\"2.8\"\n          y2=\"2.8\"\n          transform=\"translate(14.7 1.7)\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-2\"\n          data-name=\"path\"\n          d=\"M1.8,9.4V1.9H9.3\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-3\"\n          data-name=\"path\"\n          d=\"M16.8,10.4v7.5H9.3\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nRegisterIcon.defaultProps = {\n  dark: false,\n};\n\nRegisterIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n"],"sourceRoot":""}