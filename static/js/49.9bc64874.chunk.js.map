{"version":3,"sources":["examples/Pill/ExampleAdd.jsx","components/constants.js","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/utils/icon-utils.js","components/NewIcon/index.js","components/NewIcon/NewIcon.jsx","components/Pill/index.js","components/Pill/Pill.jsx"],"names":["_react","default","createElement","_Pill","add","_interopRequireDefault","__webpack_require__","colors","primary","primaryLight","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","type","_SvgIcon","_stringUtils","SvgIcon","_ref","fontSize","viewBox","children","svgProps","_objectWithoutProperties","Object","assign","xmlns","color","focusable","width","styleLengths","height","defaultProps","isDark","colorWhenBgDark","arguments","length","undefined","COLOR_WHITE","colorWhenBgLight","COLOR_DARK","_constants","_NewIcon","_iconUtils","NewIcon","commonProps","fill","stroke","iconDark","strokeLinecap","strokeMiterlimit","id","transform","x1","data-name","y1","_styledComponents","Wrapper","styled","div","withConfig","displayName","componentId","TYPE_FONT_SIZE_HEADING_6","AddIcon","attrs","concat","Pill","_ref2","text"],"mappings":"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","file":"static/js/49.9bc64874.chunk.js","sourcesContent":["import React from 'react';\nimport Pill from 'alys/Pill';\n\n/** Add pill */\nexport default function ExampleAdd() {\n  return <Pill add />;\n}\n","export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport default {\n  colors,\n  type: {\n    fontSizes,\n  },\n};\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nconst SVG_ICON_DEFAULT_FONT_SIZE = 24;\n\nSvgIcon.defaultProps = {\n  fontSize: SVG_ICON_DEFAULT_FONT_SIZE,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n","import { COLOR_WHITE, COLOR_DARK } from '@/constants';\n\n/** Determines the color of the icon depending on the background. */\nexport function iconDark(\n  isDark,\n  colorWhenBgDark = COLOR_WHITE,\n  colorWhenBgLight = COLOR_DARK,\n) {\n  return isDark ? colorWhenBgDark : colorWhenBgLight;\n}\n","export { default } from './NewIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function NewIcon({ dark, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, colors[color]),\n    strokeLinecap: 'round',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox=\"0 0 19 19\" {...svgProps}>\n      <g id=\"new-icon\" transform=\"translate(0 0)\">\n        <line\n          {...commonProps}\n          id=\"line\"\n          x1=\"18\"\n          transform=\"translate(0.5 9.5)\"\n        />\n        <line\n          {...commonProps}\n          id=\"line-2\"\n          data-name=\"line\"\n          y1=\"18\"\n          transform=\"translate(9.5 0.5)\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nNewIcon.defaultProps = {\n  dark: false,\n  color: 'dark',\n};\n\nNewIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n","export { default } from './Pill';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { TYPE_FONT_SIZE_HEADING_6, COLOR_WHITE, colors } from '@/constants';\nimport NewIcon from '@/NewIcon';\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  font-size: ${TYPE_FONT_SIZE_HEADING_6}px;\n  font-weight: 500;\n  padding: 0.5em 0.75em;\n  border-radius: 0.375em;\n  background-color: ${({ color }) => colors[color]};\n  color: ${COLOR_WHITE};\n  text-transform: uppercase;\n`;\n\nconst AddIcon = styled(NewIcon).attrs(() => ({\n  fontSize: `${TYPE_FONT_SIZE_HEADING_6}px`,\n}))`\n  && line {\n    stroke: ${COLOR_WHITE};\n  }\n`;\n\n/** Text inside a small container */\nexport default function Pill({ text, color, add }) {\n  return <Wrapper color={color}>{add ? <AddIcon /> : text}</Wrapper>;\n}\n\nPill.defaultProps = {\n  color: 'primary',\n  add: false,\n};\n\nPill.propTypes = {\n  /** Text to display */\n  text: PropTypes.string.isRequired,\n\n  /** Background color of text wrapper */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /** If set to `true`, a `NewIcon` will be shown and text is ignored */\n  add: PropTypes.bool,\n};\n"],"sourceRoot":""}