{"version":3,"sources":["components/constants.js","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/utils/icon-utils.js","components/MentorIcon/index.js","components/MentorIcon/MentorIcon.jsx","components/Button/index.js","components/Button/Button.jsx","examples/Button/ExampleDefaultIcon.jsx"],"names":["colors","primary","primaryLight","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","type","_SvgIcon","__webpack_require__","_react","_stringUtils","SvgIcon","_ref","fontSize","viewBox","children","svgProps","_objectWithoutProperties","default","createElement","Object","assign","xmlns","color","focusable","width","styleLengths","height","defaultProps","isDark","colorWhenBgDark","arguments","length","undefined","COLOR_WHITE","colorWhenBgLight","COLOR_DARK","_constants","_MentorIcon","_interopRequireDefault","_iconUtils","MentorIcon","commonProps","fill","stroke","iconDark","strokeLinecap","strokeLinejoin","strokeMiterlimit","id","transform","d","data-name","_Button","_styledComponents","BasicButton","styled","div","attrs","text","withConfig","displayName","componentId","COLOR_PRIMARY","TYPE_FONT_SIZE_HEADING_6","IconOnlyButton","OtherButton","_ref2","GRADIENT_PRIMARY","concat","_ref3","_ref4","block","_ref5","Button","_ref6","basic","icon","iconOnly","ButtonIcon","onClick"],"mappings":"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","file":"static/js/14.c62eeb9e.chunk.js","sourcesContent":["export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport default {\n  colors,\n  type: {\n    fontSizes,\n  },\n};\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nconst SVG_ICON_DEFAULT_FONT_SIZE = 24;\n\nSvgIcon.defaultProps = {\n  fontSize: SVG_ICON_DEFAULT_FONT_SIZE,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n","import { COLOR_WHITE, COLOR_DARK } from '@/constants';\n\n/** Determines the color of the icon depending on the background. */\nexport function iconDark(\n  isDark,\n  colorWhenBgDark = COLOR_WHITE,\n  colorWhenBgLight = COLOR_DARK,\n) {\n  return isDark ? colorWhenBgDark : colorWhenBgLight;\n}\n","export { default } from './MentorIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function MentorIcon({ dark, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, colors[color]),\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox=\"0 0 21.7 19.4\" {...svgProps}>\n      <g id=\"mentor-icon\" transform=\"translate(0 0)\">\n        <path {...commonProps} id=\"path\" d=\"M10.3,13.6v3l-5,2.3\" />\n        <path\n          {...commonProps}\n          id=\"path-2\"\n          data-name=\"path\"\n          d=\"M16.1,13.6v3l5.1,2.3\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-3\"\n          data-name=\"path\"\n          d=\"M15,14.1a5.2,5.2,0,0,0,3.5-4.9V4.6A4.055,4.055,0,0,0,14.4.5H12.2A4.14,4.14,0,0,0,8,4.6V9.2a5.2,5.2,0,0,0,3.5,4.9\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-4\"\n          data-name=\"path\"\n          d=\"M4.6,11.3v2.4L.5,15.6\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-5\"\n          data-name=\"path\"\n          d=\"M6.9.5H6.1A3.372,3.372,0,0,0,2.7,3.9V7.6a4.249,4.249,0,0,0,2.8,4\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nMentorIcon.defaultProps = {\n  dark: false,\n  color: 'dark',\n};\n\nMentorIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n","export { default } from './Button';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  COLOR_PRIMARY,\n  COLOR_WHITE,\n  GRADIENT_PRIMARY,\n  TYPE_FONT_SIZE_HEADING_6,\n} from '@/constants';\nimport { styleLengths } from '../utils/string-utils';\n\nconst linearGradient = (colors) => `linear-gradient(to right, ${colors})`;\n\n// @TODO+Button: Styles for Button states (hover, clicked, etc.)\nconst BasicButton = styled.div.attrs(({ text }) => ({\n  children: text,\n}))`\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  background: ${COLOR_PRIMARY};\n  color: ${COLOR_WHITE};\n  text-transform: uppercase;\n  border-radius: 0.375em;\n  padding: 1em;\n  font-size: ${styleLengths(TYPE_FONT_SIZE_HEADING_6)};\n  font-weight: 500;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst IconOnlyButton = styled(BasicButton)`\n  border-radius: 50%;\n`;\n\nconst OtherButton = styled(BasicButton)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: ${({ type }) =>\n    type === 'link' ? 'transparent' : linearGradient(GRADIENT_PRIMARY)};\n  color: ${({ type }) => (type === 'link' ? COLOR_PRIMARY : COLOR_WHITE)};\n  border-radius: ${({ block }) => (block ? 0 : '0.375em')};\n  min-height: 1.75em;\n  margin: ${({ block }) => (block ? 0 : '1.25em 1.875em')};\n`;\n\n/**\n * Button signals to the user that an action can be performed by clicking or\n * taping this element.\n */\nexport default function Button({ basic, text, block, type, icon, iconOnly }) {\n  // @WARN+Button: This components gets created every render!\n  let ButtonIcon = () => null;\n\n  if (icon) {\n    ButtonIcon = styled(icon).attrs(() => ({\n      dark: type !== 'link',\n      color: 'primary',\n    }))`\n      margin-right: ${iconOnly ? 0 : '1.125em'};\n      vertical-align: middle;\n\n      && svg {\n        font-size: 1.125em;\n      }\n    `;\n  }\n\n  return iconOnly ? (\n    <IconOnlyButton>\n      <ButtonIcon />\n    </IconOnlyButton>\n  ) : basic ? (\n    <BasicButton text={text} />\n  ) : (\n    <OtherButton block={block} type={type}>\n      <ButtonIcon /> {text}\n    </OtherButton>\n  );\n}\n\nButton.defaultProps = {\n  basic: false,\n  block: false,\n  color: 'default',\n  icon: null,\n  iconOnly: false,\n  type: 'default',\n};\n\nButton.propTypes = {\n  /** Handler to call when button is clicked */\n  onClick: PropTypes.func.isRequired,\n\n  /** Text to display on the button */\n  text: PropTypes.string,\n\n  /**\n   * Button width is determined by the content. If set to `true`, the value of\n   * `icon` will be ignored.\n   */\n  basic: PropTypes.bool,\n\n  /** Button width should span it's container's width */\n  block: PropTypes.bool,\n\n  /** Button color */\n  color: PropTypes.oneOf(['default', 'secondary']),\n\n  /** Button type */\n  type: PropTypes.oneOf(['default', 'link']),\n\n  /** The icon before the button text */\n  icon: PropTypes.func,\n\n  /**\n   * Button with only an icon. If this is set to `true` the value of `text` is\n   * ignored.\n   */\n  iconOnly: PropTypes.bool,\n};\n","import React from 'react';\nimport Button from 'alys/Button';\nimport MentorIcon from 'alys/MentorIcon';\n\n/** Default button with icon */\nexport default function ExampleDefaultIcon() {\n  return (\n    <Button\n      text=\"Example default with icon\"\n      icon={MentorIcon}\n      onClick={() => {}}\n    />\n  );\n}\n"],"sourceRoot":""}