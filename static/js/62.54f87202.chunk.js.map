{"version":3,"sources":["examples/Pill/ExampleBasic.jsx","components/constants.js","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/utils/icon-utils.js","components/NewIcon/index.js","components/NewIcon/NewIcon.jsx","components/Pill/index.js","components/Pill/Pill.jsx"],"names":["_react","default","createElement","_Pill","text","_interopRequireDefault","__webpack_require__","colors","primary","primaryLight","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","lineHeights","avatarSizes","smaller","small","type","_SvgIcon","_stringUtils","SvgIcon","_ref","fontSize","viewBox","children","svgProps","_objectWithoutProperties","Object","assign","xmlns","color","focusable","width","styleLengths","height","defaultProps","isDark","colorWhenBgDark","arguments","length","undefined","COLOR_WHITE","colorWhenBgLight","COLOR_DARK","_constants","_NewIcon","_iconUtils","NewIcon","commonProps","fill","stroke","iconDark","strokeLinecap","strokeMiterlimit","id","transform","x1","data-name","y1","_styledComponents","Wrapper","styled","div","withConfig","displayName","componentId","TYPE_FONT_SIZE_HEADING_6","add","_ref2","AddIcon","attrs","concat","Pill","_ref3"],"mappings":"sJAIe,WACb,OAAOA,EAAAC,QAAAC,cAACC,EAAAF,QAAD,CAAMG,KAAK,WALpB,IAAAJ,EAAAK,EAAAC,EAAA,IACAH,EAAAE,EAAAC,EAAA,83BCD6B,gCACM,wBACR,gCACQ,qFAET,4BACK,6BACC,wBACL,gCACQ,sFAEH,CAAC,UAAW,sCAEJ,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,gCAEE,iCACA,kCACA,mCACA,kCACA,mCACA,+BACA,2BAEP,wBACF,2BACE,KAE5B,IAAMC,EAAS,CACpBC,QAlC2B,UAmC3BC,aAlCiC,UAmCjCC,MAlCyB,UAmCzBC,UAlCiC,2BAmCjCC,KAjCwB,UAkCxBC,SAjC6B,UAkC7BC,UAjC8B,UAkC9BC,MAjCyB,UAkCzBC,KAjCiC,uCAoC5B,IAAMC,EAAY,CACvBC,GAjCsC,GAkCtCC,GAjCsC,GAkCtCC,GAjCsC,GAkCtCC,GAjCsC,GAkCtCC,GAjCsC,GAkCtCC,GAjCsC,GAkCtCC,EAjCsC,kBAoCjC,IAAMC,EAAc,CACzBP,GAnCwC,IAoCxCC,GAnCwC,KAoCxCC,GAnCwC,MAoCxCC,GAnCwC,KAoCxCC,GAnCwC,MAoCxCC,GAnCwC,EAoCxCC,EAnCwC,sBAsCnC,IAAME,EAAc,CACzBC,QArCiC,IAsCjCC,MArC+B,KAsC/B3B,QArCiC,sBAwC5B,IAAM4B,EAAO,CAClBZ,YACAQ,8BAGa,CACblB,SACAsB,OACAH,iMC/EF,MAAAI,KAAAxB,EAAA,+HCAA,MAAAN,KAAAM,EAAA,gCAGAyB,EAAAzB,EAAA,wXAGe,SAAS0B,EAATC,GAA+D,IAA5CC,EAA4CD,EAA5CC,SAAUC,EAAkCF,EAAlCE,QAASC,EAAyBH,EAAzBG,SAAaC,EAAYC,EAAAL,EAAA,mCAC5E,OACEjC,EAAAC,QAAAC,cAAA,MAAAqC,OAAAC,OAAA,CACEC,MAAM,6BACNC,MAAM,UACNP,QAASA,EACTQ,WAAW,EACXC,OAAO,EAAAb,EAAAc,cAAaX,GACpBY,QAAQ,EAAAf,EAAAc,cAAaX,IACjBG,GAEHD,GAKPJ,EAAQe,aAAe,CACrBb,SAAU,GACVC,QAAS,0GCrBJ,SACLa,GAGA,IAFAC,EAEAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFkBG,cAClBC,EACAJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADmBK,aAEnB,OAAOP,EAASC,EAAkBK,GARpC,IAAAE,EAAAlD,EAAA,0KCAA,MAAAmD,KAAAnD,EAAA,+HCAA,IAAAN,EAAAK,EAAAC,EAAA,IAGAkD,EAAAlD,EAAA,IACAoD,EAAApD,EAAA,IACAwB,EAAAzB,EAAAC,EAAA,4aAGe,SAASqD,EAAT1B,GAA+C,IAA5BrB,EAA4BqB,EAA5BrB,KAAM8B,EAAsBT,EAAtBS,MAAUL,EAAYC,EAAAL,EAAA,kBACtD2B,EAAc,CAClBC,KAAM,OACNC,QAAQ,EAAAJ,EAAAK,UAASnD,EAAMyC,cAAaX,EAAQnC,SAAOmC,GAAS,gBAC5DsB,cAAe,QACfC,iBAAkB,IAGpB,OACEjE,EAAAC,QAAAC,cAAC4B,EAAA7B,QAADsC,OAAAC,OAAA,CAASL,QAAQ,aAAgBE,GAC/BrC,EAAAC,QAAAC,cAAA,KAAGgE,GAAG,WAAWC,UAAU,kBACzBnE,EAAAC,QAAAC,cAAA,OAAAqC,OAAAC,OAAA,GACMoB,EADN,CAEEM,GAAG,OACHE,GAAG,KACHD,UAAU,wBAEZnE,EAAAC,QAAAC,cAAA,OAAAqC,OAAAC,OAAA,GACMoB,EADN,CAEEM,GAAG,SACHG,YAAU,OACVC,GAAG,KACHH,UAAU,0BAOpBR,EAAQZ,aAAe,CACrBnC,MAAM,yKCtCR,MAAAT,KAAAG,EAAA,+HCAA,IAAAN,EAAAK,EAAAC,EAAA,IAEAiE,EAAAlE,EAAAC,EAAA,IAEAkD,EAAAlD,EAAA,IACAmD,EAAApD,EAAAC,EAAA,wDAEA,IAAMkE,EAAUC,UAAOC,IAAVC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGJ,CAAH,oJAEEK,2BAEF,SAAA7C,GAAA,OAAAA,EAAG8C,IAAiB,QAAU,gBAErB,SAAAC,GAAA,IAAGtC,EAAHsC,EAAGtC,MAAH,OAAenC,SAAOmC,IACjCW,eAIL4B,GAAU,EAAAV,EAAAtE,SAAO0D,WAASuB,MAAM,iBAAO,CAC3ChD,SAAQ,GAAAiD,OAAKL,2BAAL,SADGH,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAG,CAAH,uCAMCxB,eAKC,SAAS+B,EAATC,GAAoC,IAApBjF,EAAoBiF,EAApBjF,KAAMsC,EAAc2C,EAAd3C,MAAOqC,EAAOM,EAAPN,IAC1C,OACE/E,EAAAC,QAAAC,cAACsE,EAAD,CAAS9B,MAAOA,EAAOqC,IAAKA,GACzBA,EAAM/E,EAAAC,QAAAC,cAAC+E,EAAD,MAAc7E,GAK3BgF,EAAKrC,aAAe,CAClBL,MAAO,UACPqC,KAAK","file":"static/js/62.54f87202.chunk.js","sourcesContent":["import React from 'react';\nimport Pill from 'alys/Pill';\n\n/** Basic pill */\nexport default function ExampleBasic() {\n  return <Pill text=\"basic\" />;\n}\n","export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const TYPE_LINE_HEIGHT_HEADING_1 = 1.5;\nexport const TYPE_LINE_HEIGHT_HEADING_2 = 1.75;\nexport const TYPE_LINE_HEIGHT_HEADING_3 = 1.625;\nexport const TYPE_LINE_HEIGHT_HEADING_4 = 1.25;\nexport const TYPE_LINE_HEIGHT_HEADING_5 = 1.125;\nexport const TYPE_LINE_HEIGHT_HEADING_6 = 1;\nexport const TYPE_LINE_HEIGHT_PARAGRAPH = 1.25;\n\nexport const AVATAR_SIZE_SMALLER = 2.5;\nexport const AVATAR_SIZE_SMALL = 3.75;\nexport const AVATAR_SIZE_DEFAULT = 6.25;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport const lineHeights = {\n  h1: TYPE_LINE_HEIGHT_HEADING_1,\n  h2: TYPE_LINE_HEIGHT_HEADING_2,\n  h3: TYPE_LINE_HEIGHT_HEADING_3,\n  h4: TYPE_LINE_HEIGHT_HEADING_4,\n  h5: TYPE_LINE_HEIGHT_HEADING_5,\n  h6: TYPE_LINE_HEIGHT_HEADING_6,\n  p: TYPE_LINE_HEIGHT_PARAGRAPH,\n};\n\nexport const avatarSizes = {\n  smaller: AVATAR_SIZE_SMALLER,\n  small: AVATAR_SIZE_SMALL,\n  default: AVATAR_SIZE_DEFAULT,\n};\n\nexport const type = {\n  fontSizes,\n  lineHeights,\n};\n\nexport default {\n  colors,\n  type,\n  avatarSizes,\n};\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nSvgIcon.defaultProps = {\n  fontSize: 24,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Defines the position and dimension for the content of the <svg> element */\n  viewBox: PropTypes.string,\n};\n","import { COLOR_WHITE, COLOR_DARK } from '@/constants';\n\n/** Determines the color of the icon depending on the background. */\nexport function iconDark(\n  isDark,\n  colorWhenBgDark = COLOR_WHITE,\n  colorWhenBgLight = COLOR_DARK,\n) {\n  return isDark ? colorWhenBgDark : colorWhenBgLight;\n}\n","export { default } from './NewIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors, COLOR_WHITE } from '@/constants';\nimport { iconDark } from '@utils/icon-utils';\nimport SvgIcon from '@/SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function NewIcon({ dark, color, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: iconDark(dark, COLOR_WHITE, color ? colors[color] : 'currentColor'),\n    strokeLinecap: 'round',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox=\"0 0 19 19\" {...svgProps}>\n      <g id=\"new-icon\" transform=\"translate(0 0)\">\n        <line\n          {...commonProps}\n          id=\"line\"\n          x1=\"18\"\n          transform=\"translate(0.5 9.5)\"\n        />\n        <line\n          {...commonProps}\n          id=\"line-2\"\n          data-name=\"line\"\n          y1=\"18\"\n          transform=\"translate(9.5 0.5)\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nNewIcon.defaultProps = {\n  dark: false,\n};\n\nNewIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n\n  /** Main color of icon when background is light. */\n  color: PropTypes.oneOf(['primary', 'dark']),\n};\n","export { default } from './Pill';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { TYPE_FONT_SIZE_HEADING_6, COLOR_WHITE, colors } from '@/constants';\nimport NewIcon from '@/NewIcon';\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  font-size: ${TYPE_FONT_SIZE_HEADING_6}px;\n  font-weight: 500;\n  padding: ${({ add }) => (add ? '0.5em' : '0.5em 0.75em')};\n  border-radius: 0.375em;\n  background-color: ${({ color }) => colors[color]};\n  color: ${COLOR_WHITE};\n  text-transform: uppercase;\n`;\n\nconst AddIcon = styled(NewIcon).attrs(() => ({\n  fontSize: `${TYPE_FONT_SIZE_HEADING_6}px`,\n}))`\n  display: block;\n\n  && line {\n    stroke: ${COLOR_WHITE};\n  }\n`;\n\n/** Text inside a small container */\nexport default function Pill({ text, color, add }) {\n  return (\n    <Wrapper color={color} add={add}>\n      {add ? <AddIcon /> : text}\n    </Wrapper>\n  );\n}\n\nPill.defaultProps = {\n  color: 'primary',\n  add: false,\n};\n\nPill.propTypes = {\n  /** Text to display */\n  text: PropTypes.string,\n\n  /** Background color of text wrapper */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /** If set to `true`, a `NewIcon` will be shown and `text` is ignored */\n  add: PropTypes.bool,\n};\n"],"sourceRoot":""}