{"version":3,"sources":["components/constants.js","components/Button/index.js","components/Button/Button.jsx","examples/Button/ExampleBlock.jsx"],"names":["colors","primary","primaryLight","error","secondary","dark","grayBlue","whiteBlue","white","gray","fontSizes","h1","h2","h3","h4","h5","h6","p","lineHeights","avatarSizes","smaller","small","default","type","_Button","__webpack_require__","_react","_styledComponents","_interopRequireWildcard","_constants","_stringUtils","disabledStyles","css","COLOR_GRAY_BLUE","buttonIcon","_ref","icon","_ref$type","_ref$iconOnly","iconOnly","Icon","attrs","withConfig","displayName","componentId","createElement","BasicButton","styled","div","_ref2","children","text","role","_ref3","COLOR_PRIMARY","_ref4","COLOR_WHITE","styleLengths","TYPE_FONT_SIZE_HEADING_6","_ref5","disabled","IconOnlyButton","_ref6","WideButton","_ref7","GRADIENT_PRIMARY","concat","_ref8","darkMode","theme","_ref9","block","_ref10","Button","_ref11","basic","onClick","common","Object","assign","defaultProps","color","_interopRequireDefault"],"mappings":"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","file":"static/js/16.150c9915.chunk.js","sourcesContent":["export const COLOR_PRIMARY = '#5887F9';\nexport const COLOR_PRIMARY_LIGHT = '#60C3FF';\nexport const COLOR_ERROR = '#FC5F6B';\nexport const COLOR_WHITE_ALPHA30 = 'rgba(255, 255, 255, 0.3)';\nexport const COLOR_SECONDARY = COLOR_WHITE_ALPHA30;\nexport const COLOR_DARK = '#4C5264';\nexport const COLOR_GRAY_BLUE = '#BCC5D3';\nexport const COLOR_WHITE_BLUE = '#E2E8ED';\nexport const COLOR_WHITE = '#ffffff';\nexport const COLOR_WHITE_ALPHA60 = 'rgba(255, 255, 255, 0.6)';\nexport const COLOR_GRAY = COLOR_WHITE_ALPHA60;\nexport const GRADIENT_PRIMARY = ['#5574f7', '#60C3FF'];\n\nexport const TYPE_FONT_SIZE_HEADING_1 = 36;\nexport const TYPE_FONT_SIZE_HEADING_2 = 24;\nexport const TYPE_FONT_SIZE_HEADING_3 = 20;\nexport const TYPE_FONT_SIZE_HEADING_4 = 16;\nexport const TYPE_FONT_SIZE_HEADING_5 = 14;\nexport const TYPE_FONT_SIZE_HEADING_6 = 12;\nexport const TYPE_FONT_SIZE_PARAGRAPH = 14;\n\nexport const TYPE_LINE_HEIGHT_HEADING_1 = 1.5;\nexport const TYPE_LINE_HEIGHT_HEADING_2 = 1.75;\nexport const TYPE_LINE_HEIGHT_HEADING_3 = 1.625;\nexport const TYPE_LINE_HEIGHT_HEADING_4 = 1.25;\nexport const TYPE_LINE_HEIGHT_HEADING_5 = 1.125;\nexport const TYPE_LINE_HEIGHT_HEADING_6 = 1;\nexport const TYPE_LINE_HEIGHT_PARAGRAPH = 1.25;\n\nexport const AVATAR_SIZE_SMALLER = 2.5;\nexport const AVATAR_SIZE_SMALL = 3.75;\nexport const AVATAR_SIZE_DEFAULT = 6.25;\n\nexport const colors = {\n  primary: COLOR_PRIMARY,\n  primaryLight: COLOR_PRIMARY_LIGHT,\n  error: COLOR_ERROR,\n  secondary: COLOR_SECONDARY,\n  dark: COLOR_DARK,\n  grayBlue: COLOR_GRAY_BLUE,\n  whiteBlue: COLOR_WHITE_BLUE,\n  white: COLOR_WHITE,\n  gray: COLOR_GRAY,\n};\n\nexport const fontSizes = {\n  h1: TYPE_FONT_SIZE_HEADING_1,\n  h2: TYPE_FONT_SIZE_HEADING_2,\n  h3: TYPE_FONT_SIZE_HEADING_3,\n  h4: TYPE_FONT_SIZE_HEADING_4,\n  h5: TYPE_FONT_SIZE_HEADING_5,\n  h6: TYPE_FONT_SIZE_HEADING_6,\n  p: TYPE_FONT_SIZE_PARAGRAPH,\n};\n\nexport const lineHeights = {\n  h1: TYPE_LINE_HEIGHT_HEADING_1,\n  h2: TYPE_LINE_HEIGHT_HEADING_2,\n  h3: TYPE_LINE_HEIGHT_HEADING_3,\n  h4: TYPE_LINE_HEIGHT_HEADING_4,\n  h5: TYPE_LINE_HEIGHT_HEADING_5,\n  h6: TYPE_LINE_HEIGHT_HEADING_6,\n  p: TYPE_LINE_HEIGHT_PARAGRAPH,\n};\n\nexport const avatarSizes = {\n  smaller: AVATAR_SIZE_SMALLER,\n  small: AVATAR_SIZE_SMALL,\n  default: AVATAR_SIZE_DEFAULT,\n};\n\nexport const type = {\n  fontSizes,\n  lineHeights,\n};\n\nexport default {\n  colors,\n  type,\n  avatarSizes,\n};\n","export { default } from './Button';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport {\n  COLOR_PRIMARY,\n  COLOR_WHITE,\n  COLOR_GRAY_BLUE,\n  GRADIENT_PRIMARY,\n  TYPE_FONT_SIZE_HEADING_6,\n} from '@/constants';\nimport { styleLengths } from '@utils/string-utils';\n\nconst disabledStyles = css`\n  background-color: ${COLOR_GRAY_BLUE};\n\n  && {\n    cursor: default;\n  }\n`;\n\n/**\n * Returns `null` if an icon node is not provided. Otherwise, it returns a\n * styled <Icon /> component.\n */\nfunction buttonIcon({ icon, type = 'default', iconOnly = false }) {\n  if (!icon) {\n    return null;\n  }\n\n  const Icon = styled(icon).attrs(() => ({\n    dark: type !== 'link',\n  }))`\n    margin-right: ${iconOnly ? 0 : '1.125em'};\n    vertical-align: middle;\n\n    && svg {\n      font-size: 1.125em;\n    }\n  `;\n\n  return <Icon />;\n}\n\n/** Linear gradient value builder for the `background` property. */\nfunction linearGradient(colors) {\n  return `linear-gradient(to right, ${colors})`;\n}\n\nconst BasicButton = styled.div.attrs(({ text }) => ({\n  children: text,\n  role: 'button',\n}))`\n  box-sizing: border-box;\n  border: 0;\n  outline: none;\n  user-select: none;\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  background: ${({ type }) =>\n    type === 'link' ? 'transparent' : COLOR_PRIMARY};\n  color: ${({ type }) => (type === 'link' ? COLOR_PRIMARY : COLOR_WHITE)};\n  text-transform: uppercase;\n  border-radius: 0.375em;\n  padding: 1em;\n  font-size: ${styleLengths(TYPE_FONT_SIZE_HEADING_6)};\n  font-weight: 500;\n  overflow: hidden;\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  ${({ disabled }) => disabled && disabledStyles}\n`;\n\nconst IconOnlyButton = styled(BasicButton).attrs(({ icon }) => ({\n  children: buttonIcon({ icon, iconOnly: true }),\n}))`\n  border-radius: 50%;\n`;\n\nconst WideButton = styled(BasicButton)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: ${({ type, disabled }) => {\n    if (disabled) {\n      return type === 'link' ? 'transparent' : COLOR_GRAY_BLUE;\n    }\n\n    return type === 'link' ? 'transparent' : linearGradient(GRADIENT_PRIMARY);\n  }};\n  color: ${({ type, disabled, theme: { darkMode } }) => {\n    if (type === 'link') {\n      if (disabled) {\n        return 'inherit';\n      }\n\n      return darkMode ? 'inherit' : COLOR_PRIMARY;\n    }\n\n    return COLOR_WHITE;\n  }};\n  border-radius: ${({ block }) => (block ? 0 : '0.375em')};\n  min-height: 4em;\n  margin: ${({ block }) => (block ? 0 : '1.25em 1.875em')};\n`;\n\n/**\n * Button signals to the user that an action can be performed by clicking or\n * taping this element.\n */\nexport default function Button({\n  basic,\n  text,\n  block,\n  type,\n  icon,\n  iconOnly,\n  disabled,\n  onClick,\n}) {\n  const common = { disabled };\n\n  if (!disabled) {\n    common.onClick = onClick;\n  }\n\n  if (iconOnly) {\n    return <IconOnlyButton icon={icon} {...common} />;\n  }\n\n  if (basic) {\n    return <BasicButton text={text} type={type} {...common} />;\n  }\n\n  return (\n    <WideButton block={block} type={type} {...common}>\n      {buttonIcon({ icon, type })} {text}\n    </WideButton>\n  );\n}\n\nButton.defaultProps = {\n  basic: false,\n  block: false,\n  color: 'default',\n  icon: null,\n  iconOnly: false,\n  type: 'default',\n  disabled: false,\n};\n\nButton.propTypes = {\n  /** Text to display on the button */\n  text: PropTypes.string,\n\n  /** Handler to call when button is clicked */\n  onClick: PropTypes.func,\n\n  /** If set to `true`, the button cannot be interacted with */\n  disabled: PropTypes.bool,\n\n  /**\n   * Button width is determined by the content. If set to `true`, the value of\n   * `icon` will be ignored.\n   */\n  basic: PropTypes.bool,\n\n  /** If set to `true`, the button's width will span it's container's width */\n  block: PropTypes.bool,\n\n  /** Button color preset */\n  color: PropTypes.oneOf(['default', 'secondary']),\n\n  /** Button type */\n  type: PropTypes.oneOf(['default', 'link']),\n\n  /** The icon to be displayed before the button text */\n  icon: PropTypes.func,\n\n  /**\n   * A button that contains only an icon. If this is set to `true` the value of\n   * `text` is ignored.\n   */\n  iconOnly: PropTypes.bool,\n};\n","import React from 'react';\nimport Button from 'alys/Button';\n\n/** Block button */\nexport default function ExampleBlock() {\n  return <Button block text=\"Example block\" />;\n}\n"],"sourceRoot":""}