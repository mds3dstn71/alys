{"version":3,"sources":["examples/Avatar/ExampleDefaultSmaller.jsx","components/SvgIcon/index.js","components/SvgIcon/SvgIcon.jsx","components/MentorIcon/index.js","components/MentorIcon/MentorIcon.jsx","components/Avatar/index.js","components/Avatar/Avatar.jsx"],"names":["_react","default","createElement","_Avatar","size","_interopRequireDefault","__webpack_require__","_SvgIcon","_stringUtils","SvgIcon","_ref","fontSize","viewBox","children","svgProps","_objectWithoutProperties","Object","assign","xmlns","color","focusable","width","styleLengths","height","defaultProps","_MentorIcon","MentorIcon","dark","commonProps","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","id","transform","d","data-name","_styledComponents","_interopRequireWildcard","getSize","theme","calcSize","percent","_ref2","sizes","smaller","small","Wrapper","styled","div","withConfig","displayName","componentId","_ref3","Img","img","_ref4","_ref4$theme","round","concat","_ref5","_ref5$theme","outlined","DefaultWrapper","StyledMentorIcon","Avatar","_ref6","src","alt","ThemeProvider"],"mappings":"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","file":"static/js/4.8fdfddb5.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from 'alys/Avatar';\n\n/** Smaller size avatar with default image */\nexport default function ExampleDefaultSmaller() {\n  return <Avatar size=\"smaller\" />;\n}\n","export { default } from './SvgIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { styleLengths } from '@utils/string-utils';\n\n/** Renders SVG paths. */\nexport default function SvgIcon({ fontSize, viewBox, children, ...svgProps }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      viewBox={viewBox}\n      focusable={false}\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n}\n\nconst DEFAULT_FONT_SIZE = 24;\n\nSvgIcon.defaultProps = {\n  fontSize: DEFAULT_FONT_SIZE,\n  viewBox: '0 0 24 24',\n};\n\nSvgIcon.propTypes = {\n  /** SVG paths to render */\n  children: PropTypes.node.isRequired,\n\n  /** Size of the icon */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  viewBox: PropTypes.string,\n};\n","export { default } from './MentorIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SvgIcon from '../SvgIcon';\n\n/** See <SvgIcon /> for more prop descriptions. */\nexport default function MentorIcon({ dark, ...svgProps }) {\n  const commonProps = {\n    fill: 'none',\n    stroke: dark ? '#fff' : '#4C5264',\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 10,\n  };\n\n  return (\n    <SvgIcon viewBox=\"0 0 21.7 19.4\" {...svgProps}>\n      <g id=\"mentor-icon\" transform=\"translate(0 0)\">\n        <path {...commonProps} id=\"path\" d=\"M10.3,13.6v3l-5,2.3\" />\n        <path\n          {...commonProps}\n          id=\"path-2\"\n          data-name=\"path\"\n          d=\"M16.1,13.6v3l5.1,2.3\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-3\"\n          data-name=\"path\"\n          d=\"M15,14.1a5.2,5.2,0,0,0,3.5-4.9V4.6A4.055,4.055,0,0,0,14.4.5H12.2A4.14,4.14,0,0,0,8,4.6V9.2a5.2,5.2,0,0,0,3.5,4.9\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-4\"\n          data-name=\"path\"\n          d=\"M4.6,11.3v2.4L.5,15.6\"\n        />\n        <path\n          {...commonProps}\n          id=\"path-5\"\n          data-name=\"path\"\n          d=\"M6.9.5H6.1A3.372,3.372,0,0,0,2.7,3.9V7.6a4.249,4.249,0,0,0,2.8,4\"\n        />\n      </g>\n    </SvgIcon>\n  );\n}\n\nMentorIcon.defaultProps = { dark: false };\n\nMentorIcon.propTypes = {\n  /** Set to `true` to make icon viewable in dark backgrounds */\n  dark: PropTypes.bool,\n};\n","export { default } from './Avatar';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport MentorIcon from '@/MentorIcon';\n\nconst getSize = ({ theme: { size } }) => size;\nconst calcSize = (percent) => ({ theme: { size } }) => size + size * percent;\nconst sizes = {\n  smaller: 2.5,\n  small: 3.75,\n  default: 6.25,\n};\n\nconst Wrapper = styled.div`\n  background-color: white;\n  width: ${calcSize(0.2)}em;\n  height: ${calcSize(0.2)}em;\n  border-radius: ${({ theme: { size } }) => size * 0.1}em;\n`;\n\nconst Img = styled.img`\n  height: ${getSize}em;\n  width: ${getSize}em;\n  border-radius: ${({ theme: { size, round } }) =>\n    round ? '50%' : `${size * 0.1}em`};\n  margin: ${({ theme: { size, outlined, round } }) =>\n    outlined && !round ? size * 0.1 : 0}em;\n`;\n\nconst DefaultWrapper = styled(Wrapper)`\n  background-color: #e2e8ed;\n`;\n\nconst StyledMentorIcon = styled(MentorIcon)`\n  position: relative;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  && path {\n    stroke: #bcc5d3;\n  }\n`;\n\n/** Image avatars. */\nexport default function Avatar({ src, alt, outlined, size, round }) {\n  const theme = {\n    size: sizes[size],\n    outlined,\n    round,\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      {src ? (\n        outlined && !round ? (\n          <Wrapper>\n            <Img src={src} alt={alt} />\n          </Wrapper>\n        ) : (\n          <Img src={src} alt={alt} />\n        )\n      ) : (\n        <DefaultWrapper>\n          <StyledMentorIcon />\n        </DefaultWrapper>\n      )}\n    </ThemeProvider>\n  );\n}\n\nAvatar.defaultProps = {\n  alt: '',\n  outlined: false,\n  size: 'default',\n  round: false,\n};\n\nAvatar.propTypes = {\n  /** Path to the image file */\n  src: PropTypes.string,\n\n  /** Alternate text for the image */\n  alt: PropTypes.string,\n\n  /** Show or hide image outline */\n  outlined: PropTypes.bool,\n\n  /** Pre-set avatar size */\n  size: PropTypes.oneOf(['smaller', 'small', 'default']),\n\n  /** Set to true to make the image round */\n  round: PropTypes.bool,\n};\n"],"sourceRoot":""}